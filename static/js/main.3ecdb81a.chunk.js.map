{"version":3,"sources":["images/Logo/logo-prelogin.svg","components/Navbar/NavbarPrelogin.js","components/Login/LoginRegisterCard.js","components/Footer/Footer.js","pages/LandingPage.js","components/Login/RegisterComponent.js","pages/RegisterPage.js","components/Login/LoginComponent.js","pages/LoginPage.js","images/Logo/logo-postlogin.svg","components/Navbar/NavbarPostlogin.js","images/Mascots/mascot1.png","images/Mascots/mascot2.png","images/Mascots/mascot3.png","images/Mascots/mascot4.png","images/Mascots/mascot5.png","images/Mascots/mascot6.png","images/Mascots/mascot7.png","images/Mascots/mascot8.png","images/Mascots/mascot9.png","images/Mascots/mascot10.png","images/Mascots/mascot11.png","images/Mascots/mascot12.png","images/Mascots/mascot13.png","images/Mascots/mascot14.png","images/Mascots/mascot15.png","images/Mascots/mascot16.png","images/Mascots/mascot17.png","images/Mascots/mascot18.png","images/Mascots/mascot19.png","images/Mascots/mascot20.png","images/Mascots/mascot21.png","images/Mascots/mascot22.png","images/Mascots/mascot23.png","images/Mascots/mascot24.png","images/Mascots/blank-image.PNG","images/Rewards/orange.png","images/Rewards/head-scarf.png","images/Rewards/sky.png","images/Rewards/mouth.png","images/Rewards/cat.png","images/Rewards/croissant.png","images/Rewards/red-hair.png","images/Rewards/mountains.png","images/Rewards/bag.png","images/Rewards/bear.png","images/Rewards/cake.png","images/Rewards/old-man.png","images/Rewards/egg.png","images/Rewards/heart.png","images/Rewards/fingers-crossed.png","images/Rewards/avocado.png","images/Rewards/black-hat.png","images/Rewards/globe.png","images/Rewards/glasses.png","images/Rewards/milk.png","images/Rewards/strawberry.png","images/Rewards/helmet-man.png","images/Rewards/coffee.png","images/Rewards/love-letter.png","images/Rewards/calculator-badge.png","components/Utils.js","components/Sidebar/Sidebar.js","components/UserInfoTable/UserInfoTable.js","components/UserInfo/UserInfo.js","pages/FrontPage.js","components/Navbar/NavbarPracticeMode.js","images/Icons/SpeakBoble.svg","components/PracticeSection/MultipleChoice.js","pages/PracticePage.js","components/EditMascot/EditMascot.js","pages/EditMascotPage.js","components/RewardSection/RewardSection.js","pages/RewardPage.js","components/Reset/RequestReset.js","pages/Reset.js","components/BadgeInfo/BadgeInfo.js","pages/BadgeInfoPage.js","images/Break/breakCamel.png","components/Break/Break.js","pages/BreakPage.js","components/Contact/Contact.js","pages/ContactPage.js","App.js","reportWebVitals.js","index.js"],"names":["NavbarPrelogin","history","useHistory","Container","fluid","className","onClick","e","preventDefault","push","Row","Col","src","Logo","alt","LoginRegisterCard","useEffect","hotjar","initialize","size","color","ButtonToolbar","Button","Footer","LandingPage","style","height","display","flexDirection","justifyContent","RegisterComponent","useState","username","setUsername","password","setPassword","email","setEmail","getRandomInt","max","Math","floor","random","handleReg","a","Swal","fire","title","text","icon","confirmButtonText","console","log","user","Parse","User","set","undefined","randomEmail","date","Date","toLocaleDateString","add","signUp","message","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","target","value","variant","RegisterPage","LoginComponent","handleLogUser","length","logIn","get","active","find","element","save","LoginPage","NavbarPostlogin","resetTimer","student","current","handleLogOut","logOut","handleHome","getMascotImage","index","Mascot1","Mascot2","Mascot3","Mascot4","Mascot5","Mascot6","Mascot7","Mascot8","Mascot9","Mascot10","Mascot11","Mascot12","Mascot13","Mascot14","Mascot15","Mascot16","Mascot17","Mascot18","Mascot19","Mascot20","Mascot21","Mascot22","Mascot23","Mascot24","BlankImage","getRewardImage","Badge1","Badge2","Badge3","Badge4","Badge5","Badge6","Badge7","Badge8","Badge9","Badge10","Badge11","Badge12","Badge13","Badge14","Badge15","Badge16","Badge17","Badge18","Badge19","Badge20","Badge21","Badge22","Badge23","Badge24","Badge25","Sidebar","isOpen","toggle","rewards","setRewards","owned_rewards","setStudentRewards","hasWonReward","setHasWonReward","fetchRewards","Rewards","Object","extend","query","Query","result","retrieveStudent","active_days","wonRewardId","getActiveDayReward","includes","points","rewardPoints","maxWidth","fontSize","marginBottom","map","reward","id","indexOf","attributes","description","UserInfoTable","total_points","total_answered_questions","Table","scope","UserInfo","setIsOpen","setTotal_points","set_active_days","setTotal_answered_questions","active_mascot_index","setActiveMascotIndex","retrieveUser","activeMascot","fetchMascots","activeMascotIndex","active_mascot_id","Mascots","mascotArray","mascotIdArray","obj","mascotIndex","width","Image","FrontPage","NavbarPracticeMode","setPoints","totalPoints","fetchPoints","lg","MultipleChoice","level","setLevel","count","setCount","showHint","setShowHint","showExplanation","setShowExplanation","showMotivation","setShowMotivation","showWarning","setShowWarning","setDescription","options","setOptions","chosenOption","setChosenOption","correct_answer","setCorrectAnswer","hint","setHint","explanation","setExplanation","questionImage","setQuestionImage","explanationImage","setExplanationImage","currentQuestionId","setId","setTotalPoints","category","setCategory","submitted","setSubmitted","motivationMessage","setMotivationMessage","motivationH1","setMotivationH1","motivationH1Correct","correctMotivation","wrongMotivation","motivationH1Wrong","hasOptionFraction","setHasOptionFraction","fetchQuestion","info","activeMascotId","equalTo","question","foundQuestion","i","currentId","correct","questionImageURL","_url","explanationImageURL","regex","matches","matchAll","resultstring","end","newHint","substring","getRandomCategory","categories","getRandomMotivation","motivationArray","handleChange","toggleHint","checkAnswer","option","optionClass","handleSubmit","studentLevel","initialCount","increment","new_total_points","total_correct","total_answered","getTotalAnsweredReward","showDenyButton","denyButtonText","then","isConfirmed","isDenied","close","getTotalCorrectReward","originalpoints","getExplanationReward","timer","setInterval","handleBreakTime","clearInterval","charAt","toUpperCase","slice","Card","Body","Title","as","Check","label","dangerouslySetInnerHTML","__html","name","disabled","totalexplanation","event","go","md","SpeakBoble","PracticePage","EditMascot","mascots","setMascots","owned_mascot_ids","setOwnedMascotIds","setActiveMascotId","handleGoBack","removeBlank","filter","required_points","fetchStudent","owned","getMascotReward","mascot","outline","boxShadow","Img","Text","mascotId","pickMascot","mascotPrice","hasWon","buyMascot","EditMascotPage","RewardSection","imgsrc","setImage","getReward","reward_badge_ids","reward_id","at","alert","rewardArray","first","goBack","RewardPage","RequestReset","doRequestPasswordReset","requestPasswordReset","Reset","BadgeInfo","Break","Camel","Contact","form","useRef","ref","action","emailjs","sendForm","error","reset","ContactPage","margin","App","exact","path","component","Request","BadgeInfoPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","serverURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ecdb81a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-prelogin.9a9825cf.svg\";","import React from \"react\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport Logo from \"../../images/Logo/logo-prelogin.svg\";\nimport \"./NavbarPrelogin.css\";\nimport { useHistory } from \"react-router\";\n\nexport default function NavbarPrelogin() {\n  const history = useHistory();\n\n  const handleBack = (e) => {\n    e.preventDefault();\n    history.push(\"/\");\n  };\n\n  return (\n    <Container fluid className=\"navbar-prelogin\" onClick={handleBack}>\n      <Row className=\"row-prelogin\">\n        <Col>\n          <div className=\"logo-container-prelogin\">\n            <img\n              className=\"logo-prelogin\"\n              src={Logo}\n              alt=\"Logo of a calculator\"\n            ></img>\n          </div>\n        </Col>\n        <Col className=\"app-name-col-prelogin\">\n          <h5 className=\"navbar-brand-prelogin\">Maths Camp</h5>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Tree, CardList, Key } from \"react-bootstrap-icons\";\nimport { useHistory } from \"react-router\";\nimport { Container, Button, ButtonToolbar } from \"react-bootstrap\";\nimport \"./LoginRegisterCard.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { hotjar } from \"react-hotjar\";\n\nexport default function LoginRegisterCard() {\n  const history = useHistory();\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    history.push(\"/login\");\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    history.push(\"/register\");\n  };\n\n  useEffect(() => {\n    hotjar.initialize(2701912);\n  }, []);\n\n  return (\n    <Container className=\"login-container\">\n      <div className=\"text-center\">\n        <Tree size={30} color=\"#4D4D4D\" />\n        <h1 className=\"login-register-h1\">\n          Welcome to <br />\n          Maths Camp\n        </h1>\n        <p className=\"login-register-p\">Where exercising your brain is fun.</p>\n      </div>\n      <ButtonToolbar className=\"btn-toolbar login-register-toolbar\">\n        <Button onClick={handleRegister} className=\"register-btn landing-btn\">\n          Register\n          <br />\n          <CardList size={70} />\n        </Button>\n        <Button onClick={handleLogin} className=\"login-btn landing-btn\">\n          Log in\n          <br />\n          <Key size={70} />\n        </Button>\n      </ButtonToolbar>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer-c\">\n      <p className=\"rights\">\n        ©2021 All rights reserved. Maths Camp is created by Anne Schjødt and\n        Frederikke Drejer in collaboration with IT University of Copenhagen\n      </p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import NavBarPre from \"../components/Navbar/NavbarPrelogin\";\nimport LoginRegisterCard from \"../components/Login/LoginRegisterCard\";\nimport Footer from \"../components/Footer/Footer\";\n\nexport default function LandingPage() {\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <NavBarPre />\n      <LoginRegisterCard />\n      <Footer />\n    </div>\n  );\n}\n","import { Container, Form, Col, Row, Button } from \"react-bootstrap\";\nimport { CardList, Tree } from \"react-bootstrap-icons\";\nimport { useHistory } from \"react-router\";\nimport React, { useState, useEffect } from \"react\";\nimport Parse from \"parse\";\nimport Swal from \"sweetalert2\";\nimport \"./RegisterComponent.css\";\nimport { hotjar } from \"react-hotjar\";\n\nexport default function RegisterComponent() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const history = useHistory();\n\n  const updateUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const generateRandomEmail = () => {\n    const randomEmail = \"random\" + getRandomInt(1000) + \"@email.com\";\n    return randomEmail;\n  };\n\n  const getRandomInt = (max) => {\n    return Math.floor(Math.random() * max);\n  };\n\n  /*Signs the user in if there is a password and a username. signUp() checks \n  if the username and email are unique and stores the password securely */\n  const handleReg = async (e) => {\n    e.preventDefault();\n    if (password === \"\" || username === \"\") {\n      Swal.fire({\n        title: \"Oops!\",\n        text: \"You need to fill out a username and password\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n      return;\n    }\n    console.log(\"I am setting the users information\");\n    const user = new Parse.User();\n    user.set(\"username\", username);\n    user.set(\"password\", password);\n    if (email == \"\" || email == undefined) {\n      const randomEmail = generateRandomEmail();\n      user.set(\"email\", randomEmail);\n    } else {\n      user.set(\"email\", email);\n    }\n    var date = new Date().toLocaleDateString();\n    user.add(\"active_days\", date);\n    user.add(\"owned_mascot_ids\", \"arB9fEWmFp\");\n    try {\n      await user.signUp();\n      history.push(\"/frontpage\");\n    } catch (error) {\n      Swal.fire({\n        title: \"Oops!\",\n        text:\n          \"Something went wrong while registering you as a user: \" +\n          error.message +\n          \" Please try again!\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    hotjar.initialize(2701912);\n  }, []);\n\n  return (\n    <Container className=\"login-container\">\n      <div className=\"text-center\">\n        <Tree size={30} color=\"#4D4D4D\" />\n        <h1 className=\"register-h1\">Welcome!</h1>\n        <p className=\"register-p\">Create a user and play today</p>\n      </div>\n      <Container className=\"form-container\">\n        <Row>\n          <Col>\n            <Form onSubmit={handleReg}>\n              <Form.Group controlId=\"formUserName\" className=\"upperform\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control\n                  type=\"name\"\n                  placeholder=\"Enter a username\"\n                  onChange={updateUsername}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formPassword\" className=\"upperform\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter a password\"\n                  onChange={updatePassword}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formEmail\" className=\"upperform\">\n                <Form.Label>Parental email (optional)</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter an email\"\n                  onChange={updateEmail}\n                />\n                <p className=\"information-text\">\n                  This email will be used for password recovery\n                </p>\n              </Form.Group>\n              <Button className=\"registerbtn\" variant=\"primary\" type=\"submit\">\n                Register <CardList />\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  );\n}\n","import NavBarPre from \"../components/Navbar/NavbarPrelogin\";\nimport RegisterComponent from \"../components/Login/RegisterComponent\";\nimport Footer from \"../components/Footer/Footer\";\n\nexport default function RegisterPage() {\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <NavBarPre />\n      <RegisterComponent />\n      <Footer />\n    </div>\n  );\n}\n","import { Key, Tree } from \"react-bootstrap-icons\";\nimport { Container, Form, Col, Row, Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router\";\nimport React, { useState, useEffect } from \"react\";\nimport Parse from \"parse\";\nimport Swal from \"sweetalert2\";\nimport \"./LoginComponent.css\";\nimport { hotjar } from \"react-hotjar\";\n\nexport default function LoginComponent() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  const updateUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogUser = async (e) => {\n    e.preventDefault();\n    if (password === \"\" || username === \"\") {\n      Swal.fire({\n        title: \"Oops!\",\n        text: \"You need to fill out a username and password\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n    }else if (password.length > 0 || username.length > 0){\n      try {\n        const user = await Parse.User.logIn(username, password);\n        if (user) {\n          var active = await user.get(\"active_days\");\n          var date = new Date().toLocaleDateString();\n          if (!active.find((element) => element === date)) {\n            user.add(\"active_days\", date);\n            user.save();\n          }\n          history.push(\"/frontpage\");\n        }\n      } catch (error) {\n        Swal.fire({\n          title: \"Oops!\",\n          text: \"The username or password is incorrect!\",\n          icon: \"error\",\n          confirmButtonText: \"OK\",\n        });\n      }\n    }  \n  };\n\n  const handleResetPassword = () => {\n    history.push(\"/requestReset\");\n  };\n\n  useEffect(() => {\n    hotjar.initialize(2701912);\n  }, []);\n\n  return (\n    <Container className=\"login-container\">\n      <div className=\"text-center\">\n        <Tree size={30} color=\"#4D4D4D\" />\n        <h1 className=\"welcome-h1\">Welcome back!</h1>\n        <p className=\"welcome-p\">Log in to play</p>\n      </div>\n      <Container className=\"form-container\">\n        <Row>\n          <Col>\n            <Form onSubmit={handleLogUser}>\n              <Form.Group controlId=\"formUserName\" className=\"upperform\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control\n                  type=\"name\"\n                  placeholder=\"Enter your username\"\n                  onChange={updateUsername}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formPassword\" className=\"upperform\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter your password\"\n                  onChange={updatePassword}\n                />\n                <p className=\"forgot-text\" onClick={handleResetPassword}>\n                  Forgot your password? Click me!\n                </p>\n              </Form.Group>\n              <Button className=\"login-button\" variant=\"primary\" type=\"submit\">\n                Log in <Key size={20} />\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  );\n}\n","import NavBarPre from \"../components/Navbar/NavbarPrelogin\";\nimport LoginComponent from \"../components/Login/LoginComponent\";\nimport Footer from \"../components/Footer/Footer\";\n\nexport default function LoginPage() {\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <NavBarPre />\n      <LoginComponent />\n      <Footer />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo-postlogin.7ab2393a.svg\";","import React from \"react\";\nimport { Button, Container, Col, Row } from \"react-bootstrap\";\nimport { useHistory } from \"react-router\";\nimport { DoorOpen, HouseDoor } from \"react-bootstrap-icons\";\nimport { BsMailbox } from \"react-icons/bs\";\nimport Logo from \"../../images/Logo/logo-postlogin.svg\";\nimport Parse from \"parse\";\nimport \"./NavbarPostlogin.css\";\n\nexport default function NavbarPostlogin() {\n  const history = useHistory();\n\n  const resetTimer = async () => {\n    const student = Parse.User.current();\n    if (student) {\n      try {\n        student.set(\"practice_timer_count\", 1200);\n        await student.save();\n      } catch {\n        console.log(\"Timer did not reset\");\n      }\n    }\n  };\n\n  const handleLogOut = async (e) => {\n    e.preventDefault();\n    await resetTimer();\n    Parse.User.logOut();\n    history.push(\"/\");\n  };\n\n  const handleHome = (e) => {\n    e.preventDefault();\n    history.push(\"/frontpage\");\n  };\n\n  const handleSendEmail = (e) => {\n    e.preventDefault();\n    history.push(\"/contact\");\n  };\n\n  return (\n    <Container fluid className=\"navbar-postlogin\">\n      <Row>\n        <Col>\n          <img\n            className=\"logo-postlogin\"\n            src={Logo}\n            alt=\"Logo of a calculator\"\n            onClick={handleHome}\n          ></img>\n        </Col>\n        <Col className=\"app-name-col-postlogin\">\n          <h6 className=\"navbar-brand-postlogin\">Maths Camp</h6>\n        </Col>\n        <Col>\n          <div className=\"btn-toolbar postlogin-toolbar\">\n            <Button\n              className=\"btn-primary lg home-btn-postlogin\"\n              onClick={handleHome}\n            >\n              Home <HouseDoor size={15} />\n            </Button>\n            <Button\n              className=\"contact-link contact-btn\"\n              onClick={handleSendEmail}\n            >\n              Contact <BsMailbox size={15} />\n            </Button>\n            <Button\n              className=\"btn-primary lg logout-btn-postlogin\"\n              onClick={handleLogOut}\n            >\n              Log out <DoorOpen size={15} />\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/mascot1.94682470.png\";","export default __webpack_public_path__ + \"static/media/mascot2.6b178a17.png\";","export default __webpack_public_path__ + \"static/media/mascot3.985f864f.png\";","export default __webpack_public_path__ + \"static/media/mascot4.c7f4c018.png\";","export default __webpack_public_path__ + \"static/media/mascot5.e8049a3c.png\";","export default __webpack_public_path__ + \"static/media/mascot6.f11f238c.png\";","export default __webpack_public_path__ + \"static/media/mascot7.cacb936c.png\";","export default __webpack_public_path__ + \"static/media/mascot8.0812ee4c.png\";","export default __webpack_public_path__ + \"static/media/mascot9.52956d24.png\";","export default __webpack_public_path__ + \"static/media/mascot10.81176592.png\";","export default __webpack_public_path__ + \"static/media/mascot11.3398e0b3.png\";","export default __webpack_public_path__ + \"static/media/mascot12.e618046c.png\";","export default __webpack_public_path__ + \"static/media/mascot13.3c5f4097.png\";","export default __webpack_public_path__ + \"static/media/mascot14.ae342c59.png\";","export default __webpack_public_path__ + \"static/media/mascot15.60d4dc05.png\";","export default __webpack_public_path__ + \"static/media/mascot16.b95cfb63.png\";","export default __webpack_public_path__ + \"static/media/mascot17.f1c18f6a.png\";","export default __webpack_public_path__ + \"static/media/mascot18.ab9e0475.png\";","export default __webpack_public_path__ + \"static/media/mascot19.09b164b3.png\";","export default __webpack_public_path__ + \"static/media/mascot20.5abc4ee0.png\";","export default __webpack_public_path__ + \"static/media/mascot21.f987818f.png\";","export default __webpack_public_path__ + \"static/media/mascot22.d63f3e81.png\";","export default __webpack_public_path__ + \"static/media/mascot23.22f60342.png\";","export default __webpack_public_path__ + \"static/media/mascot24.59017d10.png\";","export default __webpack_public_path__ + \"static/media/blank-image.60cfc62d.PNG\";","export default __webpack_public_path__ + \"static/media/orange.40586fa1.png\";","export default __webpack_public_path__ + \"static/media/head-scarf.7c85250e.png\";","export default __webpack_public_path__ + \"static/media/sky.33f7eb59.png\";","export default __webpack_public_path__ + \"static/media/mouth.c0689d7f.png\";","export default __webpack_public_path__ + \"static/media/cat.b764e54e.png\";","export default __webpack_public_path__ + \"static/media/croissant.e4cfdfe6.png\";","export default __webpack_public_path__ + \"static/media/red-hair.4ace0ba2.png\";","export default __webpack_public_path__ + \"static/media/mountains.bee317de.png\";","export default __webpack_public_path__ + \"static/media/bag.9adccfb9.png\";","export default __webpack_public_path__ + \"static/media/bear.04ad86ed.png\";","export default __webpack_public_path__ + \"static/media/cake.81477d6b.png\";","export default __webpack_public_path__ + \"static/media/old-man.1f67452d.png\";","export default __webpack_public_path__ + \"static/media/egg.c64a509a.png\";","export default __webpack_public_path__ + \"static/media/heart.66be8194.png\";","export default __webpack_public_path__ + \"static/media/fingers-crossed.69f09aba.png\";","export default __webpack_public_path__ + \"static/media/avocado.8a01b7f0.png\";","export default __webpack_public_path__ + \"static/media/black-hat.fab0ea28.png\";","export default __webpack_public_path__ + \"static/media/globe.b0446136.png\";","export default __webpack_public_path__ + \"static/media/glasses.3998c3b1.png\";","export default __webpack_public_path__ + \"static/media/milk.cf6903e7.png\";","export default __webpack_public_path__ + \"static/media/strawberry.d8dbd802.png\";","export default __webpack_public_path__ + \"static/media/helmet-man.0a26f7b3.png\";","export default __webpack_public_path__ + \"static/media/coffee.1f0958d6.png\";","export default __webpack_public_path__ + \"static/media/love-letter.6d60dcee.png\";","export default __webpack_public_path__ + \"static/media/calculator-badge.09340ec3.png\";","import Mascot1 from \"../images/Mascots/mascot1.png\";\nimport Mascot2 from \"../images/Mascots/mascot2.png\";\nimport Mascot3 from \"../images/Mascots/mascot3.png\";\nimport Mascot4 from \"../images/Mascots/mascot4.png\";\nimport Mascot5 from \"../images/Mascots/mascot5.png\";\nimport Mascot6 from \"../images/Mascots/mascot6.png\";\nimport Mascot7 from \"../images/Mascots/mascot7.png\";\nimport Mascot8 from \"../images/Mascots/mascot8.png\";\nimport Mascot9 from \"../images/Mascots/mascot9.png\";\nimport Mascot10 from \"../images/Mascots/mascot10.png\";\nimport Mascot11 from \"../images/Mascots/mascot11.png\";\nimport Mascot12 from \"../images/Mascots/mascot12.png\";\nimport Mascot13 from \"../images/Mascots/mascot13.png\";\nimport Mascot14 from \"../images/Mascots/mascot14.png\";\nimport Mascot15 from \"../images/Mascots/mascot15.png\";\nimport Mascot16 from \"../images/Mascots/mascot16.png\";\nimport Mascot17 from \"../images/Mascots/mascot17.png\";\nimport Mascot18 from \"../images/Mascots/mascot18.png\";\nimport Mascot19 from \"../images/Mascots/mascot19.png\";\nimport Mascot20 from \"../images/Mascots/mascot20.png\";\nimport Mascot21 from \"../images/Mascots/mascot21.png\";\nimport Mascot22 from \"../images/Mascots/mascot22.png\";\nimport Mascot23 from \"../images/Mascots/mascot23.png\";\nimport Mascot24 from \"../images/Mascots/mascot24.png\";\nimport BlankImage from \"../images/Mascots/blank-image.PNG\";\nimport Badge1 from \"../images/Rewards/orange.png\";\nimport Badge2 from \"../images/Rewards/head-scarf.png\";\nimport Badge3 from \"../images/Rewards/sky.png\";\nimport Badge4 from \"../images/Rewards/mouth.png\";\nimport Badge5 from \"../images/Rewards/cat.png\";\nimport Badge6 from \"../images/Rewards/croissant.png\";\nimport Badge7 from \"../images/Rewards/red-hair.png\";\nimport Badge8 from \"../images/Rewards/mountains.png\";\nimport Badge9 from \"../images/Rewards/bag.png\";\nimport Badge10 from \"../images/Rewards/bear.png\";\nimport Badge11 from \"../images/Rewards/cake.png\";\nimport Badge12 from \"../images/Rewards/old-man.png\";\nimport Badge13 from \"../images/Rewards/egg.png\";\nimport Badge14 from \"../images/Rewards/heart.png\";\nimport Badge15 from \"../images/Rewards/fingers-crossed.png\";\nimport Badge16 from \"../images/Rewards/avocado.png\";\nimport Badge17 from \"../images/Rewards/black-hat.png\";\nimport Badge18 from \"../images/Rewards/globe.png\";\nimport Badge19 from \"../images/Rewards/glasses.png\";\nimport Badge20 from \"../images/Rewards/milk.png\";\nimport Badge21 from \"../images/Rewards/strawberry.png\";\nimport Badge22 from \"../images/Rewards/helmet-man.png\";\nimport Badge23 from \"../images/Rewards/coffee.png\";\nimport Badge24 from \"../images/Rewards/love-letter.png\";\nimport Badge25 from \"../images/Rewards/calculator-badge.png\";\nimport Swal from \"sweetalert2\";\n\n/*Returns a mascot image based on the index of the mascot in the mascot array \nretrieved from the database*/\nexport const getMascotImage = (index) => {\n  switch(index){\n    case 0: {\n      return Mascot1;\n    }\n    case 1: {\n      return Mascot2;\n    }\n    case 2: {\n      return Mascot3;\n    }\n    case 3: {\n      return Mascot4;\n    }\n    case 4: {\n      return Mascot5;\n    }\n    case 5: {\n      return Mascot6;\n    }\n    case 6: {\n      return Mascot7;\n    }\n    case 7: {\n      return Mascot8;\n    }\n    case 8: {\n      return Mascot9;\n    }\n    case 9: {\n      return Mascot10;\n    }\n    case 10: {\n      return Mascot11;\n    }\n    case 11: {\n      return Mascot12;\n    }\n    case 12: {\n      return Mascot13;\n    }\n    case 13: {\n      return Mascot14;\n    }\n    case 14: {\n      return Mascot15;\n    }\n    case 15: {\n      return Mascot16;\n    }\n    case 16: {\n      return Mascot17;\n    }\n    case 17: {\n      return Mascot18;\n    }\n    case 18: {\n      return Mascot19;\n    }\n    case 19: {\n      return Mascot20;\n    }\n    case 20: {\n      return Mascot21;\n    }\n    case 21: {\n      return Mascot22;\n    }\n    case 22: {\n      return Mascot23;\n    }\n    case 23: {\n      return Mascot24;\n    }\n    case 24:{\n      return BlankImage;\n    }\n    default:\n      return BlankImage;\n  }\n}\n\n/*Returns a reward image based on the index of the reward in the reward array \nretrieved from the database*/\nexport const getRewardImage = (index) => {\n  switch (index) {\n    case 0: {\n      return Badge1;\n    }\n    case 5: {\n      return Badge2;\n    }\n    case 10: {\n      return Badge3;\n    }\n    case 15: {\n      return Badge4;\n    }\n    case 20: {\n      return Badge5;\n    }\n    case 1: {\n      return Badge6;\n    }\n    case 6: {\n      return Badge7;\n    }\n    case 11: {\n      return Badge8;\n    }\n    case 16: {\n      return Badge9;\n    }\n    case 21: {\n      return Badge10;\n    }\n    case 2: {\n      return Badge11;\n    }\n    case 7: {\n      return Badge12;\n    }\n    case 12: {\n      return Badge13;\n    }\n    case 17: {\n      return Badge14;\n    }\n    case 22: {\n      return Badge15;\n    }\n    case 3: {\n      return Badge16;\n    }\n    case 8: {\n      return Badge17;\n    }\n    case 13: {\n      return Badge18;\n    }\n    case 18: {\n      return Badge19;\n    }\n    case 23: {\n      return Badge20;\n    }\n    case 4: {\n      return Badge21;\n    }\n    case 9: {\n      return Badge22;\n    }\n    case 14: {\n      return Badge23;\n    }\n    case 19: {\n      return Badge24;\n    }\n    case 24: {\n      return Badge25;\n    }\n    default:\n      console.log(\"The mascot images cannot be loaded\");\n      Swal.fire({\n        title: \"Oops, something went wrong!\",\n        text: \"Please try to refresh the page\",\n        icon: \"error\",\n        confirmButtonText: \"OK\"\n      })\n  }\n};","import React, { useEffect, useState } from \"react\";\nimport Parse from \"parse\";\nimport \"./Sidebar.css\";\nimport Swal from \"sweetalert2\";\nimport { Button } from \"react-bootstrap\";\nimport {\n  BsChevronDoubleRight,\n  BsChevronDoubleLeft,\n  BsTrophy,\n  BsX,\n} from \"react-icons/bs\";\nimport { useHistory } from \"react-router\";\nimport { getRewardImage } from \"../Utils\";\n\nexport default function Sidebar({ isOpen, toggle }) {\n  const [rewards, setRewards] = useState([]);\n  const [owned_rewards, setStudentRewards] = useState([]);\n  const [hasWonReward, setHasWonReward] = useState(false);\n  const history = useHistory();\n\n  const fetchRewards = async () => {\n    const Rewards = new Parse.Object.extend(\"Reward\");\n    const query = new Parse.Query(Rewards);\n    const result = await query.find();\n    setRewards(result);\n  };\n\n  useEffect(() => {\n    fetchRewards();\n  }, []);\n\n  const retrieveStudent = async () => {\n    const student = Parse.User.current();\n    if (student) {\n      var active_days = student.get(\"active_days\");\n      var wonRewardId = getActiveDayReward(active_days.length);\n      var rewards = student.get(\"reward_badge_ids\");\n      if (wonRewardId !== \"\" && !rewards.includes(wonRewardId)) {\n        student.add(\"reward_badge_ids\", wonRewardId);\n        student.save();\n        rewards = await student.get(\"reward_badge_ids\");\n        setHasWonReward(true);\n        const points = student.get(\"total_points\");\n        const rewardPoints = points + 50;\n        student.set(\"total_points\", rewardPoints);\n      }\n      setStudentRewards(rewards);\n    } else {\n      console.log(\"The user couldn't be retrieved\");\n      Swal.fire({\n        title: \"Oops, something went wrong!\",\n        text: \"Please try to refresh the page\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    retrieveStudent();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getActiveDayReward = (length) => {\n    switch (length) {\n      case 3: {\n        return \"Xn9GW6PD18\";\n      }\n      case 5: {\n        return \"BDOyMkhoXE\";\n      }\n      case 7: {\n        return \"1qWSzGiLPd\";\n      }\n      case 11: {\n        return \"ThWu7K9V65\";\n      }\n      case 15: {\n        return \"K4Sp4TC7SA\";\n      }\n      default: {\n        return \"\";\n      }\n    }\n  };\n\n  const handleSeeReward = () => {\n    history.push(\"/reward\");\n  };\n\n  const handleSeeBadgePage = () => {\n    history.push(\"/badgeinfo\");\n  };\n\n  const handleClose = () => {\n    setHasWonReward(false);\n  };\n\n  return (\n    <div\n      className=\"sidebar-container\"\n      style={{ maxWidth: isOpen ? \"450px\" : \"250px\" }}\n    >\n      <div className=\"sidebar-header\">\n        <h1\n          className=\"sidebarH1\"\n          style={{\n            fontSize: isOpen ? \"\" : \"16px\",\n            marginBottom: isOpen ? \"\" : \"0px\",\n          }}\n        >\n          Your Collection\n        </h1>\n        {isOpen ? (\n          <BsChevronDoubleLeft\n            onClick={toggle}\n            className=\"arrow-icon\"\n            alt=\"icon arrow\"\n          ></BsChevronDoubleLeft>\n        ) : (\n          <BsChevronDoubleRight\n            onClick={toggle}\n            className=\"arrow-icon\"\n            alt=\"icon arrow\"\n          ></BsChevronDoubleRight>\n        )}\n      </div>\n      {hasWonReward ? (\n        <div className=\"text-center reward_container\">\n          <p className=\"reward_message\">\n            Congratulations! You have won a reward, check it out!\n          </p>\n          <Button className=\"see_reward_btn\" onClick={handleSeeReward}>\n            See reward <BsTrophy />\n          </Button>\n          <Button className=\"close_btn\" onClick={handleClose}>\n            Close <BsX size={21} />\n          </Button>\n        </div>\n      ) : (\n        <div></div>\n      )}\n      <div>\n        <p className=\"sidebarP\" style={{ display: isOpen ? \"\" : \"none\" }}>\n          Hover over the badges to learn how to win them, or read more{\" \"}\n          <span className=\"pointer-cursor\" onClick={handleSeeBadgePage}>\n            here\n          </span>\n        </p>\n      </div>\n      <div className=\"badge-col text-center\" style={{}}>\n        {rewards.map((reward) => (\n          <div className=\"reward-image-container\" key={reward.id}>\n            {owned_rewards.includes(reward.id) ? (\n              <img\n                alt=\"reward\"\n                className=\"unlocked-badge selector\"\n                src={getRewardImage(rewards.indexOf(reward))}\n                title={reward.attributes.description}\n              />\n            ) : (\n              <img\n                alt=\"reward\"\n                className=\"locked-badge selector\"\n                src={getRewardImage(rewards.indexOf(reward))}\n                title={reward.attributes.description}\n              />\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport \"./UserInfoTable.css\";\nimport { BsFillSunFill, BsFillFilterSquareFill, BsGem } from \"react-icons/bs\";\n\nexport default function UserInfoTable({\n  total_points,\n  active_days,\n  total_answered_questions,\n}) {\n  return (\n    <Table>\n      <thead className=\"thead-light table-header\">\n        <tr>\n          <th scope=\"col\" className=\"table-header\">\n            CATEGORY\n          </th>\n          <th scope=\"col\" className=\"table-header\">\n            AMOUNT\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td className=\"body-text\">\n            <BsFillSunFill\n              size={25}\n              className=\"category-icon\"\n              color={\"#F2B84B\"}\n            />\n            Days you played\n          </td>\n          <td data-label=\"Days played\" className=\"body-text\">\n            {active_days} days\n          </td>\n        </tr>\n        <tr>\n          <td className=\"body-text\">\n            <BsFillFilterSquareFill\n              size={25}\n              className=\"category-icon\"\n              color={\"#FF6665\"}\n            />\n            Questions you answered\n          </td>\n          <td data-label=\"Questions you answered\" className=\"body-text\">\n            <span>{total_answered_questions} questions</span>\n          </td>\n        </tr>\n        <tr>\n          <td className=\"body-text\">\n            <BsGem size={25} className=\"category-icon\" color={\"#7C7EF2\"} />\n            Your Points\n          </td>\n          <td data-label=\"Your points\" className=\"body-text\">\n            <span>{total_points} points</span>\n          </td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Parse from \"parse\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport { useHistory } from \"react-router\";\nimport { Button, Image } from \"react-bootstrap\";\nimport { BsPerson } from \"react-icons/bs\";\nimport { getMascotImage } from \"../Utils\";\nimport UserInfoTable from \"../UserInfoTable/UserInfoTable\";\nimport \"./UserInfo.css\";\nimport { hotjar } from \"react-hotjar\";\n\nexport default function UserInfo() {\n  const [isOpen, setIsOpen] = useState(true);\n  const [username, setUsername] = useState(\"\");\n  const [total_points, setTotal_points] = useState(0);\n  const [active_days, set_active_days] = useState([]);\n  const [total_answered_questions, setTotal_answered_questions] = useState(0);\n  const [active_mascot_index, setActiveMascotIndex] = useState(24);\n  const history = useHistory();\n\n  const handlePractice = (e) => {\n    e.preventDefault();\n    history.push(\"/practice\");\n  };\n\n  const handleChangeMascot = (e) => {\n    e.preventDefault();\n    history.push(\"/mascot\");\n  };\n\n  const toggle = () => {\n    if (isOpen) {\n      setIsOpen(false);\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const retrieveUser = async (e) => {\n    const user = Parse.User.current();\n    if (user) {\n      var username = user.get(\"username\");\n      var total_points = user.get(\"total_points\");\n      var active_days = user.get(\"active_days\");\n      var total_answered_questions = user.get(\"total_answered_questions\");\n      var activeMascot = user.get(\"active_mascot_id\");\n      var activeMascotIndex = await fetchMascots(activeMascot);\n      setUsername(username);\n      setTotal_points(total_points);\n      set_active_days(active_days);\n      setTotal_answered_questions(total_answered_questions);\n      setActiveMascotIndex(activeMascotIndex);\n    } else {\n      e.preventDefault();\n      history.push(\"/login\");\n    }\n  };\n\n  useEffect(() => {\n    retrieveUser();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    hotjar.initialize(2701912);\n  }, []);\n\n  const fetchMascots = async (active_mascot_id) => {\n    const Mascots = new Parse.Object.extend(\"Mascot\");\n    const query = new Parse.Query(Mascots);\n    const mascotArray = await query.find();\n    var mascotIdArray = mascotArray.map((obj) => obj.id);\n    var mascotIndex = mascotIdArray.indexOf(active_mascot_id);\n    return mascotIndex;\n  };\n\n  return (\n    <div className=\"user-container\">\n      <div className=\"sidebar-color-container\">\n        <Sidebar isOpen={isOpen} toggle={toggle} />\n      </div>\n      <div\n        className=\"user-info-col\"\n        style={{\n          width: isOpen ? \"70%\" : \"85%\",\n        }}\n      >\n        <div>\n          <h1 className=\"user-welcome-h1\">\n            Welcome {}\n            {username}!\n          </h1>\n        </div>\n        <div>\n          <p className=\"user-p\">\n            Start practicing your math skills to earn points and badges\n          </p>\n        </div>\n        <div className=\"card-mascot-div\">\n          <div className=\"card-div\">\n            <Button onClick={handlePractice} className=\"user-practice-btn\">\n              Start practice\n            </Button>\n          </div>\n          <div className=\"user-mascot-div\">\n            <Image\n              src={getMascotImage(active_mascot_index)}\n              className=\"user-mascot-img\"\n            />\n            <Button\n              onClick={handleChangeMascot}\n              className=\"user-change-mascot-btn\"\n              variant=\"primary\"\n              type=\"submit\"\n            >\n              Change your mascot <BsPerson />\n            </Button>\n          </div>\n        </div>\n        <div>\n          <h2 className=\"user-strike-h2\">Your strikes</h2>\n        </div>\n        <div className=\"table-div\">\n          <UserInfoTable\n            total_points={total_points}\n            active_days={active_days.length}\n            total_answered_questions={total_answered_questions}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Footer from \"../components/Footer/Footer\";\nimport Navbar from \"../components/Navbar/NavbarPostlogin\";\nimport UserInfo from \"../components/UserInfo/UserInfo\";\n\nexport default function FrontPage() {\n  return (\n    <>\n      <Navbar />\n      <UserInfo />\n      <Footer />\n    </>\n  );\n}\n","import React from \"react\";\nimport { Button, Container, Col } from \"react-bootstrap\";\nimport { DoorOpen, HouseDoor, Gem } from \"react-bootstrap-icons\";\nimport { BsMailbox } from \"react-icons/bs\";\nimport { useHistory } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport Parse from \"parse\";\nimport Logo from \"../../images/Logo/logo-prelogin.svg\";\nimport \"./NavbarPracticeMode.css\";\n\nexport default function NavbarPracticeMode() {\n  const [points, setPoints] = useState(0);\n  const history = useHistory();\n\n  const resetTimer = async () => {\n    const student = Parse.User.current();\n    if (student) {\n      try {\n        student.set(\"practice_timer_count\", 1200);\n        await student.save();\n      } catch {\n        console.log(\"Timer did not reset\");\n      }\n    }\n  };\n\n  const handleLogOut = async (e) => {\n    e.preventDefault();\n    await resetTimer();\n    Parse.User.logOut();\n    history.push(\"/\");\n  };\n\n  const handleHome = (e) => {\n    e.preventDefault();\n    history.push(\"/frontpage\");\n  };\n\n  const handleSendEmail = (e) => {\n    e.preventDefault();\n    history.push(\"/contact\");\n  };\n\n  const fetchPoints = () => {\n    const user = Parse.User.current();\n    if (user) {\n      const totalPoints = user.get(\"total_points\");\n      setPoints(totalPoints);\n    }\n  };\n\n  useEffect(() => {\n    fetchPoints();\n  }, []);\n\n  return (\n    <Container fluid className=\"navbar\">\n      <Col>\n        <div className=\"logo-container\">\n          <img\n            className=\"logo\"\n            src={Logo}\n            alt=\"Logo of a calculator\"\n            onClick={handleHome}\n          ></img>\n        </div>\n      </Col>\n      <Col className=\"app-name-col\">\n        <h5 className=\"navbar-brand\">\n          <Gem size={15} color=\"#F4C46B\" /> {points}\n        </h5>\n      </Col>\n      <Col lg={1.5}>\n        <div className=\"btn-toolbar\">\n          <Button className=\"btn-primary lg home-btn\" onClick={handleHome}>\n            Home <HouseDoor size={15} />\n          </Button>\n          <Button\n            className=\"contact-link contact-btn\"\n            onClick={handleSendEmail}\n          >\n            Contact <BsMailbox size={15} />\n          </Button>\n          <Button\n            className=\"btn-primary lg logout-btn-postlogin\"\n            onClick={handleLogOut}\n          >\n            Log out <DoorOpen size={15} />\n          </Button>\n        </div>\n      </Col>\n    </Container>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/SpeakBoble.95a5b408.svg\";","import React, { useState, useEffect } from \"react\";\nimport Parse from \"parse\";\nimport Swal from \"sweetalert2\";\nimport {\n  Container,\n  Row,\n  Form,\n  Col,\n  Button,\n  Card,\n  Image,\n} from \"react-bootstrap\";\nimport {\n  BsLifePreserver,\n  BsCheckCircle,\n  BsChevronRight,\n  BsFileText\n} from \"react-icons/bs\";\nimport { useHistory } from \"react-router\";\nimport { getMascotImage } from \"../Utils\";\nimport SpeakBoble from \"../../images/Icons/SpeakBoble.svg\";\nimport \"./MultipleChoice.css\";\nimport { hotjar } from \"react-hotjar\";\n\nexport default function MultipleChoice() {\n  const [level, setLevel] = useState();\n  const [count, setCount] = useState();\n  const [showHint, setShowHint] = useState(false);\n  const [showExplanation, setShowExplanation] = useState(false);\n  const [showMotivation, setShowMotivation] = useState(false);\n  const [showWarning, setShowWarning] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  const [chosenOption, setChosenOption] = useState(\"\");\n  const [correct_answer, setCorrectAnswer] = useState(\"\");\n  const [hint, setHint] = useState(\"\");\n  const [explanation, setExplanation] = useState(\"\");\n  const [questionImage, setQuestionImage] = useState(\"\");\n  const [explanationImage, setExplanationImage] = useState(\"\");\n  const [currentQuestionId, setId] = useState(\"\");\n  const [total_points, setTotalPoints] = useState(0);\n  const [category, setCategory] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [motivationMessage, setMotivationMessage] = useState(\"\");\n  const [motivationH1, setMotivationH1] = useState(\"\");\n  const motivationH1Correct = [\n    \"Correct!\",\n    \"Well done!\",\n    \"Impressive,\",\n    \"Super!\",\n    \"Outstanding,\",\n    \"Excellent\",\n    \"Cool!\",\n    \"Groovy,\",\n  ];\n  const correctMotivation = [\n    \"You're a true math master. Let's do another question.\",\n    \"You are doing so great! Keep on going.\",\n  ];\n  const wrongMotivation = [\n    \"That wasn’t quite right. Take a look at the explanantion.\",\n    \"Math can be hard. Try taking a look at the explanation.\",\n    \"You still got this! Take a look at the explanation and keep going.\",\n  ];\n  const motivationH1Wrong = [\"Woops!\", \"Oh well..\", \"Next time!\"];\n  const [active_mascot_index, setActiveMascotIndex] = useState(24);\n  const [hasOptionFraction, setHasOptionFraction] = useState(false);\n  const history = useHistory();\n\n  const fetchQuestion = async (info) => {\n    setShowMotivation(false);\n    var activeMascotIndex = await fetchMascots(info.activeMascotId);\n    setActiveMascotIndex(activeMascotIndex);\n    const query = new Parse.Query(\"Questions\");\n    query.equalTo(\"category\", info.category);\n    query.equalTo(\"level\", info.level);\n    //query.equalTo(\"objectId\", \"hIAvfLzfSo\");\n    try {\n      let question = await query.find();\n      let foundQuestion = false;\n      while (!foundQuestion) {\n        let i = getRandomInt(10);\n        const currentId = question[i].id;\n        if (!info.correct.includes(currentId)) {\n          const correct_answer = question[i].get(\"correct_answer\");\n          const description = question[i].get(\"description\");\n          const options = question[i].get(\"options\");\n          const hint = question[i].get(\"hint\");\n          const explanation = question[i].get(\"explanation\");\n          if (question[i].get(\"question_image\")) {\n            const questionImageURL = question[i].get(\"question_image\")._url;\n            setQuestionImage(questionImageURL);\n          }\n          if (question[i].get(\"explanation_image\")) {\n            const explanationImageURL =\n              question[i].get(\"explanation_image\")._url;\n            setExplanationImage(explanationImageURL);\n          }\n          if (options[0].includes(\"/frac\")) {\n            setHasOptionFraction(true);\n            let regex = /{([^}]+)}/g;\n            let result = [];\n            for (let i = 0; i < options.length; i++) {\n              let matches = [...options[i].matchAll(regex)];\n              let resultstring =\n                '<div className=\"fractioncontainer\"><sup><u><big>' +\n                matches[0][1] +\n                '</big></u></sup><br className=\"fractionbr\"/><sup><big>' +\n                matches[1][1] +\n                \"</big></sup></div>\";\n              result.push(resultstring);\n            }\n            setOptions(result);\n          } else {\n            setOptions(options);\n          }\n          setId(currentId);\n          setDescription(description);\n          setCorrectAnswer(correct_answer);\n          if (hint !== undefined) {\n            if (hint.includes(\"/frac\")) {\n              let regex = /{([^}]+)}/g;\n              let matches = [...hint.matchAll(regex)];\n              let resultstring =\n                \"<br/><br/><p> \" +\n                matches[1][1] +\n                \"<br/><u>\" +\n                matches[0][1] +\n                matches[2][1] +\n                \"</u></p>\";\n              let end = hint.indexOf(\"/frac\");\n              let newHint = hint.substring(0, end);\n              setHint(newHint + resultstring);\n            } else {\n              setHint(hint);\n            }\n          } else {\n            setHint(hint);\n          }\n          setExplanation(explanation);\n          foundQuestion = true;\n        } else {\n          console.log(\"The question was in the correct id array\");\n        }\n      }\n    } catch (error) {\n      console.log(`Error! ${error.message}`);\n      Swal.fire({\n        title: \"Oops, something went wrong!\",\n        text: \"Please try to refresh the page\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n    }\n  };\n\n  const retrieveStudent = () => {\n    const category = getRandomCategory();\n    const student = Parse.User.current();\n    try {\n      if (student) {\n        const total_points = student.get(\"total_points\");\n        const correct = student.get(category + \"_correct_ids\");\n        const level = student.get(category + \"_level\");\n        const count = student.get(\"practice_timer_count\");\n        setTotalPoints(total_points);\n        setCategory(category);\n        setCount(count);\n        setLevel(level);\n        var activeMascotId = student.get(\"active_mascot_id\");\n        return { level, correct, category, activeMascotId };\n      }\n    } catch (e) {\n      console.log(\"The user couldn't be retrieved \" + e.message);\n      Swal.fire({\n        title: \"Oops, something went wrong!\",\n        text: \"Please try to refresh the page\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n    }\n  };\n\n  const refreshPage = (e) => {\n    e.preventDefault();\n    hotjar.event(\"new question\");\n    history.go(0);\n  };\n\n  const fetchMascots = async (active_mascot_id) => {\n    const Mascots = new Parse.Object.extend(\"Mascot\");\n    const query = new Parse.Query(Mascots);\n    const mascotArray = await query.find();\n    var mascotIdArray = mascotArray.map((obj) => obj.id);\n    var mascotIndex = mascotIdArray.indexOf(active_mascot_id);\n    return mascotIndex;\n  };\n\n  useEffect(() => {\n    fetchQuestion(retrieveStudent());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    hotjar.initialize(2701912);\n  }, []);\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  const getRandomCategory = () => {\n    const categories = [\"number\", \"algebra\", \"measurement\", \"geometry\"];\n    const randomNumber = getRandomInt(categories.length);\n    const category = categories[randomNumber];\n    return category;\n  };\n\n  const getRandomMotivation = (motivationArray) => {\n    let motivation =\n      motivationArray[Math.floor(Math.random() * motivationArray.length)];\n    return motivation;\n  };\n\n  const handleChange = (e) => {\n    setChosenOption(e.target.value);\n  };\n\n  const toggleHint = () => {\n    if (showHint) {\n      setShowHint(false);\n    } else {\n      setShowWarning(false);\n      setShowHint(true);\n    }\n  };\n\n  const toggleExplanation = () => {\n    if (!showExplanation) {\n      const student = Parse.User.current();\n      if (student && explanation !== undefined) {\n        student.increment(\"checked_explanation\");\n        const totalexplanation = student.get(\"checked_explanation\");\n        if (\n          (totalexplanation % 20 === 0 || totalexplanation === 5) &&\n          0 < totalexplanation &&\n          totalexplanation < 81\n        ) {\n          const reward = getExplanationReward(totalexplanation);\n          student.add(\"reward_badge_ids\", reward);\n          const points = student.get(\"total_points\");\n          const rewardPoints = points + 50;\n          student.set(\"total_points\", rewardPoints);\n          Swal.fire({\n            title: \"Yay! You earned a badge!\",\n            text: \"Click OK to see your badge\",\n            icon: \"success\",\n            showDenyButton: true,\n            confirmButtonText: `OK`,\n            denyButtonText: `Close`,\n          }).then((result) => {\n            if (result.isConfirmed) {\n              history.push(\"/reward\");\n            } else if (result.isDenied) {\n              Swal.close();\n            }\n          });\n        }\n        student.save();\n      }\n      setShowExplanation(true);\n    }\n  };\n\n  const checkAnswer = (option) => {\n    var optionClass = \"\";\n    if (option === chosenOption) {\n      if (option === correct_answer) {\n        optionClass = \"correct-answer\";\n      } else {\n        optionClass = \"wrong-answer\";\n      }\n    }\n    return optionClass;\n  };\n\n  const showSubmitWarning = () => {\n    setShowHint(false);\n    setShowWarning(true);\n  };\n\n  const showSubmitMotivation = () => {\n    setShowWarning(false);\n    setSubmitted(true);\n    setShowMotivation(true);\n    setShowHint(false);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!chosenOption) {\n      showSubmitWarning();\n    } else {\n      showSubmitMotivation();\n    }\n    try {\n      const student = Parse.User.current();\n      if (student) {\n        const studentLevel = level;\n        let initialCount = count;\n        student.set(\"practice_timer_count\", initialCount);\n        student.increment(\"total_answered_questions\");\n        if (correct_answer === chosenOption) {\n          setMotivationH1(getRandomMotivation(motivationH1Correct));\n          setMotivationMessage(getRandomMotivation(correctMotivation));\n          let new_total_points = total_points + 10;\n          student.set(\"total_points\", new_total_points);\n          student.add(category + \"_correct_ids\", currentQuestionId);\n          student.increment(\"total_correct_questions\");\n          var correct = student.get(category + \"_correct_ids\");\n          if (correct.length === 7) {\n            if (studentLevel === 3) {\n              student.set(category + \"_level\", 1);\n              Swal.fire({\n                title: \"Congrats! You finished \" + category + \"!\",\n                text:\n                  \"You have answered all the questions in the \" +\n                  category +\n                  \" category. Let's take another round with the same questions. Practice makes perfect.\",\n                icon: \"success\",\n                confirmButtonText: \"OK\",\n              });\n            } else {\n              student.increment(category + \"_level\");\n              student.set(category + \"_correct_ids\", []);\n            }\n          }\n          const total_correct = student.get(\"total_correct_questions\");\n          const total_answered = student.get(\"total_answered_questions\");\n          if (\n            (total_answered % 20 === 0 || total_answered === 5) &&\n            0 < total_answered &&\n            total_answered < 81\n          ) {\n            const reward = getTotalAnsweredReward(total_answered);\n            student.add(\"reward_badge_ids\", reward);\n            const rewardPoints = new_total_points + 50;\n            student.set(\"total_points\", rewardPoints);\n            Swal.fire({\n              title: \"Yay! You won a badge!\",\n              text: \"Click OK to see your badge\",\n              icon: \"success\",\n              showDenyButton: true,\n              confirmButtonText: `OK`,\n              denyButtonText: `Close`,\n            }).then((result) => {\n              if (result.isConfirmed) {\n                history.push(\"/reward\");\n              } else if (result.isDenied) {\n                Swal.close();\n              }\n            });\n          }\n          if (\n            (total_correct % 20 === 0 || total_correct === 5) &&\n            0 < total_correct &&\n            total_correct < 81\n          ) {\n            const reward = getTotalCorrectReward(total_correct);\n            student.add(\"reward_badge_ids\", reward);\n            const originalpoints = student.get(\"total_points\");\n            const rewardPoints = originalpoints + 50;\n            student.set(\"total_points\", rewardPoints);\n            Swal.fire({\n              title: \"Yay! You won a badge!\",\n              text: \"Click OK to see your badge\",\n              icon: \"success\",\n              showDenyButton: true,\n              confirmButtonText: `OK`,\n              denyButtonText: `Close`,\n            }).then((result) => {\n              if (result.isConfirmed) {\n                history.push(\"/reward\");\n              } else if (result.isDenied) {\n                Swal.close();\n              }\n            });\n          }\n        } else {\n          setMotivationH1(getRandomMotivation(motivationH1Wrong));\n          setMotivationMessage(getRandomMotivation(wrongMotivation));\n          let new_total_points = total_points + 5;\n          student.set(\"total_points\", new_total_points);\n          const total_answered = student.get(\"total_answered_questions\");\n          if (\n            (total_answered % 20 === 0 || total_answered === 5) &&\n            0 < total_answered &&\n            total_answered < 81\n          ) {\n            const reward = getTotalAnsweredReward(total_answered);\n            student.add(\"reward_badge_ids\", reward);\n            const rewardPoints = new_total_points + 50;\n            student.set(\"total_points\", rewardPoints);\n            Swal.fire({\n              title: \"Yay! You won a badge!\",\n              text: \"Click OK to see your badge\",\n              icon: \"success\",\n              showDenyButton: true,\n              confirmButtonText: `OK`,\n              denyButtonText: `Close`,\n            }).then((result) => {\n              if (result.isConfirmed) {\n                history.push(\"/reward\");\n              } else if (result.isDenied) {\n                Swal.close();\n              }\n            });\n          }\n        }\n        await student.save();\n      }\n    } catch (error) {\n      console.log(`Error! ${error.message}`);\n      Swal.fire({\n        title: \"Oops, something went wrong!\",\n        text: \"Please try to refresh the page\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n    }\n  };\n\n  const getTotalAnsweredReward = (length) => {\n    switch (length) {\n      case 5: {\n        return \"QmMHU6HOyE\";\n      }\n      case 20: {\n        return \"GwG4dzfCuT\";\n      }\n      case 40: {\n        return \"5IFox85lUC\";\n      }\n      case 60: {\n        return \"pjukkloh3r\";\n      }\n      case 80: {\n        return \"0qfqFayIZw\";\n      }\n      default: {\n        return \"\";\n      }\n    }\n  };\n\n  const getTotalCorrectReward = (length) => {\n    switch (length) {\n      case 5: {\n        return \"QzQhNUEEp3\";\n      }\n      case 20: {\n        return \"IxEXq05Whj\";\n      }\n      case 40: {\n        return \"tSi2TA2olv\";\n      }\n      case 60: {\n        return \"SlmCKp4FMX\";\n      }\n      case 80: {\n        return \"f6C0n4oGX6\";\n      }\n      default: {\n        return \"\";\n      }\n    }\n  };\n\n  const getExplanationReward = (length) => {\n    switch (length) {\n      case 5: {\n        return \"gRPbOWs9nE\";\n      }\n      case 20: {\n        return \"HwjknOcp4Y\";\n      }\n      case 40: {\n        return \"rCADOvIMcB\";\n      }\n      case 60: {\n        return \"zonuJlC6ZN\";\n      }\n      case 80: {\n        return \"TBYdE77gyD\";\n      }\n      default: {\n        return \"\";\n      }\n    }\n  };\n\n  useEffect(() => {\n    const timer = count > 0 && setInterval(() => setCount(count - 1), 1000);\n    if (count === 0) {\n      handleBreakTime();\n    }\n    return () => clearInterval(timer);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [count]);\n\n  const handleBreakTime = (e) => {\n    e.preventDefault();\n    history.push(\"/break\");\n  };\n\n  return (\n    <Container fluid className=\"multiple-container\">\n      <Row className=\"question-row\">\n        <Col className=\"question-col\">\n          <div className=\"category-h1\">\n            {category ? (\n              <h1>{category.charAt(0).toUpperCase() + category.slice(1)}</h1>\n            ) : (\n              <></>\n            )}\n          </div>\n          <Card className=\"title-card\">\n            <Card.Body className=\"text-center\">\n              <Card.Title className=\"question-description\">\n                {description}\n              </Card.Title>\n            </Card.Body>\n          </Card>\n          <Image src={questionImage} className=\"question-img\" />\n          <Form>\n            <Card className=\"option-card\">\n              <Card.Body className=\"text-center\">\n                <fieldset className=\"options-form\">\n                  <Form.Group as={Row}>\n                    <Col className=\"options\">\n                      {hasOptionFraction\n                        ? options.map((option) => (\n                            <div key={`${option}`}>\n                              <Form.Check\n                                type=\"radio\"\n                                value={option}\n                                label={\n                                  <div\n                                    dangerouslySetInnerHTML={{ __html: option }}\n                                  />\n                                }\n                                name=\"formHorizontalRadios\"\n                                onChange={handleChange}\n                                disabled={submitted ? true : false}\n                                className={submitted ? checkAnswer(option) : \"\"}\n                              />\n                            </div>\n                          ))\n                        : options.map((option) => (\n                            <div key={`${option}`}>\n                              <Form.Check\n                                type=\"radio\"\n                                value={option}\n                                label={`${option}`}\n                                name=\"formHorizontalRadios\"\n                                onChange={handleChange}\n                                disabled={submitted ? true : false}\n                                className={\n                                  submitted ? checkAnswer(`${option}`) : \"\"\n                                }\n                              />\n                            </div>\n                          ))}\n                    </Col>\n                  </Form.Group>\n                </fieldset>\n              </Card.Body>\n            </Card>\n\n            <Form.Group as={Row} className=\"mb-8 mt-8\">\n              <div>\n                {showExplanation ? (\n                  explanation !== undefined ? (\n                    <div className=\"explanation-div\">\n                      {explanationImage ? (\n                        <div className=\"explanation-img\">\n                          <Image\n                            src={explanationImage}\n                            className=\"explanation-img\"\n                          />\n                        </div>\n                      ) : (\n                        <></>\n                      )}\n\n                      <div className=\"explanation-text\">{explanation}</div>\n                    </div>\n                  ) : (\n                    <div\n                      className=\"explanation-div\"\n                      style={{ display: showExplanation ? \"\" : \"none\" }}\n                    >\n                      <div className=\"explanation-text\">\n                        Sorry, there is no explanation for this questions.\n                      </div>\n                    </div>\n                  )\n                ) : (\n                  <div></div>\n                )}\n              </div>\n              {submitted ? (\n                <div className=\"btn-div\">\n                  <Button\n                    className=\"expl-btn quiz-btn\"\n                    onClick={toggleExplanation}\n                  >\n                    Explanation\n                    <BsFileText className=\"btn-icon\" />\n                  </Button>\n                  <Button\n                    className=\"next-btn quiz-btn\"\n                    onClick={refreshPage}\n                    type=\"submit\"\n                  >\n                    Next question\n                    <BsChevronRight className=\"btn-icon\" />\n                  </Button>\n                </div>\n              ) : (\n                <div className=\"btn-div\">\n                  {showHint ? (\n                    <Button\n                      className=\"close-hint-btn quiz-btn\"\n                      onClick={toggleHint}\n                    >\n                      Close hint\n                      <BsLifePreserver className=\"btn-icon\" />\n                    </Button>\n                  ) : (\n                    <Button className=\"hint-btn quiz-btn\" onClick={toggleHint}>\n                      Hint\n                      <BsLifePreserver className=\"btn-icon\" />\n                    </Button>\n                  )}\n                  <Button\n                    id=\"sub-btn\"\n                    className=\"sub-btn quiz-btn\"\n                    onClick={handleSubmit}\n                    type=\"submit\"\n                  >\n                    Submit <BsCheckCircle className=\"btn-icon\" />\n                  </Button>\n                </div>\n              )}\n            </Form.Group>\n          </Form>\n        </Col>\n        <Col md=\"auto\" className=\"mascot-col\">\n          <div style={{ display: showHint ? \"\" : \"none\" }}>\n            <Image src={SpeakBoble} className=\"speakboble\" />\n\n            {hint ? (\n              <div className=\"speakboble-text text-center\">\n                <div dangerouslySetInnerHTML={{ __html: hint }} />\n              </div>\n            ) : (\n              <div className=\"speakboble-text\">\n                <h2>Sorry,</h2>\n                <p>\n                  there's no hint for this question. Try to ask your teacher \n                  for help.\n                </p>\n              </div>\n            )}\n          </div>\n          <div style={{ display: showWarning ? \"\" : \"none\" }}>\n            <Image src={SpeakBoble} className=\"speakboble\" />\n            <div className=\"speakboble-text\">\n              <h2>Hold your horses!</h2>\n              <p>You need to pick an option.</p>\n            </div>\n          </div>\n          <div style={{ display: showMotivation ? \"\" : \"none\" }}>\n            <Image src={SpeakBoble} className=\"speakboble\" />\n            <div className=\"speakboble-text\">\n              <h2>{motivationH1}</h2>\n              <p>{motivationMessage}</p>\n            </div>\n          </div>\n          <Image\n            src={getMascotImage(active_mascot_index)}\n            className=\"quiz-mascot-img\"\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/NavbarPracticeMode\";\nimport MultipleChoice from \"../components/PracticeSection/MultipleChoice\";\n\nexport default function PracticePage() {\n  return (\n    <>\n      <Navbar />\n      <MultipleChoice />\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Button, Container, Row, Col } from \"react-bootstrap\";\nimport { Gem, Person } from \"react-bootstrap-icons\";\nimport { BsChevronRight } from \"react-icons/bs\";\nimport { useHistory } from \"react-router\";\nimport { getMascotImage } from \"../Utils\";\nimport Swal from \"sweetalert2\";\nimport Parse from \"parse\";\nimport \"./EditMascot.css\";\nimport { hotjar } from \"react-hotjar\";\n\nexport default function EditMascot() {\n  const history = useHistory();\n  const [mascots, setMascots] = useState([]);\n  const [owned_mascot_ids, setOwnedMascotIds] = useState([]);\n  const [active_mascot_id, setActiveMascotId] = useState(\"\");\n  const [total_points, setTotalPoints] = useState(0);\n\n  //Redirects the user to the frontpage\n  const handleGoBack = () => {\n    history.push(\"/frontpage\");\n  };\n\n  /*Fetches the mascots from the database and removes the blank mascot used as a placeholder\n  on the frontpage and in the multiplechoice section*/\n  const fetchMascots = async () => {\n    const Mascots = new Parse.Object.extend(\"Mascot\");\n    const query = new Parse.Query(Mascots);\n    const result = await query.find();\n    const removeBlank = result.filter((e) => e.attributes.required_points > 0);\n    setMascots(removeBlank);\n  };\n\n  useEffect(() => {\n    fetchMascots();\n    hotjar.initialize(2701912);\n  }, []);\n\n  //Fetches the student and sets the states used in this component\n  const fetchStudent = async () => {\n    const user = Parse.User.current();\n    if (user) {\n      var owned = user.get(\"owned_mascot_ids\");\n      var active = user.get(\"active_mascot_id\");\n      var points = user.get(\"total_points\");\n      setOwnedMascotIds(owned);\n      setActiveMascotId(active);\n      setTotalPoints(points);\n    } else {\n      Swal.fire({\n        title: \"Oops, something went wrong!\",\n        text: \"Please try to refresh the page\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchStudent();\n  }, []);\n\n  /*Checks if a student has sufficient points to buy a mascot. If they do, checks if \n  the student has won a reward for owning a certain number of mascots*/\n  const buyMascot = (mascotId, mascotPrice, points) => {\n    if (points >= mascotPrice) {\n      const user = Parse.User.current();\n      if (user) {\n        user.add(\"owned_mascot_ids\", mascotId);\n        points -= mascotPrice;\n        setTotalPoints(points);\n        user.set(\"total_points\", points);\n        var owned = user.get(\"owned_mascot_ids\");\n        setOwnedMascotIds(owned);\n        var wonRewardId = getMascotReward(owned.length);\n        var hasWon = wonRewardId !== \"\";\n        if (hasWon) {\n          user.add(\"reward_badge_ids\", wonRewardId);\n          const rewardPoints = points + 50;\n          user.set(\"total_points\", rewardPoints);\n          setTotalPoints(rewardPoints);\n        }\n        user.save();\n        if (hasWon) {\n          history.push(\"/reward\");\n        }\n      }\n    } else {\n      Swal.fire({\n        title: \"You don't have enough points to buy this mascot!\",\n        text: \"You can earn more points by answering math questions\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n    }\n  };\n\n  //Returns the id of a reward based on the amount of mascots a user owns\n  const getMascotReward = (length) => {\n    switch (length) {\n      case 3: {\n        return \"Q6AkAx4llp\";\n      }\n      case 5: {\n        return \"skz6uxOpI6\";\n      }\n      case 7: {\n        return \"6U3vVNGZOO\";\n      }\n      case 9: {\n        return \"A66daWHfAy\";\n      }\n      case 11: {\n        return \"liTmaZ30Tb\";\n      }\n      default: {\n        return \"\";\n      }\n    }\n  };\n\n  //Sets the user's active mascot to the mascotId given as a parameter\n  const pickMascot = (mascotId) => {\n    const user = Parse.User.current();\n    if (user) {\n      user.set(\"active_mascot_id\", mascotId);\n      user.save();\n      setActiveMascotId(mascotId);\n    }\n  };\n\n  return (\n    <Container className=\"mascot-container\">\n      <div className=\"point-container\">\n        <div className=\"points-div\">\n          <Gem color=\"#F2B84B\" size={50} />\n          <div className=\"point-circle\">\n            <p className=\"top-point-text text-center\">{total_points}</p>\n          </div>\n        </div>\n        <div>\n          <Button className=\"go-back-btn\" onClick={handleGoBack}>\n            Go back <BsChevronRight />\n          </Button>\n        </div>\n      </div>\n      <Row>\n        {mascots.map((mascot) => (\n          <Col key={mascot.id}>\n            <Card\n              className=\"mascot-card\"\n              style={{\n                width: \"16rem\",\n                outline:\n                  mascot.id === active_mascot_id ? \"8px dashed #FBBB00\" : \"\",\n                boxShadow:\n                  mascot.id === active_mascot_id\n                    ? \"\"\n                    : \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n              }}\n            >\n              <Card.Img\n                variant=\"top\"\n                src={getMascotImage(mascots.indexOf(mascot))}\n              />\n              <Card.Body className=\"text-center\">\n                <Card.Title className=\"mascot-name\">\n                  {mascot.attributes.name}\n                </Card.Title>\n                <Card.Text className=\"point-text\">\n                  <Gem color=\"#F2B84B\" /> {mascot.attributes.required_points}{\" \"}\n                  points\n                </Card.Text>\n                <div>\n                  {owned_mascot_ids.includes(mascot.id) ? (\n                    [\n                      active_mascot_id === mascot.id ? (\n                        <div key={mascot.id} className=\"active-mascot-btn\">\n                          Your mascot\n                        </div>\n                      ) : (\n                        <Button\n                          key={mascot.id}\n                          className=\"pick-mascot-btn\"\n                          variant=\"primary\"\n                          onClick={() => pickMascot(mascot.id)}\n                        >\n                          Pick mascot <Person />\n                        </Button>\n                      ),\n                    ]\n                  ) : (\n                    <Button\n                      key={mascot.id}\n                      className=\"buy-mascot-btn\"\n                      variant=\"primary\"\n                      onClick={() =>\n                        buyMascot(\n                          mascot.id,\n                          mascot.attributes.required_points,\n                          total_points\n                        )\n                      }\n                    >\n                      Buy mascot <Gem />\n                    </Button>\n                  )}\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n      <div className=\"go-back-btn-container\">\n        <Button className=\"go-back-btn\" onClick={handleGoBack}>\n          Go back <BsChevronRight />\n        </Button>\n      </div>\n    </Container>\n  );\n}\n","import NavbarPost from \"../components/Navbar/NavbarPostlogin\";\nimport EditMascot from \"../components/EditMascot/EditMascot\";\nimport Footer from \"../components/Footer/Footer\";\n\nexport default function EditMascotPage() {\n  return (\n    <div>\n      <NavbarPost />\n      <EditMascot />\n      <Footer />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Button, Image } from \"react-bootstrap\";\nimport { useHistory } from \"react-router\";\nimport { VscSmiley } from \"react-icons/vsc\";\nimport { BsChevronRight } from \"react-icons/bs\";\nimport { Trophy } from \"react-bootstrap-icons\";\nimport { getRewardImage } from \"../Utils\";\nimport Parse from \"parse\";\nimport \"./RewardSection.css\";\nimport { hotjar } from \"react-hotjar\";\n\nexport default function RewardSection() {\n  const [description, setDescription] = useState(\"\");\n  const [imgsrc, setImage] = useState(\"\");\n  const history = useHistory();\n\n  //Redirects the user to the page they were on when winning the badge\n  const handleGoBack = (e) => {\n    e.preventDefault();\n    history.goBack();\n  };\n\n  //Redirects the user to the frontpage with their collection of badges\n  const handleCollection = (e) => {\n    e.preventDefault();\n    history.push(\"/badgeinfo\");\n  };\n\n  /*Gets the last element from the user's reward_badge_ids array and uses this to\n  retrieve the correct badge image and description from the database*/\n  const getReward = async () => {\n    const user = Parse.User.current();\n    var reward_id;\n    if (user) {\n      const reward_badge_ids = user.get(\"reward_badge_ids\");\n      reward_id = reward_badge_ids.at(-1);\n    } else {\n      alert(\"Failed to retrieve the user.\");\n    }\n    const Rewards = new Parse.Object.extend(\"Reward\");\n    const query = new Parse.Query(Rewards);\n    const rewardArray = await query.find();\n    query.equalTo(\"objectId\", reward_id);\n    const reward = await query.first();\n    const description = reward.attributes.description;\n    const index = rewardArray.map((element) => element.id).indexOf(reward_id);\n    const imgsrc = getRewardImage(index);\n    setDescription(description);\n    setImage(imgsrc);\n    return reward;\n  };\n\n  useEffect(() => {\n    getReward();\n  }, []);\n\n  useEffect(() => {\n    hotjar.initialize(2701912);\n  }, []);\n\n  return (\n    <Container fluid className=\"reward-container\">\n      <Row className=\"reward-row\">\n        <Col>\n          <Image src={imgsrc} style={{ width: 366 }} />\n        </Col>\n        <Col className=\"text-div\">\n          <h2 className=\"h2-reward\">\n            Congratulations! <br /> You earned a badge\n          </h2>\n          <p className=\"p-reward\">\n            You earned your badge for this task:\n            <br /> <b>{description} </b> <Trophy className=\"trophy-icon\" />{\" \"}\n            <br />\n            You also earned 50 points! Good job!\n            <br />\n          </p>\n          <div className=\"button-div \">\n            <Button\n              className=\"practice-again-btn quiz_btn\"\n              onClick={handleCollection}\n            >\n              See collection <VscSmiley className=\"btn-icon\" />\n            </Button>\n            <Button\n              className=\"go-collection-btn quiz_btn\"\n              onClick={handleGoBack}\n            >\n              Go back <BsChevronRight className=\"btn-icon\" />\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/NavbarPracticeMode\";\nimport RewardSection from \"../components/RewardSection/RewardSection\";\n\nexport default function RewardPage() {\n  return (\n    <div>\n      <Navbar />\n      <RewardSection />\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport Parse from \"parse\";\nimport { Form, Container, Row, Col, Button } from \"react-bootstrap\";\nimport { Tree, Envelope, ChevronRight } from \"react-bootstrap-icons\";\nimport { useHistory } from \"react-router\";\nimport Swal from \"sweetalert2\";\nimport \"./RequestReset.css\";\nimport { hotjar } from \"react-hotjar\";\n\nexport default function RequestReset() {\n  const [email, setEmail] = useState(\"\");\n  const history = useHistory();\n\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const doRequestPasswordReset = async () => {\n    try {\n      await Parse.User.requestPasswordReset(email);\n      Swal.fire({\n        title: \"Succes!\",\n        text: `Please check ${email} to proceed with password reset.`,\n        icon: \"success\",\n        confirmButtonText: \"OK\",\n      });\n      return true;\n    } catch (error) {\n      Swal.fire({\n        title: \"Error!\",\n        text: `An error occured while sending the recovery email: ${error.message}. Try again!`,\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n      return false;\n    }\n  };\n\n  const handleGoBack = (e) => {\n    e.preventDefault();\n    history.goBack();\n  };\n\n  useEffect(() => {\n    hotjar.initialize(2701912);\n  }, []);\n\n  return (\n    <div>\n      <Container className=\"email-container\">\n        <div className=\"text-center\">\n          <Tree size={30} color=\"#4D4D4D\" />\n          <h1 className=\"reset-h1\">Password recovery</h1>\n          <p className=\"reset-p\">\n            Enter the email connected to your account below and <br />\n            click send to recieve a password recovery email\n          </p>\n        </div>\n        <Container className=\"form-container\">\n          <Row>\n            <Col>\n              <Form>\n                <Form.Group controlId=\"formEmail\" className=\"upperform\">\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Enter an email\"\n                    onChange={updateEmail}\n                  />\n                </Form.Group>\n                <Button\n                  className=\"send-button\"\n                  variant=\"primary\"\n                  onClick={doRequestPasswordReset}\n                >\n                  Send <Envelope />\n                </Button>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n      <Button\n        className=\"go-back-button\"\n        variant=\"primary\"\n        onClick={handleGoBack}\n      >\n        Go back <ChevronRight />\n      </Button>\n    </div>\n  );\n}\n","import NavBarPre from \"../components/Navbar/NavbarPrelogin\";\nimport ResetComponent from \"../components/Reset/RequestReset\";\n\nexport default function Reset() {\n  return (\n    <div>\n      <NavBarPre />\n      <ResetComponent />\n    </div>\n  );\n}","import React, { useEffect, useState } from \"react\";\nimport { Card, Button, Container, Row, Col } from \"react-bootstrap\";\nimport { Trophy } from \"react-bootstrap-icons\";\nimport { BsChevronRight} from \"react-icons/bs\";\nimport { VscSmiley } from \"react-icons/vsc\";\nimport { useHistory } from \"react-router\";\nimport Parse from \"parse\";\nimport \"./BadgeInfo.css\";\nimport Swal from \"sweetalert2\";\nimport { getRewardImage } from \"../Utils\";\nimport { hotjar } from \"react-hotjar\";\n\nexport default function BadgeInfo() {\n  const history = useHistory();\n  const [rewards, setRewards] = useState([]);\n  const [owned_rewards, setStudentRewards] = useState([]);\n\n  //Redirects the user to the frontpage\n  const handleGoFrontpage = (e) => {\n    e.preventDefault();\n    history.push(\"/frontpage\");\n  };\n\n  const handleGoQuiz = (e) => {\n    e.preventDefault();\n    history.push(\"/practice\");\n  }\n\n  const fetchRewards = async () => {\n    const Rewards = new Parse.Object.extend(\"Reward\");\n    const query = new Parse.Query(Rewards);\n    const result = await query.find();\n    setRewards(result);\n  };\n\n  useEffect(() => {\n    fetchRewards();\n    hotjar.initialize(2701912);\n  }, []);\n\n  const retrieveStudent = async () => {\n    const student = Parse.User.current();\n    if (student) {\n      var owned_rewards = student.get(\"reward_badge_ids\");\n      setStudentRewards(owned_rewards);\n    } else {\n      console.log(\"The user couldn't be retrieved\");\n      Swal.fire({\n        title: \"Oops, something went wrong!\",\n        text: \"Please try to refresh the page\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    retrieveStudent();\n  }, []);\n\n  return (\n    <Container className=\"rewardi-container\">\n      <div className=\"rewardi-point-container\">\n        <div className=\"points-div\">\n          <Trophy color=\"#F2B84B\" size={50} />\n          <div className=\"header-circle\">\n            <p className=\"top-point-text text-center\">Badge Library</p>\n          </div>\n        </div>\n        <div>\n          <Button className=\"go-quiz-btn\" onClick={handleGoQuiz}>\n            Go to quiz <VscSmiley />\n          </Button>\n          <Button className=\"filter-btn\" onClick={handleGoFrontpage}>\n            Go to frontpage <BsChevronRight />\n          </Button>\n        </div>\n      </div>\n      <Row>\n        {rewards.map((reward) => (\n          <Col key={reward.id}>\n            <Card className=\"reward-card\">\n              {owned_rewards.includes(reward.id) ? (\n                <Card.Img\n                  className=\"unlocked-card selector\"\n                  variant=\"top\"\n                  src={getRewardImage(rewards.indexOf(reward))}\n                />\n              ) : (\n                <Card.Img\n                  className=\"locked-card selector\"\n                  variant=\"top\"\n                  src={getRewardImage(rewards.indexOf(reward))}\n                />\n              )}\n              <Card.Body className=\"text-center\">\n                <Card.Title className=\"point-text\">\n                  {reward.attributes.description}\n                </Card.Title>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </Container>\n  );\n}\n","import NavbarPost from \"../components/Navbar/NavbarPostlogin\";\nimport BadgeInfo from \"../components/BadgeInfo/BadgeInfo\";\nimport Footer from \"../components/Footer/Footer\";\n\nexport default function EditMascotPage() {\n  return (\n    <div>\n      <NavbarPost />\n      <BadgeInfo />\n      <Footer />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/breakCamel.831e2421.png\";","import React, { useEffect } from \"react\";\nimport { Container, Row, Col, Button, Image } from \"react-bootstrap\";\nimport \"./Break.css\";\nimport { useHistory } from \"react-router\";\nimport { VscSmiley } from \"react-icons/vsc\";\nimport Camel from \"../../images/Break/breakCamel.png\";\nimport { hotjar } from \"react-hotjar\";\n\nexport default function Break() {\n  const history = useHistory();\n\n  const handleGoBack = () => {\n    history.push(\"/frontpage\");\n  };\n\n  useEffect(() => {\n    hotjar.initialize(2701912);\n  }, []);\n  return (\n    <Container fluid className=\"break-container\">\n      <Row className=\"reward-row\">\n        <Col>\n          <Image src={Camel} style={{ width: 566 }} />\n        </Col>\n        <Col className=\"text-div\">\n          <h2 className=\"h2-break\">Time to take a break.</h2>\n          <p className=\"p-break\">\n            Good job! You’re on a roll. <br /> Take 5 minutes to cool off, and\n            come <br />\n            back to earn more points.\n          </p>\n          <div className=\"button-div \">\n            <Button\n              className=\"done-break-btn\"\n              variant=\"primary\"\n              onClick={handleGoBack}\n            >\n              I’m done with my break <VscSmiley className=\"btn-icon\" />\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/NavbarPracticeMode\";\nimport Break from \"../components/Break/Break\";\n\nexport default function RewardPage() {\n  return (\n    <div>\n      <Navbar />\n      <Break />\n    </div>\n  );\n}\n","import React, { useRef, useEffect } from \"react\";\nimport emailjs from \"emailjs-com\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport { Tree } from \"react-bootstrap-icons\";\nimport { hotjar } from \"react-hotjar\";\nimport Swal from \"sweetalert2\";\nimport \"./Contact.css\";\n\nexport default function Contact() {\n  const form = useRef();\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n    emailjs\n      .sendForm(\n        \"service_sfq75k1\",\n        \"template_6009aok\",\n        form.current,\n        \"user_7OclaIRRNbXghSbtXYdJH\"\n      )\n      .then(\n        (result) => {\n          Swal.fire({\n            title: \"Your message was sent!\",\n            text: \"We will get back to you as soon as possible!\",\n            icon: \"success\",\n            confirmButtonText: \"OK\",\n          });\n        },\n        (error) => {\n          Swal.fire({\n            title: \"Oops!\",\n            text: \"Something went wrong, try again later!\",\n            icon: \"error\",\n            confirmButtonText: \"OK\",\n          });\n        }\n      );\n    e.target.reset();\n  };\n\n  useEffect(() => {\n    hotjar.initialize(2701912);\n  }, []);\n\n  return (\n    <Container fluid className=\"contact-container\">\n      <Row className=\"justify-content-md-center email-row\">\n        <Col md=\"8\" lg=\"5\" className=\"email-col\">\n          <div className=\"text-center email-text-div\">\n            <Tree size={30} color=\"#4D4D4D\" />\n            <h1 className=\"welcome-h1\">Send us an email</h1>\n            <p className=\"welcome-p\">We would love to hear from you</p>\n          </div>\n          <Form ref={form} action=\"#\" onSubmit={sendEmail}>\n            <Form.Group className=\"mb-3\">\n              <Form.Control\n                type=\"text\"\n                name=\"user_name\"\n                placeholder=\"Your name\"\n                size=\"md\"\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Control\n                type=\"email\"\n                name=\"user_email\"\n                placeholder=\"your@email.com\"\n                size=\"md\"\n              />\n            </Form.Group>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n            >\n              <Form.Control\n                as=\"textarea\"\n                name=\"message\"\n                placeholder=\"Send us a message here :)\"\n                style={{ height: \"130px\" }}\n              />\n            </Form.Group>\n            <div className=\"btn-div\">\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                className=\"sub-btn email-btn\"\n              >\n                Submit\n              </Button>\n            </div>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Contact from \"../components/Contact/Contact\";\nimport Footer from \"../components/Footer/Footer\";\nimport Navbar from \"../components/Navbar/NavbarPostlogin\";\n\nexport default function ContactPage() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        margin: \"0\",\n      }}\n    >\n      <Navbar />\n      <Contact />\n      <Footer />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LandingPage from \"./pages/LandingPage\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport FrontPage from \"./pages/FrontPage\";\nimport PracticePage from \"./pages/PracticePage\";\nimport EditMascotPage from \"./pages/EditMascotPage\";\nimport RewardPage from \"./pages/RewardPage\";\nimport Request from \"./pages/Reset\";\nimport BadgeInfoPage from \"./pages/BadgeInfoPage\";\nimport Break from \"./pages/BreakPage\";\nimport ContactPage from \"./pages/ContactPage\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fontsource/rubik\";\nimport \"@fontsource/solway\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route exact path=\"/register\" component={RegisterPage} />\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/frontpage\" component={FrontPage} />\n          <Route exact path=\"/practice\" component={PracticePage} />\n          <Route exact path=\"/mascot\" component={EditMascotPage} />\n          <Route exact path=\"/reward\" component={RewardPage} />\n          <Route exact path=\"/requestReset\" component={Request} />\n          <Route exact path=\"/break\" component={Break} />\n          <Route exact path=\"/badgeinfo\" component={BadgeInfoPage} />\n          <Route exact path=\"/contact\" component={ContactPage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Parse from \"parse\";\n\nParse.serverURL = \"https://mathapp.b4a.io\";\nParse.initialize(\n  \"V9n8X7uIrcCMcJre0nqCFfnyaka6MwkvrN5vnBcv\",\n  \"iTt0twJCFnn5sNxOXzNb7Ek9YC6mEKRQ98aoVey8\"\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
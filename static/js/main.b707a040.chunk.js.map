{"version":3,"sources":["images/Logo/logo-prelogin.svg","components/Navbar/NavbarPrelogin.js","components/Login/LoginRegisterCard.js","components/Footer/Footer.js","pages/LandingPage.js","components/Login/RegisterComponent.js","pages/RegisterPage.js","components/Login/LoginComponent.js","pages/LoginPage.js","images/Logo/logo-postlogin.svg","components/Navbar/NavbarPostlogin.js","images/Mascots/mascot1.png","images/Mascots/mascot2.png","images/Mascots/mascot3.png","images/Mascots/mascot4.png","images/Mascots/mascot5.png","images/Mascots/mascot6.png","images/Mascots/mascot7.png","images/Mascots/mascot8.png","images/Mascots/mascot9.png","images/Mascots/mascot10.png","images/Mascots/mascot11.png","images/Mascots/mascot12.png","images/Mascots/mascot13.png","images/Mascots/mascot14.png","images/Mascots/mascot15.png","images/Mascots/mascot16.png","images/Mascots/mascot17.png","images/Mascots/mascot18.png","images/Mascots/mascot19.png","images/Mascots/mascot20.png","images/Mascots/mascot21.png","images/Mascots/mascot22.png","images/Mascots/mascot23.png","images/Mascots/mascot24.png","images/Mascots/blank-image.PNG","images/Rewards/orange.png","images/Rewards/head-scarf.png","images/Rewards/sky.png","images/Rewards/mouth.png","images/Rewards/cat.png","images/Rewards/croissant.png","images/Rewards/red-hair.png","images/Rewards/mountains.png","images/Rewards/bag.png","images/Rewards/bear.png","images/Rewards/cake.png","images/Rewards/old-man.png","images/Rewards/egg.png","images/Rewards/heart.png","images/Rewards/fingers-crossed.png","images/Rewards/avocado.png","images/Rewards/black-hat.png","images/Rewards/globe.png","images/Rewards/glasses.png","images/Rewards/milk.png","images/Rewards/strawberry.png","images/Rewards/helmet-man.png","images/Rewards/coffee.png","images/Rewards/love-letter.png","images/Rewards/calculator-badge.png","components/Utils.js","components/Sidebar/Sidebar.js","components/UserInfoTable/UserInfoTable.js","components/UserInfo/UserInfo.js","pages/FrontPage.js","components/Navbar/NavbarPracticeMode.js","images/Icons/SpeakBoble.svg","components/PracticeSection/MultipleChoice.js","pages/PracticePage.js","components/EditMascot/EditMascot.js","pages/EditMascotPage.js","components/RewardSection/RewardSection.js","pages/RewardPage.js","components/Reset/RequestReset.js","pages/Reset.js","components/BadgeInfo/BadgeInfo.js","pages/BadgeInfoPage.js","images/Break/breakCamel.png","components/Break/Break.js","pages/BreakPage.js","components/Contact/Contact.js","pages/ContactPage.js","App.js","reportWebVitals.js","index.js"],"names":["NavbarPrelogin","history","useHistory","Container","fluid","className","onClick","e","preventDefault","push","Row","Col","src","Logo","alt","LoginRegisterCard","useEffect","hotjar","initialize","size","color","ButtonToolbar","Button","Footer","LandingPage","style","height","display","flexDirection","justifyContent","RegisterComponent","useState","username","setUsername","password","setPassword","email","setEmail","handleReg","a","Swal","fire","title","text","icon","confirmButtonText","console","log","user","Parse","User","set","date","Date","toLocaleDateString","add","signUp","message","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","target","value","variant","RegisterPage","LoginComponent","handleLogUser","logIn","get","active","find","element","save","LoginPage","NavbarPostlogin","resetTimer","student","current","handleHome","logOut","getMascotImage","index","Mascot1","Mascot2","Mascot3","Mascot4","Mascot5","Mascot6","Mascot7","Mascot8","Mascot9","Mascot10","Mascot11","Mascot12","Mascot13","Mascot14","Mascot15","Mascot16","Mascot17","Mascot18","Mascot19","Mascot20","Mascot21","Mascot22","Mascot23","Mascot24","BlankImage","getRewardImage","Badge1","Badge2","Badge3","Badge4","Badge5","Badge6","Badge7","Badge8","Badge9","Badge10","Badge11","Badge12","Badge13","Badge14","Badge15","Badge16","Badge17","Badge18","Badge19","Badge20","Badge21","Badge22","Badge23","Badge24","Badge25","Sidebar","isOpen","toggle","rewards","setRewards","owned_rewards","setStudentRewards","hasWonReward","setHasWonReward","fetchRewards","Rewards","Object","extend","query","Query","result","retrieveStudent","active_days","wonRewardId","getActiveDayReward","length","includes","points","rewardPoints","maxWidth","fontSize","marginBottom","map","reward","id","indexOf","attributes","description","UserInfoTable","total_points","total_answered_questions","Table","scope","UserInfo","setIsOpen","setTotal_points","set_active_days","setTotal_answered_questions","active_mascot_index","setActiveMascotIndex","retrieveUser","activeMascot","fetchMascots","activeMascotIndex","active_mascot_id","Mascots","mascotArray","mascotIdArray","obj","mascotIndex","width","Image","FrontPage","NavbarPracticeMode","setPoints","totalPoints","fetchPoints","lg","MultipleChoice","level","setLevel","count","setCount","showHint","setShowHint","showExplanation","setShowExplanation","showMotivation","setShowMotivation","showWarning","setShowWarning","setDescription","options","setOptions","chosenOption","setChosenOption","correct_answer","setCorrectAnswer","hint","setHint","explanation","setExplanation","questionImage","setQuestionImage","explanationImage","setExplanationImage","currentQuestionId","setId","setTotalPoints","category","setCategory","submitted","setSubmitted","motivationMessage","setMotivationMessage","motivationH1","setMotivationH1","motivationH1Correct","correctMotivation","wrongMotivation","motivationH1Wrong","hasOptionFraction","setHasOptionFraction","fetchQuestion","info","activeMascotId","equalTo","question","foundQuestion","i","getRandomInt","currentId","correct","questionImageURL","_url","explanationImageURL","regex","matches","matchAll","resultstring","undefined","end","newHint","substring","max","Math","floor","random","getRandomCategory","categories","getRandomMotivation","motivationArray","handleChange","toggleHint","checkAnswer","option","optionClass","handleSubmit","studentLevel","initialCount","increment","new_total_points","total_correct","total_answered","getTotalAnsweredReward","showDenyButton","denyButtonText","then","isConfirmed","isDenied","close","getTotalCorrectReward","originalpoints","getExplanationReward","timer","setInterval","handleBreakTime","clearInterval","charAt","toUpperCase","slice","Card","Body","Title","as","Check","label","dangerouslySetInnerHTML","__html","name","disabled","totalexplanation","event","go","md","SpeakBoble","PracticePage","EditMascot","mascots","setMascots","owned_mascot_ids","setOwnedMascotIds","setActiveMascotId","handleGoBack","removeBlank","filter","required_points","fetchStudent","owned","getMascotReward","mascot","outline","boxShadow","Img","Text","mascotId","pickMascot","mascotPrice","hasWon","buyMascot","EditMascotPage","RewardSection","imgsrc","setImage","getReward","reward_badge_ids","reward_id","at","alert","rewardArray","first","goBack","RewardPage","RequestReset","doRequestPasswordReset","requestPasswordReset","Reset","BadgeInfo","Break","Camel","Contact","form","useRef","sx","ref","action","emailjs","sendForm","error","reset","ContactPage","margin","App","exact","path","component","Request","BadgeInfoPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","serverURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b707a040.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-prelogin.c6b0a2ca.svg\";","import React from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport Logo from \"../../images/Logo/logo-prelogin.svg\";\r\nimport \"./NavbarPrelogin.css\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function NavbarPrelogin() {\r\n  const history = useHistory();\r\n\r\n  //Redirects the user to the frontpage\r\n  const handleBack = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"navbar-prelogin\" onClick={handleBack}>\r\n      <Row className=\"row-prelogin\">\r\n        <Col>\r\n          <div className=\"logo-container-prelogin\">\r\n            <img\r\n              className=\"logo-prelogin\"\r\n              src={Logo}\r\n              alt=\"Logo of a calculator\"\r\n            ></img>\r\n          </div>\r\n        </Col>\r\n        <Col className=\"app-name-col-prelogin\">\r\n          <h5 className=\"navbar-brand-prelogin\">Maths Camp</h5>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Tree, CardList, Key } from \"react-bootstrap-icons\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Container, Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport \"./LoginRegisterCard.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { hotjar } from \"react-hotjar\";\r\n\r\nexport default function LoginRegisterCard() {\r\n  const history = useHistory();\r\n\r\n  //Redirects the user to the login-page\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  //Redirects the user to the register-page\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/register\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    hotjar.initialize(2701912);\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"login-container\">\r\n      <div className=\"text-center\">\r\n        <Tree size={30} color=\"#4D4D4D\" />\r\n        <h1 className=\"login-register-h1\">\r\n          Welcome to <br />\r\n          Maths Camp\r\n        </h1>\r\n        <p className=\"login-register-p\">Where exercising your brain is fun.</p>\r\n      </div>\r\n      <ButtonToolbar className=\"btn-toolbar login-register-toolbar\">\r\n        <Button onClick={handleRegister} className=\"register-btn landing-btn\">\r\n          Register\r\n          <br />\r\n          <CardList size={70} />\r\n        </Button>\r\n        <Button onClick={handleLogin} className=\"login-btn landing-btn\">\r\n          Log in\r\n          <br />\r\n          <Key size={70} />\r\n        </Button>\r\n      </ButtonToolbar>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-c\">\r\n      <p className=\"rights\">\r\n        ©2021 All rights reserved. Maths Camp is created by Anne Schjødt and\r\n        Frederikke Drejer in collaboration with IT University of Copenhagen\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import NavBarPre from \"../components/Navbar/NavbarPrelogin\";\r\nimport LoginRegisterCard from \"../components/Login/LoginRegisterCard\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\nexport default function LandingPage() {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      <NavBarPre />\r\n      <LoginRegisterCard />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","import { Container, Form, Col, Row, Button } from \"react-bootstrap\";\r\nimport { CardList, Tree } from \"react-bootstrap-icons\";\r\nimport { useHistory } from \"react-router\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Parse from \"parse\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"./RegisterComponent.css\";\r\nimport { hotjar } from \"react-hotjar\";\r\n\r\nexport default function RegisterComponent() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  //Updates the state of the username when the input changes\r\n  const updateUsername = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  //Updates the state of the password when the input changes\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  //Updates the state of the parental email when the input changes\r\n  const updateEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  /*Signs the user in if there is a password and a username. signUp() checks \r\n  if the username and email are unique and stores the password securely */\r\n  const handleReg = async (e) => {\r\n    e.preventDefault();\r\n    if (password === \"\" || username === \"\") {\r\n      Swal.fire({\r\n        title: \"Oops!\",\r\n        text: \"You need to fill out a username and password\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"OK\",\r\n      });\r\n      return;\r\n    } else {\r\n      console.log(\"I am setting the users information\");\r\n      const user = new Parse.User();\r\n      user.set(\"username\", username);\r\n      user.set(\"password\", password);\r\n      user.set(\"email\", email);\r\n      var date = new Date().toLocaleDateString();\r\n      user.add(\"active_days\", date);\r\n      user.add(\"owned_mascot_ids\", \"arB9fEWmFp\");\r\n      try {\r\n        await user.signUp();\r\n        history.push(\"/frontpage\");\r\n      } catch (error) {\r\n        Swal.fire({\r\n          title: \"Oops!\",\r\n          text:\r\n            \"Something went wrong while registering you as a user: \" +\r\n            error.message +\r\n            \" Please try again!\",\r\n          icon: \"error\",\r\n          confirmButtonText: \"OK\",\r\n        });\r\n        console.log(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    hotjar.initialize(2701912);\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"login-container\">\r\n      <div className=\"text-center\">\r\n        <Tree size={30} color=\"#4D4D4D\" />\r\n        <h1 className=\"register-h1\">Welcome!</h1>\r\n        <p className=\"register-p\">Create a user and play today</p>\r\n      </div>\r\n      <Container className=\"form-container\">\r\n        <Row>\r\n          <Col>\r\n            <Form onSubmit={handleReg}>\r\n              <Form.Group controlId=\"formUserName\" className=\"upperform\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  type=\"name\"\r\n                  placeholder=\"Enter a username\"\r\n                  onChange={updateUsername}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formPassword\" className=\"upperform\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter a password\"\r\n                  onChange={updatePassword}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formEmail\" className=\"upperform\">\r\n                <Form.Label>Parental email (optional)</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter an email\"\r\n                  onChange={updateEmail}\r\n                />\r\n                <p className=\"information-text\">\r\n                  This email will be used for password recovery\r\n                </p>\r\n              </Form.Group>\r\n              <Button className=\"registerbtn\" variant=\"primary\" type=\"submit\">\r\n                Register <CardList />\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n","import NavBarPre from \"../components/Navbar/NavbarPrelogin\";\r\nimport RegisterComponent from \"../components/Login/RegisterComponent\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\nexport default function RegisterPage() {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      <NavBarPre />\r\n      <RegisterComponent />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","import { Key, Tree } from \"react-bootstrap-icons\";\r\nimport { Container, Form, Col, Row, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Parse from \"parse\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"./LoginComponent.css\";\r\nimport { hotjar } from \"react-hotjar\";\r\n\r\nexport default function LoginComponent() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  //Updates the state of the username when the input changes\r\n  const updateUsername = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  //Updates the state of the password when the input changes\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  //Attempts to log in the user if they have filled out a username and a password\r\n  const handleLogUser = async (e) => {\r\n    e.preventDefault();\r\n    if (password === \"\" || username === \"\") {\r\n      Swal.fire({\r\n        title: \"Oops!\",\r\n        text: \"You need to fill out a username and password\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"OK\",\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      const user = await Parse.User.logIn(username, password);\r\n      if (user) {\r\n        var active = await user.get(\"active_days\");\r\n        var date = new Date().toLocaleDateString();\r\n        if (!active.find((element) => element === date)) {\r\n          user.add(\"active_days\", date);\r\n          user.save();\r\n        }\r\n        history.push(\"/frontpage\");\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: \"Oops!\",\r\n        text: \"The username or password is incorrect!\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"OK\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = () => {\r\n    history.push(\"/requestReset\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    hotjar.initialize(2701912);\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"login-container\">\r\n      <div className=\"text-center\">\r\n        <Tree size={30} color=\"#4D4D4D\" />\r\n        <h1 className=\"welcome-h1\">Welcome back!</h1>\r\n        <p className=\"welcome-p\">Log in to play</p>\r\n      </div>\r\n      <Container className=\"form-container\">\r\n        <Row>\r\n          <Col>\r\n            <Form onSubmit={handleLogUser}>\r\n              <Form.Group controlId=\"formUserName\" className=\"upperform\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  type=\"name\"\r\n                  placeholder=\"Enter your username\"\r\n                  onChange={updateUsername}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formPassword\" className=\"upperform\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  onChange={updatePassword}\r\n                />\r\n                <p className=\"forgot-text\" onClick={handleResetPassword}>\r\n                  Forgot your password? Click me!\r\n                </p>\r\n              </Form.Group>\r\n              <Button className=\"login-button\" variant=\"primary\" type=\"submit\">\r\n                Log in <Key size={20} />\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n","import NavBarPre from \"../components/Navbar/NavbarPrelogin\";\r\nimport LoginComponent from \"../components/Login/LoginComponent\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\nexport default function LoginPage() {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      <NavBarPre />\r\n      <LoginComponent />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo-postlogin.bdc5b759.svg\";","import React from \"react\";\r\nimport { Button, Container, Col, Row } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport { DoorOpen, HouseDoor } from \"react-bootstrap-icons\";\r\nimport { BsMailbox } from \"react-icons/bs\";\r\nimport Logo from \"../../images/Logo/logo-postlogin.svg\";\r\nimport Parse from \"parse\";\r\nimport \"./NavbarPostlogin.css\";\r\n\r\nexport default function NavbarPostlogin() {\r\n  const history = useHistory();\r\n\r\n  const resetTimer = async () => {\r\n    const student = Parse.User.current();\r\n    if (student) {\r\n      try {\r\n        student.set(\"practice_timer_count\", 2100);\r\n        await student.save();\r\n      } catch {\r\n        console.log(\"timer did not reset\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //Logs out the user and redirects the user to the landingpage\r\n  const handleLogOut = (e) => {\r\n    e.preventDefault();\r\n    Parse.User.logOut();\r\n    resetTimer();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  //Redirects the user to the frontpage\r\n  const handleHome = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/frontpage\");\r\n  };\r\n\r\n  const handleSendEmail = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/contact\");\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"navbar-postlogin\">\r\n      <Row>\r\n        <Col>\r\n          <img\r\n            className=\"logo-postlogin\"\r\n            src={Logo}\r\n            alt=\"Logo of a calculator\"\r\n            onClick={handleHome}\r\n          ></img>\r\n        </Col>\r\n        <Col className=\"app-name-col-postlogin\">\r\n          <h6 className=\"navbar-brand-postlogin\">Maths Camp</h6>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"btn-toolbar postlogin-toolbar\">\r\n            <Button\r\n              className=\"btn-primary lg home-btn-postlogin\"\r\n              onClick={handleHome}\r\n            >\r\n              Home <HouseDoor size={15} />\r\n            </Button>\r\n            <Button\r\n              className=\"contact-link contact-btn\"\r\n              onClick={handleSendEmail}\r\n            >\r\n              Contact <BsMailbox size={15} />\r\n            </Button>\r\n            <Button\r\n              className=\"btn-primary lg logout-btn-postlogin\"\r\n              onClick={handleLogOut}\r\n            >\r\n              Log out <DoorOpen size={15} />\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mascot1.94682470.png\";","export default __webpack_public_path__ + \"static/media/mascot2.6b178a17.png\";","export default __webpack_public_path__ + \"static/media/mascot3.985f864f.png\";","export default __webpack_public_path__ + \"static/media/mascot4.c7f4c018.png\";","export default __webpack_public_path__ + \"static/media/mascot5.e8049a3c.png\";","export default __webpack_public_path__ + \"static/media/mascot6.f11f238c.png\";","export default __webpack_public_path__ + \"static/media/mascot7.cacb936c.png\";","export default __webpack_public_path__ + \"static/media/mascot8.0812ee4c.png\";","export default __webpack_public_path__ + \"static/media/mascot9.52956d24.png\";","export default __webpack_public_path__ + \"static/media/mascot10.81176592.png\";","export default __webpack_public_path__ + \"static/media/mascot11.3398e0b3.png\";","export default __webpack_public_path__ + \"static/media/mascot12.e618046c.png\";","export default __webpack_public_path__ + \"static/media/mascot13.3c5f4097.png\";","export default __webpack_public_path__ + \"static/media/mascot14.ae342c59.png\";","export default __webpack_public_path__ + \"static/media/mascot15.60d4dc05.png\";","export default __webpack_public_path__ + \"static/media/mascot16.b95cfb63.png\";","export default __webpack_public_path__ + \"static/media/mascot17.f1c18f6a.png\";","export default __webpack_public_path__ + \"static/media/mascot18.ab9e0475.png\";","export default __webpack_public_path__ + \"static/media/mascot19.09b164b3.png\";","export default __webpack_public_path__ + \"static/media/mascot20.5abc4ee0.png\";","export default __webpack_public_path__ + \"static/media/mascot21.f987818f.png\";","export default __webpack_public_path__ + \"static/media/mascot22.d63f3e81.png\";","export default __webpack_public_path__ + \"static/media/mascot23.22f60342.png\";","export default __webpack_public_path__ + \"static/media/mascot24.59017d10.png\";","export default __webpack_public_path__ + \"static/media/blank-image.60cfc62d.PNG\";","export default __webpack_public_path__ + \"static/media/orange.40586fa1.png\";","export default __webpack_public_path__ + \"static/media/head-scarf.7c85250e.png\";","export default __webpack_public_path__ + \"static/media/sky.33f7eb59.png\";","export default __webpack_public_path__ + \"static/media/mouth.c0689d7f.png\";","export default __webpack_public_path__ + \"static/media/cat.b764e54e.png\";","export default __webpack_public_path__ + \"static/media/croissant.e4cfdfe6.png\";","export default __webpack_public_path__ + \"static/media/red-hair.4ace0ba2.png\";","export default __webpack_public_path__ + \"static/media/mountains.bee317de.png\";","export default __webpack_public_path__ + \"static/media/bag.9adccfb9.png\";","export default __webpack_public_path__ + \"static/media/bear.04ad86ed.png\";","export default __webpack_public_path__ + \"static/media/cake.81477d6b.png\";","export default __webpack_public_path__ + \"static/media/old-man.1f67452d.png\";","export default __webpack_public_path__ + \"static/media/egg.c64a509a.png\";","export default __webpack_public_path__ + \"static/media/heart.66be8194.png\";","export default __webpack_public_path__ + \"static/media/fingers-crossed.69f09aba.png\";","export default __webpack_public_path__ + \"static/media/avocado.8a01b7f0.png\";","export default __webpack_public_path__ + \"static/media/black-hat.fab0ea28.png\";","export default __webpack_public_path__ + \"static/media/globe.b0446136.png\";","export default __webpack_public_path__ + \"static/media/glasses.3998c3b1.png\";","export default __webpack_public_path__ + \"static/media/milk.cf6903e7.png\";","export default __webpack_public_path__ + \"static/media/strawberry.d8dbd802.png\";","export default __webpack_public_path__ + \"static/media/helmet-man.0a26f7b3.png\";","export default __webpack_public_path__ + \"static/media/coffee.1f0958d6.png\";","export default __webpack_public_path__ + \"static/media/love-letter.6d60dcee.png\";","export default __webpack_public_path__ + \"static/media/calculator-badge.09340ec3.png\";","import Mascot1 from \"../images/Mascots/mascot1.png\";\r\nimport Mascot2 from \"../images/Mascots/mascot2.png\";\r\nimport Mascot3 from \"../images/Mascots/mascot3.png\";\r\nimport Mascot4 from \"../images/Mascots/mascot4.png\";\r\nimport Mascot5 from \"../images/Mascots/mascot5.png\";\r\nimport Mascot6 from \"../images/Mascots/mascot6.png\";\r\nimport Mascot7 from \"../images/Mascots/mascot7.png\";\r\nimport Mascot8 from \"../images/Mascots/mascot8.png\";\r\nimport Mascot9 from \"../images/Mascots/mascot9.png\";\r\nimport Mascot10 from \"../images/Mascots/mascot10.png\";\r\nimport Mascot11 from \"../images/Mascots/mascot11.png\";\r\nimport Mascot12 from \"../images/Mascots/mascot12.png\";\r\nimport Mascot13 from \"../images/Mascots/mascot13.png\";\r\nimport Mascot14 from \"../images/Mascots/mascot14.png\";\r\nimport Mascot15 from \"../images/Mascots/mascot15.png\";\r\nimport Mascot16 from \"../images/Mascots/mascot16.png\";\r\nimport Mascot17 from \"../images/Mascots/mascot17.png\";\r\nimport Mascot18 from \"../images/Mascots/mascot18.png\";\r\nimport Mascot19 from \"../images/Mascots/mascot19.png\";\r\nimport Mascot20 from \"../images/Mascots/mascot20.png\";\r\nimport Mascot21 from \"../images/Mascots/mascot21.png\";\r\nimport Mascot22 from \"../images/Mascots/mascot22.png\";\r\nimport Mascot23 from \"../images/Mascots/mascot23.png\";\r\nimport Mascot24 from \"../images/Mascots/mascot24.png\";\r\nimport BlankImage from \"../images/Mascots/blank-image.PNG\";\r\nimport Badge1 from \"../images/Rewards/orange.png\";\r\nimport Badge2 from \"../images/Rewards/head-scarf.png\";\r\nimport Badge3 from \"../images/Rewards/sky.png\";\r\nimport Badge4 from \"../images/Rewards/mouth.png\";\r\nimport Badge5 from \"../images/Rewards/cat.png\";\r\nimport Badge6 from \"../images/Rewards/croissant.png\";\r\nimport Badge7 from \"../images/Rewards/red-hair.png\";\r\nimport Badge8 from \"../images/Rewards/mountains.png\";\r\nimport Badge9 from \"../images/Rewards/bag.png\";\r\nimport Badge10 from \"../images/Rewards/bear.png\";\r\nimport Badge11 from \"../images/Rewards/cake.png\";\r\nimport Badge12 from \"../images/Rewards/old-man.png\";\r\nimport Badge13 from \"../images/Rewards/egg.png\";\r\nimport Badge14 from \"../images/Rewards/heart.png\";\r\nimport Badge15 from \"../images/Rewards/fingers-crossed.png\";\r\nimport Badge16 from \"../images/Rewards/avocado.png\";\r\nimport Badge17 from \"../images/Rewards/black-hat.png\";\r\nimport Badge18 from \"../images/Rewards/globe.png\";\r\nimport Badge19 from \"../images/Rewards/glasses.png\";\r\nimport Badge20 from \"../images/Rewards/milk.png\";\r\nimport Badge21 from \"../images/Rewards/strawberry.png\";\r\nimport Badge22 from \"../images/Rewards/helmet-man.png\";\r\nimport Badge23 from \"../images/Rewards/coffee.png\";\r\nimport Badge24 from \"../images/Rewards/love-letter.png\";\r\nimport Badge25 from \"../images/Rewards/calculator-badge.png\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n/*Returns a mascot image based on the index of the mascot in the mascot array \r\nretrieved from the database*/\r\nexport const getMascotImage = (index) => {\r\n  switch(index){\r\n    case 0: {\r\n      return Mascot1;\r\n    }\r\n    case 1: {\r\n      return Mascot2;\r\n    }\r\n    case 2: {\r\n      return Mascot3;\r\n    }\r\n    case 3: {\r\n      return Mascot4;\r\n    }\r\n    case 4: {\r\n      return Mascot5;\r\n    }\r\n    case 5: {\r\n      return Mascot6;\r\n    }\r\n    case 6: {\r\n      return Mascot7;\r\n    }\r\n    case 7: {\r\n      return Mascot8;\r\n    }\r\n    case 8: {\r\n      return Mascot9;\r\n    }\r\n    case 9: {\r\n      return Mascot10;\r\n    }\r\n    case 10: {\r\n      return Mascot11;\r\n    }\r\n    case 11: {\r\n      return Mascot12;\r\n    }\r\n    case 12: {\r\n      return Mascot13;\r\n    }\r\n    case 13: {\r\n      return Mascot14;\r\n    }\r\n    case 14: {\r\n      return Mascot15;\r\n    }\r\n    case 15: {\r\n      return Mascot16;\r\n    }\r\n    case 16: {\r\n      return Mascot17;\r\n    }\r\n    case 17: {\r\n      return Mascot18;\r\n    }\r\n    case 18: {\r\n      return Mascot19;\r\n    }\r\n    case 19: {\r\n      return Mascot20;\r\n    }\r\n    case 20: {\r\n      return Mascot21;\r\n    }\r\n    case 21: {\r\n      return Mascot22;\r\n    }\r\n    case 22: {\r\n      return Mascot23;\r\n    }\r\n    case 23: {\r\n      return Mascot24;\r\n    }\r\n    case 24:{\r\n      return BlankImage;\r\n    }\r\n    default:\r\n      return BlankImage;\r\n  }\r\n}\r\n\r\n/*Returns a reward image based on the index of the reward in the reward array \r\nretrieved from the database*/\r\nexport const getRewardImage = (index) => {\r\n  switch (index) {\r\n    case 0: {\r\n      return Badge1;\r\n    }\r\n    case 5: {\r\n      return Badge2;\r\n    }\r\n    case 10: {\r\n      return Badge3;\r\n    }\r\n    case 15: {\r\n      return Badge4;\r\n    }\r\n    case 20: {\r\n      return Badge5;\r\n    }\r\n    case 1: {\r\n      return Badge6;\r\n    }\r\n    case 6: {\r\n      return Badge7;\r\n    }\r\n    case 11: {\r\n      return Badge8;\r\n    }\r\n    case 16: {\r\n      return Badge9;\r\n    }\r\n    case 21: {\r\n      return Badge10;\r\n    }\r\n    case 2: {\r\n      return Badge11;\r\n    }\r\n    case 7: {\r\n      return Badge12;\r\n    }\r\n    case 12: {\r\n      return Badge13;\r\n    }\r\n    case 17: {\r\n      return Badge14;\r\n    }\r\n    case 22: {\r\n      return Badge15;\r\n    }\r\n    case 3: {\r\n      return Badge16;\r\n    }\r\n    case 8: {\r\n      return Badge17;\r\n    }\r\n    case 13: {\r\n      return Badge18;\r\n    }\r\n    case 18: {\r\n      return Badge19;\r\n    }\r\n    case 23: {\r\n      return Badge20;\r\n    }\r\n    case 4: {\r\n      return Badge21;\r\n    }\r\n    case 9: {\r\n      return Badge22;\r\n    }\r\n    case 14: {\r\n      return Badge23;\r\n    }\r\n    case 19: {\r\n      return Badge24;\r\n    }\r\n    case 24: {\r\n      return Badge25;\r\n    }\r\n    default:\r\n      console.log(\"The mascot images cannot be loaded\");\r\n      Swal.fire({\r\n        title: \"Oops, something went wrong!\",\r\n        text: \"Please try to refresh the page\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"OK\"\r\n      })\r\n  }\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport Parse from \"parse\";\r\nimport \"./Sidebar.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport {\r\n  BsChevronDoubleRight,\r\n  BsChevronDoubleLeft,\r\n  BsTrophy,\r\n  BsX,\r\n} from \"react-icons/bs\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getRewardImage } from \"../Utils\";\r\n\r\nexport default function Sidebar({ isOpen, toggle }) {\r\n  const [rewards, setRewards] = useState([]);\r\n  const [owned_rewards, setStudentRewards] = useState([]);\r\n  const [hasWonReward, setHasWonReward] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const fetchRewards = async () => {\r\n    const Rewards = new Parse.Object.extend(\"Reward\");\r\n    const query = new Parse.Query(Rewards);\r\n    const result = await query.find();\r\n    setRewards(result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchRewards();\r\n  }, []);\r\n\r\n  const retrieveStudent = async () => {\r\n    const student = Parse.User.current();\r\n    if (student) {\r\n      var active_days = student.get(\"active_days\");\r\n      var wonRewardId = getActiveDayReward(active_days.length);\r\n      var rewards = student.get(\"reward_badge_ids\");\r\n      if (wonRewardId !== \"\" && !rewards.includes(wonRewardId)) {\r\n        student.add(\"reward_badge_ids\", wonRewardId);\r\n        student.save();\r\n        rewards = await student.get(\"reward_badge_ids\");\r\n        setHasWonReward(true);\r\n        const points = student.get(\"total_points\");\r\n        const rewardPoints = points + 50;\r\n        student.set(\"total_points\", rewardPoints);\r\n      }\r\n      setStudentRewards(rewards);\r\n    } else {\r\n      console.log(\"The user couldn't be retrieved\");\r\n      Swal.fire({\r\n        title: \"Oops, something went wrong!\",\r\n        text: \"Please try to refresh the page\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"OK\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveStudent();\r\n  }, []);\r\n\r\n  const getActiveDayReward = (length) => {\r\n    switch (length) {\r\n      case 3: {\r\n        return \"Xn9GW6PD18\";\r\n      }\r\n      case 5: {\r\n        return \"BDOyMkhoXE\";\r\n      }\r\n      case 7: {\r\n        return \"1qWSzGiLPd\";\r\n      }\r\n      case 11: {\r\n        return \"ThWu7K9V65\";\r\n      }\r\n      case 15: {\r\n        return \"K4Sp4TC7SA\";\r\n      }\r\n      default: {\r\n        return \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSeeReward = () => {\r\n    history.push(\"/reward\");\r\n  };\r\n\r\n  const handleSeeBadgePage = () => {\r\n    history.push(\"/badgeinfo\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setHasWonReward(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"sidebar-container\"\r\n      style={{ maxWidth: isOpen ? \"450px\" : \"250px\" }}\r\n    >\r\n      <div className=\"sidebar-header\">\r\n        <h1\r\n          className=\"sidebarH1\"\r\n          style={{\r\n            fontSize: isOpen ? \"\" : \"16px\",\r\n            marginBottom: isOpen ? \"\" : \"0px\",\r\n          }}\r\n        >\r\n          Your Collection\r\n        </h1>\r\n        {isOpen ? (\r\n          <BsChevronDoubleLeft\r\n            onClick={toggle}\r\n            className=\"arrow-icon\"\r\n            alt=\"icon arrow\"\r\n          ></BsChevronDoubleLeft>\r\n        ) : (\r\n          <BsChevronDoubleRight\r\n            onClick={toggle}\r\n            className=\"arrow-icon\"\r\n            alt=\"icon arrow\"\r\n          ></BsChevronDoubleRight>\r\n        )}\r\n      </div>\r\n      {hasWonReward ? (\r\n        <div className=\"text-center reward_container\">\r\n          <p className=\"reward_message\">\r\n            Congratulations! You have won a reward, check it out!\r\n          </p>\r\n          <Button className=\"see_reward_btn\" onClick={handleSeeReward}>\r\n            See reward <BsTrophy />\r\n          </Button>\r\n          <Button className=\"close_btn\" onClick={handleClose}>\r\n            Close <BsX size={21} />\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <div>\r\n        <p className=\"sidebarP\" style={{ display: isOpen ? \"\" : \"none\" }}>\r\n          Hover over the badges to learn how to win them, or read more{\" \"}\r\n          <span className=\"pointer-cursor\" onClick={handleSeeBadgePage}>\r\n            here\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <div className=\"badge-col text-center\" style={{}}>\r\n        {rewards.map((reward) => (\r\n          <>\r\n            {owned_rewards.includes(reward.id) ? (\r\n              <img\r\n                key={reward.id}\r\n                alt=\"reward\"\r\n                className=\"unlocked-badge selector\"\r\n                src={getRewardImage(rewards.indexOf(reward))}\r\n                title={reward.attributes.description}\r\n              />\r\n            ) : (\r\n              <img\r\n                key={reward.id}\r\n                alt=\"reward\"\r\n                className=\"locked-badge selector\"\r\n                src={getRewardImage(rewards.indexOf(reward))}\r\n                title={reward.attributes.description}\r\n              />\r\n            )}\r\n          </>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport \"./UserInfoTable.css\";\r\nimport { BsFillSunFill, BsFillFilterSquareFill, BsGem } from \"react-icons/bs\";\r\n\r\nexport default function UserInfoTable({\r\n  total_points,\r\n  active_days,\r\n  total_answered_questions,\r\n}) {\r\n  return (\r\n    <Table>\r\n      <thead className=\"thead-light table-header\">\r\n        <tr>\r\n          <th scope=\"col\" className=\"table-header\">\r\n            CATEGORY\r\n          </th>\r\n          <th scope=\"col\" className=\"table-header\">\r\n            AMOUNT\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td className=\"body-text\">\r\n            <BsFillSunFill\r\n              size={25}\r\n              className=\"category-icon\"\r\n              color={\"#F2B84B\"}\r\n            />\r\n            Days you played\r\n          </td>\r\n          <td data-label=\"Days played\" className=\"body-text\">\r\n            {active_days} days\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"body-text\">\r\n            <BsFillFilterSquareFill\r\n              size={25}\r\n              className=\"category-icon\"\r\n              color={\"#FF6665\"}\r\n            />\r\n            Questions you answered\r\n          </td>\r\n          <td data-label=\"Questions you answered\" className=\"body-text\">\r\n            <span>{total_answered_questions} questions</span>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"body-text\">\r\n            <BsGem size={25} className=\"category-icon\" color={\"#7C7EF2\"} />\r\n            Your Points\r\n          </td>\r\n          <td data-label=\"Your points\" className=\"body-text\">\r\n            <span>{total_points} points</span>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Parse from \"parse\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Button, Image } from \"react-bootstrap\";\r\nimport { BsPerson } from \"react-icons/bs\";\r\nimport { getMascotImage } from \"../Utils\";\r\nimport UserInfoTable from \"../UserInfoTable/UserInfoTable\";\r\nimport \"./UserInfo.css\";\r\nimport { hotjar } from \"react-hotjar\";\r\n\r\nexport default function UserInfo() {\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [total_points, setTotal_points] = useState(0);\r\n  const [active_days, set_active_days] = useState([]);\r\n  const [total_answered_questions, setTotal_answered_questions] = useState(0);\r\n  const [active_mascot_index, setActiveMascotIndex] = useState(24);\r\n  const history = useHistory();\r\n\r\n  const handlePractice = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/practice\");\r\n  };\r\n\r\n  const handleChangeMascot = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/mascot\");\r\n  };\r\n\r\n  const toggle = () => {\r\n    if (isOpen) {\r\n      setIsOpen(false);\r\n    } else {\r\n      setIsOpen(true);\r\n    }\r\n  };\r\n\r\n  const retrieveUser = async (e) => {\r\n    const user = Parse.User.current();\r\n    if (user) {\r\n      var username = user.get(\"username\");\r\n      var total_points = user.get(\"total_points\");\r\n      var active_days = user.get(\"active_days\");\r\n      var total_answered_questions = user.get(\"total_answered_questions\");\r\n      var activeMascot = user.get(\"active_mascot_id\");\r\n      var activeMascotIndex = await fetchMascots(activeMascot);\r\n      setUsername(username);\r\n      setTotal_points(total_points);\r\n      set_active_days(active_days);\r\n      setTotal_answered_questions(total_answered_questions);\r\n      setActiveMascotIndex(activeMascotIndex);\r\n    } else {\r\n      e.preventDefault();\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveUser();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    hotjar.initialize(2701912);\r\n  }, []);\r\n\r\n  const fetchMascots = async (active_mascot_id) => {\r\n    const Mascots = new Parse.Object.extend(\"Mascot\");\r\n    const query = new Parse.Query(Mascots);\r\n    const mascotArray = await query.find();\r\n    var mascotIdArray = mascotArray.map((obj) => obj.id);\r\n    var mascotIndex = mascotIdArray.indexOf(active_mascot_id);\r\n    return mascotIndex;\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-container\">\r\n      <div className=\"sidebar-color-container\">\r\n        <Sidebar isOpen={isOpen} toggle={toggle} />\r\n      </div>\r\n      <div\r\n        className=\"user-info-col\"\r\n        style={{\r\n          width: isOpen ? \"70%\" : \"85%\",\r\n        }}\r\n      >\r\n        <div>\r\n          <h1 className=\"user-welcome-h1\">\r\n            Welcome {}\r\n            {username}!\r\n          </h1>\r\n        </div>\r\n        <div>\r\n          <p className=\"user-p\">\r\n            Start practicing your math skills to earn points and badges\r\n          </p>\r\n        </div>\r\n        <div className=\"card-mascot-div\">\r\n          <div className=\"card-div\">\r\n            <Button onClick={handlePractice} className=\"user-practice-btn\">\r\n              Start practice\r\n            </Button>\r\n          </div>\r\n          <div className=\"user-mascot-div\">\r\n            <Image\r\n              src={getMascotImage(active_mascot_index)}\r\n              className=\"user-mascot-img\"\r\n            />\r\n            <Button\r\n              onClick={handleChangeMascot}\r\n              className=\"user-change-mascot-btn\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Change your mascot <BsPerson />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h2 className=\"user-strike-h2\">Your strikes</h2>\r\n        </div>\r\n        <div className=\"table-div\">\r\n          <UserInfoTable\r\n            total_points={total_points}\r\n            active_days={active_days.length}\r\n            total_answered_questions={total_answered_questions}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport Navbar from \"../components/Navbar/NavbarPostlogin\";\r\nimport UserInfo from \"../components/UserInfo/UserInfo\";\r\n\r\nexport default function FrontPage() {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <UserInfo />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Container, Col } from \"react-bootstrap\";\r\nimport { DoorOpen, HouseDoor, Gem } from \"react-bootstrap-icons\";\r\nimport { BsMailbox } from \"react-icons/bs\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Parse from \"parse\";\r\nimport Logo from \"../../images/Logo/logo-prelogin.svg\";\r\nimport \"./NavbarPracticeMode.css\";\r\n\r\nexport default function NavbarPracticeMode() {\r\n  const [points, setPoints] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const resetTimer = async () => {\r\n    const student = Parse.User.current();\r\n    if (student) {\r\n      try {\r\n        student.set(\"practice_timer_count\", 2100);\r\n        await student.save();\r\n      } catch {\r\n        console.log(\"timer did not reset\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //Logs out the user and redirects the user to the landingpage\r\n  const handleLogOut = (e) => {\r\n    e.preventDefault();\r\n    resetTimer();\r\n    Parse.User.logOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  //Redirects the user to the frontpage\r\n  const handleHome = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/frontpage\");\r\n  };\r\n\r\n  const handleSendEmail = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/contact\");\r\n  };\r\n\r\n  //Fetches the total_points of the current user and saves them in totalPoints state\r\n  const fetchPoints = () => {\r\n    const user = Parse.User.current();\r\n    if (user) {\r\n      const totalPoints = user.get(\"total_points\");\r\n      setPoints(totalPoints);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPoints();\r\n  }, []);\r\n\r\n  return (\r\n    <Container fluid className=\"navbar\">\r\n      <Col>\r\n        <div className=\"logo-container\">\r\n          <img\r\n            className=\"logo\"\r\n            src={Logo}\r\n            alt=\"Logo of a calculator\"\r\n            onClick={handleHome}\r\n          ></img>\r\n        </div>\r\n      </Col>\r\n      <Col className=\"app-name-col\">\r\n        <h5 className=\"navbar-brand\">\r\n          <Gem size={15} color=\"#F4C46B\" /> {points}\r\n        </h5>\r\n      </Col>\r\n      <Col lg={1.5}>\r\n        <div className=\"btn-toolbar\">\r\n          <Button className=\"btn-primary lg home-btn\" onClick={handleHome}>\r\n            Home <HouseDoor size={15} />\r\n          </Button>\r\n          <Button\r\n            className=\"contact-link contact-btn\"\r\n            onClick={handleSendEmail}\r\n          >\r\n            Contact <BsMailbox size={15} />\r\n          </Button>\r\n          <Button\r\n            className=\"btn-primary lg logout-btn-postlogin\"\r\n            onClick={handleLogOut}\r\n          >\r\n            Log out <DoorOpen size={15} />\r\n          </Button>\r\n        </div>\r\n      </Col>\r\n    </Container>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/SpeakBoble.86cf4a0e.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport Parse from \"parse\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Form,\r\n  Col,\r\n  Button,\r\n  Card,\r\n  Image,\r\n} from \"react-bootstrap\";\r\nimport {\r\n  BsLifePreserver,\r\n  BsCheckCircle,\r\n  BsChevronRight,\r\n  BsFileText,\r\n  BsX,\r\n  BsTrophy,\r\n} from \"react-icons/bs\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getMascotImage } from \"../Utils\";\r\nimport SpeakBoble from \"../../images/Icons/SpeakBoble.svg\";\r\nimport \"./MultipleChoice.css\";\r\nimport { hotjar } from \"react-hotjar\";\r\n\r\nexport default function MultipleChoice() {\r\n  const [level, setLevel] = useState();\r\n  const [count, setCount] = useState();\r\n  const [showHint, setShowHint] = useState(false);\r\n  const [showExplanation, setShowExplanation] = useState(false);\r\n  const [showMotivation, setShowMotivation] = useState(false);\r\n  const [showWarning, setShowWarning] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [options, setOptions] = useState([]);\r\n  const [chosenOption, setChosenOption] = useState(\"\");\r\n  const [correct_answer, setCorrectAnswer] = useState(\"\");\r\n  const [hint, setHint] = useState(\"\");\r\n  const [explanation, setExplanation] = useState(\"\");\r\n  const [questionImage, setQuestionImage] = useState(\"\");\r\n  const [explanationImage, setExplanationImage] = useState(\"\");\r\n  const [currentQuestionId, setId] = useState(\"\");\r\n  const [total_points, setTotalPoints] = useState(0);\r\n  const [category, setCategory] = useState(\"\");\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [motivationMessage, setMotivationMessage] = useState(\"\");\r\n  const [motivationH1, setMotivationH1] = useState(\"\");\r\n  const motivationH1Correct = [\r\n    \"Correct!\",\r\n    \"Well done!\",\r\n    \"Impressive,\",\r\n    \"Super!\",\r\n    \"Outstanding,\",\r\n    \"Excellent\",\r\n    \"Cool!\",\r\n    \"Groovy,\",\r\n  ];\r\n  const correctMotivation = [\r\n    \"You're a true math master. Let's do another question.\",\r\n    \"You are doing so great! Keep on going.\",\r\n  ];\r\n  const wrongMotivation = [\r\n    \"That wasn’t quite right. Take a look at the explanantion.\",\r\n    \"Math can be hard. Try taking a look at the explanation.\",\r\n    \"You still got this! Take a look at the explanation and keep going.\",\r\n  ];\r\n  const motivationH1Wrong = [\"Woops!\", \"Oh well..\", \"Next time!\"];\r\n  const [active_mascot_index, setActiveMascotIndex] = useState(24);\r\n  const [hasOptionFraction, setHasOptionFraction] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const fetchQuestion = async (info) => {\r\n    setShowMotivation(false);\r\n    var activeMascotIndex = await fetchMascots(info.activeMascotId);\r\n    setActiveMascotIndex(activeMascotIndex);\r\n    const query = new Parse.Query(\"Questions\");\r\n    /*console.log(\r\n      \"Retrievestudent returned level: \" +\r\n        info.level +\r\n        \", correctids: \" +\r\n        info.correct\r\n    );*/\r\n    query.equalTo(\"category\", info.category);\r\n    query.equalTo(\"level\", info.level);\r\n    try {\r\n      let question = await query.find();\r\n      //console.log(\"array with questions: \" + question);\r\n      let foundQuestion = false;\r\n      while (!foundQuestion) {\r\n        let i = getRandomInt(10);\r\n        const currentId = question[i].id;\r\n        //console.log(\"The current question has this id: \" + currentId);\r\n        if (!info.correct.includes(currentId)) {\r\n          //console.log(\"This question is unanswered\");\r\n          const correct_answer = question[i].get(\"correct_answer\");\r\n          const description = question[i].get(\"description\");\r\n          const options = question[i].get(\"options\");\r\n          const hint = question[i].get(\"hint\");\r\n          const explanation = question[i].get(\"explanation\");\r\n          if (question[i].get(\"question_image\")) {\r\n            const questionImageURL = question[i].get(\"question_image\")._url;\r\n            setQuestionImage(questionImageURL);\r\n          }\r\n          if (question[i].get(\"explanation_image\")) {\r\n            const explanationImageURL =\r\n              question[i].get(\"explanation_image\")._url;\r\n            setExplanationImage(explanationImageURL);\r\n          }\r\n          if (options[0].includes(\"/frac\")) {\r\n            setHasOptionFraction(true);\r\n            let regex = /{([^}]+)}/g;\r\n            let result = [];\r\n            for (let i = 0; i < options.length; i++) {\r\n              let matches = [...options[i].matchAll(regex)];\r\n              let resultstring =\r\n                '<div className=\"fractioncontainer\"><sup><u><big>' +\r\n                matches[0][1] +\r\n                '</big></u></sup><br className=\"fractionbr\"/><sup><big>' +\r\n                matches[1][1] +\r\n                \"</big></sup></div>\";\r\n              result.push(resultstring);\r\n            }\r\n            setOptions(result);\r\n          } else {\r\n            setOptions(options);\r\n          }\r\n          setId(currentId);\r\n          setDescription(description);\r\n          setCorrectAnswer(correct_answer);\r\n          if (hint !== undefined) {\r\n            if (hint.includes(\"/frac\")) {\r\n              let regex = /{([^}]+)}/g;\r\n              let matches = [...hint.matchAll(regex)];\r\n              let resultstring =\r\n                \"<br/><br/><p> \" +\r\n                matches[1][1] +\r\n                \"<br/><u>\" +\r\n                matches[0][1] +\r\n                matches[2][1] +\r\n                \"</u></p>\";\r\n              let end = hint.indexOf(\"/frac\");\r\n              let newHint = hint.substring(0, end);\r\n              setHint(newHint + resultstring);\r\n            } else {\r\n              setHint(hint);\r\n            }\r\n          } else {\r\n            setHint(hint);\r\n          }\r\n          setExplanation(explanation);\r\n          foundQuestion = true;\r\n        } else {\r\n          console.log(\"The question was in the correct id array\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(`Error! ${error.message}`);\r\n      Swal.fire({\r\n        title: \"Oops, something went wrong!\",\r\n        text: \"Please try to refresh the page\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"OK\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const retrieveStudent = () => {\r\n    const category = getRandomCategory();\r\n    const student = Parse.User.current();\r\n    try {\r\n      if (student) {\r\n        const total_points = student.get(\"total_points\");\r\n        const correct = student.get(category + \"_correct_ids\");\r\n        const level = student.get(category + \"_level\");\r\n        const count = student.get(\"practice_timer_count\");\r\n        //console.log(count);\r\n        //console.log(\"Student retrieved correctids: \" + correct);\r\n        setTotalPoints(total_points);\r\n        setCategory(category);\r\n        setCount(count);\r\n        setLevel(level);\r\n        var activeMascotId = student.get(\"active_mascot_id\");\r\n        return { level, correct, category, activeMascotId };\r\n      }\r\n    } catch (e) {\r\n      console.log(\"The user couldn't be retrieved \" + e.message);\r\n      Swal.fire({\r\n        title: \"Oops, something went wrong!\",\r\n        text: \"Please try to refresh the page\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"OK\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const refreshPage = (e) => {\r\n    e.preventDefault();\r\n    hotjar.event(\"new question\");\r\n    history.go(0);\r\n  };\r\n\r\n  const fetchMascots = async (active_mascot_id) => {\r\n    const Mascots = new Parse.Object.extend(\"Mascot\");\r\n    const query = new Parse.Query(Mascots);\r\n    const mascotArray = await query.find();\r\n    var mascotIdArray = mascotArray.map((obj) => obj.id);\r\n    var mascotIndex = mascotIdArray.indexOf(active_mascot_id);\r\n    //console.log(mascotIndex + \" \" + active_mascot_id);\r\n    return mascotIndex;\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchQuestion(retrieveStudent());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    hotjar.initialize(2701912);\r\n  }, []);\r\n\r\n  function getRandomInt(max) {\r\n    return Math.floor(Math.random() * max);\r\n  }\r\n\r\n  const getRandomCategory = () => {\r\n    const categories = [\"number\", \"algebra\", \"measurement\", \"geometry\"];\r\n    const randomNumber = getRandomInt(categories.length);\r\n    const category = categories[randomNumber];\r\n    //console.log(\"Category: \" + category);\r\n    return category;\r\n  };\r\n\r\n  const getRandomMotivation = (motivationArray) => {\r\n    let motivation =\r\n      motivationArray[Math.floor(Math.random() * motivationArray.length)];\r\n    return motivation;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setChosenOption(e.target.value);\r\n  };\r\n\r\n  const toggleHint = () => {\r\n    if (showHint) {\r\n      setShowHint(false);\r\n    } else {\r\n      setShowWarning(false);\r\n      setShowHint(true);\r\n    }\r\n  };\r\n\r\n  const toggleExplanation = () => {\r\n    if (!showExplanation) {\r\n      const student = Parse.User.current();\r\n      if (student && explanation !== undefined) {\r\n        student.increment(\"checked_explanation\");\r\n        const totalexplanation = student.get(\"checked_explanation\");\r\n        if (\r\n          (totalexplanation % 20 === 0 || totalexplanation === 5) &&\r\n          0 < totalexplanation &&\r\n          totalexplanation < 81\r\n        ) {\r\n          const reward = getExplanationReward(totalexplanation);\r\n          student.add(\"reward_badge_ids\", reward);\r\n          const points = student.get(\"total_points\");\r\n          const rewardPoints = points + 50;\r\n          student.set(\"total_points\", rewardPoints);\r\n          Swal.fire({\r\n            title: \"Yay! You earned a badge!\",\r\n            text: \"Click OK to see your badge\",\r\n            icon: \"success\",\r\n            showDenyButton: true,\r\n            confirmButtonText: `OK`,\r\n            denyButtonText: `Close`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              history.push(\"/reward\");\r\n            } else if (result.isDenied) {\r\n              Swal.close();\r\n            }\r\n          });\r\n        }\r\n        student.save();\r\n      }\r\n      setShowExplanation(true);\r\n    }\r\n  };\r\n\r\n  const checkAnswer = (option) => {\r\n    var optionClass = \"\";\r\n    if (option === chosenOption) {\r\n      if (option === correct_answer) {\r\n        optionClass = \"correct-answer\";\r\n      } else {\r\n        optionClass = \"wrong-answer\";\r\n      }\r\n    }\r\n    return optionClass;\r\n  };\r\n\r\n  const showSubmitWarning = () => {\r\n    setShowHint(false);\r\n    setShowWarning(true);\r\n  };\r\n\r\n  const showSubmitMotivation = () => {\r\n    setShowWarning(false);\r\n    setSubmitted(true);\r\n    setShowMotivation(true);\r\n    setShowHint(false);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!chosenOption) {\r\n      showSubmitWarning();\r\n    } else {\r\n      showSubmitMotivation();\r\n    }\r\n    try {\r\n      const student = Parse.User.current();\r\n      if (student) {\r\n        const studentLevel = level;\r\n        let initialCount = count;\r\n        student.set(\"practice_timer_count\", initialCount);\r\n        student.increment(\"total_answered_questions\");\r\n        if (correct_answer === chosenOption) {\r\n          setMotivationH1(getRandomMotivation(motivationH1Correct));\r\n          setMotivationMessage(getRandomMotivation(correctMotivation));\r\n          let new_total_points = total_points + 10;\r\n          student.set(\"total_points\", new_total_points);\r\n          student.add(category + \"_correct_ids\", currentQuestionId);\r\n          //console.log(currentQuestionId);\r\n          student.increment(\"total_correct_questions\");\r\n          var correct = student.get(category + \"_correct_ids\");\r\n          if (correct.length === 7) {\r\n            if (studentLevel === 3) {\r\n              student.set(category + \"_level\", 1);\r\n              Swal.fire({\r\n                title: \"Congrats! You finished \" + category + \"!\",\r\n                text:\r\n                  \"You have answered all the questions in the \" +\r\n                  category +\r\n                  \" category. Let's take another round with the same questions. Practice makes perfect.\",\r\n                icon: \"success\",\r\n                confirmButtonText: \"OK\",\r\n              });\r\n            } else {\r\n              student.increment(category + \"_level\");\r\n              student.set(category + \"_correct_ids\", []);\r\n            }\r\n          }\r\n          //console.log(\"Added to the database in submit: \" + correct);\r\n          //console.log(\"The answer is correct!\");\r\n          const total_correct = student.get(\"total_correct_questions\");\r\n          const total_answered = student.get(\"total_answered_questions\");\r\n          if (\r\n            (total_answered % 20 === 0 || total_answered === 5) &&\r\n            0 < total_answered &&\r\n            total_answered < 81\r\n          ) {\r\n            const reward = getTotalAnsweredReward(total_answered);\r\n            student.add(\"reward_badge_ids\", reward);\r\n            const rewardPoints = new_total_points + 50;\r\n            student.set(\"total_points\", rewardPoints);\r\n            Swal.fire({\r\n              title: \"Yay! You won a badge!\",\r\n              text: \"Click OK to see your badge\",\r\n              icon: \"success\",\r\n              showDenyButton: true,\r\n              confirmButtonText: `OK`,\r\n              denyButtonText: `Close`,\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                history.push(\"/reward\");\r\n              } else if (result.isDenied) {\r\n                Swal.close();\r\n              }\r\n            });\r\n          }\r\n          if (\r\n            (total_correct % 20 === 0 || total_correct === 5) &&\r\n            0 < total_correct &&\r\n            total_correct < 81\r\n          ) {\r\n            const reward = getTotalCorrectReward(total_correct);\r\n            student.add(\"reward_badge_ids\", reward);\r\n            const originalpoints = student.get(\"total_points\");\r\n            const rewardPoints = originalpoints + 50;\r\n            student.set(\"total_points\", rewardPoints);\r\n            Swal.fire({\r\n              title: \"Yay! You won a badge!\",\r\n              text: \"Click OK to see your badge\",\r\n              icon: \"success\",\r\n              showDenyButton: true,\r\n              confirmButtonText: `OK`,\r\n              denyButtonText: `Close`,\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                history.push(\"/reward\");\r\n              } else if (result.isDenied) {\r\n                Swal.close();\r\n              }\r\n            });\r\n          }\r\n        } else {\r\n          setMotivationH1(getRandomMotivation(motivationH1Wrong));\r\n          setMotivationMessage(getRandomMotivation(wrongMotivation));\r\n          let new_total_points = total_points + 5;\r\n          student.set(\"total_points\", new_total_points);\r\n          const total_answered = student.get(\"total_answered_questions\");\r\n          if (\r\n            (total_answered % 20 === 0 || total_answered === 5) &&\r\n            0 < total_answered &&\r\n            total_answered < 81\r\n          ) {\r\n            const reward = getTotalAnsweredReward(total_answered);\r\n            student.add(\"reward_badge_ids\", reward);\r\n            const rewardPoints = new_total_points + 50;\r\n            student.set(\"total_points\", rewardPoints);\r\n            Swal.fire({\r\n              title: \"Yay! You won a badge!\",\r\n              text: \"Click OK to see your badge\",\r\n              icon: \"success\",\r\n              showDenyButton: true,\r\n              confirmButtonText: `OK`,\r\n              denyButtonText: `Close`,\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                history.push(\"/reward\");\r\n              } else if (result.isDenied) {\r\n                Swal.close();\r\n              }\r\n            });\r\n          }\r\n        }\r\n        await student.save();\r\n      }\r\n    } catch (error) {\r\n      console.log(`Error! ${error.message}`);\r\n      Swal.fire({\r\n        title: \"Oops, something went wrong!\",\r\n        text: \"Please try to refresh the page\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"OK\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const getTotalAnsweredReward = (length) => {\r\n    switch (length) {\r\n      case 5: {\r\n        return \"QmMHU6HOyE\";\r\n      }\r\n      case 20: {\r\n        return \"GwG4dzfCuT\";\r\n      }\r\n      case 40: {\r\n        return \"5IFox85lUC\";\r\n      }\r\n      case 60: {\r\n        return \"pjukkloh3r\";\r\n      }\r\n      case 80: {\r\n        return \"0qfqFayIZw\";\r\n      }\r\n      default: {\r\n        return \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const getTotalCorrectReward = (length) => {\r\n    switch (length) {\r\n      case 5: {\r\n        return \"QzQhNUEEp3\";\r\n      }\r\n      case 20: {\r\n        return \"IxEXq05Whj\";\r\n      }\r\n      case 40: {\r\n        return \"tSi2TA2olv\";\r\n      }\r\n      case 60: {\r\n        return \"SlmCKp4FMX\";\r\n      }\r\n      case 80: {\r\n        return \"f6C0n4oGX6\";\r\n      }\r\n      default: {\r\n        return \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const getExplanationReward = (length) => {\r\n    switch (length) {\r\n      case 5: {\r\n        return \"gRPbOWs9nE\";\r\n      }\r\n      case 20: {\r\n        return \"HwjknOcp4Y\";\r\n      }\r\n      case 40: {\r\n        return \"rCADOvIMcB\";\r\n      }\r\n      case 60: {\r\n        return \"zonuJlC6ZN\";\r\n      }\r\n      case 80: {\r\n        return \"TBYdE77gyD\";\r\n      }\r\n      default: {\r\n        return \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = count > 0 && setInterval(() => setCount(count - 1), 1000);\r\n    if (count == 0) {\r\n      handleBreakTime();\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [count]);\r\n\r\n  const handleBreakTime = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/break\");\r\n  };\r\n\r\n  return (\r\n    <Container fluid className=\"multiple-container\">\r\n      <Row className=\"question-row\">\r\n        <Col className=\"question-col\">\r\n          <div className=\"category-h1\">\r\n            {category ? (\r\n              <h1>{category.charAt(0).toUpperCase() + category.slice(1)}</h1>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <Card className=\"title-card\">\r\n            <Card.Body className=\"text-center\">\r\n              <Card.Title className=\"question-description\">\r\n                {description}\r\n              </Card.Title>\r\n            </Card.Body>\r\n          </Card>\r\n          <Image src={questionImage} className=\"question-img\" />\r\n          <Form>\r\n            <Card className=\"option-card\">\r\n              <Card.Body className=\"text-center\">\r\n                <fieldset className=\"options-form\">\r\n                  <Form.Group as={Row}>\r\n                    <Col className=\"options\">\r\n                      {hasOptionFraction\r\n                        ? options.map((option) => (\r\n                            <div key={`${option}`}>\r\n                              <Form.Check\r\n                                type=\"radio\"\r\n                                value={option}\r\n                                label={\r\n                                  <div\r\n                                    dangerouslySetInnerHTML={{ __html: option }}\r\n                                  />\r\n                                }\r\n                                name=\"formHorizontalRadios\"\r\n                                onChange={handleChange}\r\n                                disabled={submitted ? true : false}\r\n                                className={submitted ? checkAnswer(option) : \"\"}\r\n                              />\r\n                            </div>\r\n                          ))\r\n                        : options.map((option) => (\r\n                            <div key={`${option}`}>\r\n                              <Form.Check\r\n                                type=\"radio\"\r\n                                value={option}\r\n                                label={`${option}`}\r\n                                name=\"formHorizontalRadios\"\r\n                                onChange={handleChange}\r\n                                disabled={submitted ? true : false}\r\n                                className={\r\n                                  submitted ? checkAnswer(`${option}`) : \"\"\r\n                                }\r\n                              />\r\n                            </div>\r\n                          ))}\r\n                    </Col>\r\n                  </Form.Group>\r\n                </fieldset>\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            <Form.Group as={Row} className=\"mb-8 mt-8\">\r\n              <div>\r\n                {showExplanation ? (\r\n                  explanation !== undefined ? (\r\n                    <div className=\"explanation-div\">\r\n                      {explanationImage ? (\r\n                        <div className=\"explanation-img\">\r\n                          <Image\r\n                            src={explanationImage}\r\n                            className=\"explanation-img\"\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n\r\n                      <div className=\"explanation-text\">{explanation}</div>\r\n                    </div>\r\n                  ) : (\r\n                    <div\r\n                      className=\"explanation-div\"\r\n                      style={{ display: showExplanation ? \"\" : \"none\" }}\r\n                    >\r\n                      <div className=\"explanation-text\">\r\n                        Sorry, there is no explanation for this questions.\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </div>\r\n              {submitted ? (\r\n                <div className=\"btn-div\">\r\n                  <Button\r\n                    className=\"expl-btn quiz-btn\"\r\n                    onClick={toggleExplanation}\r\n                  >\r\n                    Explanation\r\n                    <BsFileText className=\"btn-icon\" />\r\n                  </Button>\r\n                  <Button\r\n                    className=\"next-btn quiz-btn\"\r\n                    onClick={refreshPage}\r\n                    type=\"submit\"\r\n                  >\r\n                    Next question\r\n                    <BsChevronRight className=\"btn-icon\" />\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"btn-div\">\r\n                  {showHint ? (\r\n                    <Button\r\n                      className=\"close-hint-btn quiz-btn\"\r\n                      onClick={toggleHint}\r\n                    >\r\n                      Close hint\r\n                      <BsLifePreserver className=\"btn-icon\" />\r\n                    </Button>\r\n                  ) : (\r\n                    <Button className=\"hint-btn quiz-btn\" onClick={toggleHint}>\r\n                      Hint\r\n                      <BsLifePreserver className=\"btn-icon\" />\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    id=\"sub-btn\"\r\n                    className=\"sub-btn quiz-btn\"\r\n                    onClick={handleSubmit}\r\n                    type=\"submit\"\r\n                  >\r\n                    Submit <BsCheckCircle className=\"btn-icon\" />\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </Form.Group>\r\n          </Form>\r\n        </Col>\r\n        <Col md=\"auto\" className=\"mascot-col\">\r\n          <div style={{ display: showHint ? \"\" : \"none\" }}>\r\n            <Image src={SpeakBoble} className=\"speakboble\" />\r\n\r\n            {hint ? (\r\n              <div className=\"speakboble-text text-center\">\r\n                <div dangerouslySetInnerHTML={{ __html: hint }} />\r\n              </div>\r\n            ) : (\r\n              <div className=\"speakboble-text\">\r\n                <h2>Sorry,</h2>\r\n                <p>\r\n                  there's no hint for this question. Try to ask your teacher \r\n                  for help.\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div style={{ display: showWarning ? \"\" : \"none\" }}>\r\n            <Image src={SpeakBoble} className=\"speakboble\" />\r\n            <div className=\"speakboble-text\">\r\n              <h2>Hold your horses!</h2>\r\n              <p>You need to pick an option.</p>\r\n            </div>\r\n          </div>\r\n          <div style={{ display: showMotivation ? \"\" : \"none\" }}>\r\n            <Image src={SpeakBoble} className=\"speakboble\" />\r\n            <div className=\"speakboble-text\">\r\n              <h2>{motivationH1}</h2>\r\n              <p>{motivationMessage}</p>\r\n            </div>\r\n          </div>\r\n          <Image\r\n            src={getMascotImage(active_mascot_index)}\r\n            className=\"quiz-mascot-img\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar/NavbarPracticeMode\";\r\nimport MultipleChoice from \"../components/PracticeSection/MultipleChoice\";\r\n\r\nexport default function PracticePage() {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <MultipleChoice />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { Gem, Person } from \"react-bootstrap-icons\";\r\nimport { BsChevronRight } from \"react-icons/bs\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getMascotImage } from \"../Utils\";\r\nimport Swal from \"sweetalert2\";\r\nimport Parse from \"parse\";\r\nimport \"./EditMascot.css\";\r\nimport { hotjar } from \"react-hotjar\";\r\n\r\nexport default function EditMascot() {\r\n  const history = useHistory();\r\n  const [mascots, setMascots] = useState([]);\r\n  const [owned_mascot_ids, setOwnedMascotIds] = useState([]);\r\n  const [active_mascot_id, setActiveMascotId] = useState(\"\");\r\n  const [total_points, setTotalPoints] = useState(0);\r\n\r\n  //Redirects the user to the frontpage\r\n  const handleGoBack = () => {\r\n    history.push(\"/frontpage\");\r\n  };\r\n\r\n  /*Fetches the mascots from the database and removes the blank mascot used as a placeholder\r\n  on the frontpage and in the multiplechoice section*/\r\n  const fetchMascots = async () => {\r\n    const Mascots = new Parse.Object.extend(\"Mascot\");\r\n    const query = new Parse.Query(Mascots);\r\n    const result = await query.find();\r\n    const removeBlank = result.filter((e) => e.attributes.required_points > 0);\r\n    setMascots(removeBlank);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMascots();\r\n    hotjar.initialize(2701912);\r\n  }, []);\r\n\r\n  //Fetches the student and sets the states used in this component\r\n  const fetchStudent = async () => {\r\n    const user = Parse.User.current();\r\n    if (user) {\r\n      var owned = user.get(\"owned_mascot_ids\");\r\n      var active = user.get(\"active_mascot_id\");\r\n      var points = user.get(\"total_points\");\r\n      setOwnedMascotIds(owned);\r\n      setActiveMascotId(active);\r\n      setTotalPoints(points);\r\n    } else {\r\n      Swal.fire({\r\n        title: \"Oops, something went wrong!\",\r\n        text: \"Please try to refresh the page\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"OK\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchStudent();\r\n  }, []);\r\n\r\n  /*Checks if a student has sufficient points to buy a mascot. If they do, checks if \r\n  the student has won a reward for owning a certain number of mascots*/\r\n  const buyMascot = (mascotId, mascotPrice, points) => {\r\n    if (points >= mascotPrice) {\r\n      const user = Parse.User.current();\r\n      if (user) {\r\n        user.add(\"owned_mascot_ids\", mascotId);\r\n        points -= mascotPrice;\r\n        setTotalPoints(points);\r\n        user.set(\"total_points\", points);\r\n        var owned = user.get(\"owned_mascot_ids\");\r\n        setOwnedMascotIds(owned);\r\n        var wonRewardId = getMascotReward(owned.length);\r\n        var hasWon = wonRewardId !== \"\";\r\n        if (hasWon) {\r\n          user.add(\"reward_badge_ids\", wonRewardId);\r\n          const rewardPoints = points + 50;\r\n          user.set(\"total_points\", rewardPoints);\r\n          setTotalPoints(rewardPoints);\r\n        }\r\n        user.save();\r\n        if (hasWon) {\r\n          history.push(\"/reward\");\r\n        }\r\n      }\r\n    } else {\r\n      Swal.fire({\r\n        title: \"You don't have enough points to buy this mascot!\",\r\n        text: \"You can earn more points by answering math questions\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"OK\",\r\n      });\r\n    }\r\n  };\r\n\r\n  //Returns the id of a reward based on the amount of mascots a user owns\r\n  const getMascotReward = (length) => {\r\n    switch (length) {\r\n      case 3: {\r\n        return \"Q6AkAx4llp\";\r\n      }\r\n      case 5: {\r\n        return \"skz6uxOpI6\";\r\n      }\r\n      case 7: {\r\n        return \"6U3vVNGZOO\";\r\n      }\r\n      case 9: {\r\n        return \"A66daWHfAy\";\r\n      }\r\n      case 11: {\r\n        return \"liTmaZ30Tb\";\r\n      }\r\n      default: {\r\n        return \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  //Sets the user's active mascot to the mascotId given as a parameter\r\n  const pickMascot = (mascotId) => {\r\n    const user = Parse.User.current();\r\n    if (user) {\r\n      user.set(\"active_mascot_id\", mascotId);\r\n      user.save();\r\n      setActiveMascotId(mascotId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mascot-container\">\r\n      <div className=\"point-container\">\r\n        <div className=\"points-div\">\r\n          <Gem color=\"#F2B84B\" size={50} />\r\n          <div className=\"point-circle\">\r\n            <p className=\"top-point-text text-center\">{total_points}</p>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Button className=\"go-back-btn\" onClick={handleGoBack}>\r\n            Go back <BsChevronRight />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Row>\r\n        {mascots.map((mascot) => (\r\n          <Col key={mascot.id}>\r\n            <Card\r\n              className=\"mascot-card\"\r\n              style={{\r\n                width: \"16rem\",\r\n                outline:\r\n                  mascot.id === active_mascot_id ? \"8px dashed #FBBB00\" : \"\",\r\n                boxShadow:\r\n                  mascot.id === active_mascot_id\r\n                    ? \"\"\r\n                    : \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n              }}\r\n            >\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src={getMascotImage(mascots.indexOf(mascot))}\r\n              />\r\n              <Card.Body className=\"text-center\">\r\n                <Card.Title className=\"mascot-name\">\r\n                  {mascot.attributes.name}\r\n                </Card.Title>\r\n                <Card.Text className=\"point-text\">\r\n                  <Gem color=\"#F2B84B\" /> {mascot.attributes.required_points}{\" \"}\r\n                  points\r\n                </Card.Text>\r\n                <div>\r\n                  {owned_mascot_ids.includes(mascot.id) ? (\r\n                    [\r\n                      active_mascot_id === mascot.id ? (\r\n                        <div key={mascot.id} className=\"active-mascot-btn\">\r\n                          Your mascot\r\n                        </div>\r\n                      ) : (\r\n                        <Button\r\n                          key={mascot.id}\r\n                          className=\"pick-mascot-btn\"\r\n                          variant=\"primary\"\r\n                          onClick={() => pickMascot(mascot.id)}\r\n                        >\r\n                          Pick mascot <Person />\r\n                        </Button>\r\n                      ),\r\n                    ]\r\n                  ) : (\r\n                    <Button\r\n                      key={mascot.id}\r\n                      className=\"buy-mascot-btn\"\r\n                      variant=\"primary\"\r\n                      onClick={() =>\r\n                        buyMascot(\r\n                          mascot.id,\r\n                          mascot.attributes.required_points,\r\n                          total_points\r\n                        )\r\n                      }\r\n                    >\r\n                      Buy mascot <Gem />\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n      <div className=\"go-back-btn-container\">\r\n        <Button className=\"go-back-btn\" onClick={handleGoBack}>\r\n          Go back <BsChevronRight />\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import NavbarPost from \"../components/Navbar/NavbarPostlogin\";\r\nimport EditMascot from \"../components/EditMascot/EditMascot\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\nexport default function EditMascotPage() {\r\n  return (\r\n    <div>\r\n      <NavbarPost />\r\n      <EditMascot />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col, Button, Image } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport { VscSmiley } from \"react-icons/vsc\";\r\nimport { BsChevronRight } from \"react-icons/bs\";\r\nimport { Trophy } from \"react-bootstrap-icons\";\r\nimport { getRewardImage } from \"../Utils\";\r\nimport Parse from \"parse\";\r\nimport \"./RewardSection.css\";\r\nimport { hotjar } from \"react-hotjar\";\r\n\r\nexport default function RewardSection() {\r\n  const [description, setDescription] = useState(\"\");\r\n  const [imgsrc, setImage] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  //Redirects the user to the page they were on when winning the badge\r\n  const handleGoBack = (e) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  //Redirects the user to the frontpage with their collection of badges\r\n  const handleCollection = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/badgeinfo\");\r\n  };\r\n\r\n  /*Gets the last element from the user's reward_badge_ids array and uses this to\r\n  retrieve the correct badge image and description from the database*/\r\n  const getReward = async () => {\r\n    const user = Parse.User.current();\r\n    var reward_id;\r\n    if (user) {\r\n      const reward_badge_ids = user.get(\"reward_badge_ids\");\r\n      reward_id = reward_badge_ids.at(-1);\r\n    } else {\r\n      alert(\"Failed to retrieve the user.\");\r\n    }\r\n    const Rewards = new Parse.Object.extend(\"Reward\");\r\n    const query = new Parse.Query(Rewards);\r\n    const rewardArray = await query.find();\r\n    query.equalTo(\"objectId\", reward_id);\r\n    const reward = await query.first();\r\n    const description = reward.attributes.description;\r\n    const index = rewardArray.map((element) => element.id).indexOf(reward_id);\r\n    const imgsrc = getRewardImage(index);\r\n    setDescription(description);\r\n    setImage(imgsrc);\r\n    return reward;\r\n  };\r\n\r\n  useEffect(() => {\r\n    getReward();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    hotjar.initialize(2701912);\r\n  }, []);\r\n\r\n  return (\r\n    <Container fluid className=\"reward-container\">\r\n      <Row className=\"reward-row\">\r\n        <Col>\r\n          <Image src={imgsrc} style={{ width: 366 }} />\r\n        </Col>\r\n        <Col className=\"text-div\">\r\n          <h2 className=\"h2-reward\">\r\n            Congratulations! <br /> You earned a badge\r\n          </h2>\r\n          <p className=\"p-reward\">\r\n            You earned your badge for this task:\r\n            <br /> <b>{description} </b> <Trophy className=\"trophy-icon\" />{\" \"}\r\n            <br />\r\n            You also earned 50 points! Good job!\r\n            <br />\r\n          </p>\r\n          <div className=\"button-div \">\r\n            <Button\r\n              className=\"practice-again-btn quiz_btn\"\r\n              onClick={handleCollection}\r\n            >\r\n              See collection <VscSmiley className=\"btn-icon\" />\r\n            </Button>\r\n            <Button\r\n              className=\"go-collection-btn quiz_btn\"\r\n              onClick={handleGoBack}\r\n            >\r\n              Go back <BsChevronRight className=\"btn-icon\" />\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar/NavbarPracticeMode\";\r\nimport RewardSection from \"../components/RewardSection/RewardSection\";\r\n\r\nexport default function RewardPage() {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <RewardSection />\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport Parse from \"parse\";\r\nimport { Form, Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { Tree, Envelope, ChevronRight } from \"react-bootstrap-icons\";\r\nimport { useHistory } from \"react-router\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"./RequestReset.css\";\r\nimport { hotjar } from \"react-hotjar\";\r\n\r\nexport default function RequestReset() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const updateEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const doRequestPasswordReset = async () => {\r\n    try {\r\n      await Parse.User.requestPasswordReset(email);\r\n      Swal.fire({\r\n        title: \"Succes!\",\r\n        text: `Please check ${email} to proceed with password reset.`,\r\n        icon: \"success\",\r\n        confirmButtonText: \"OK\",\r\n      });\r\n      return true;\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: \"Error!\",\r\n        text: `An error occured while sending the recovery email: ${error.message}. Try again!`,\r\n        icon: \"error\",\r\n        confirmButtonText: \"OK\",\r\n      });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleGoBack = (e) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    hotjar.initialize(2701912);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"email-container\">\r\n        <div className=\"text-center\">\r\n          <Tree size={30} color=\"#4D4D4D\" />\r\n          <h1 className=\"reset-h1\">Password recovery</h1>\r\n          <p className=\"reset-p\">\r\n            Enter the email connected to your account below and <br />\r\n            click send to recieve a password recovery email\r\n          </p>\r\n        </div>\r\n        <Container className=\"form-container\">\r\n          <Row>\r\n            <Col>\r\n              <Form>\r\n                <Form.Group controlId=\"formEmail\" className=\"upperform\">\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter an email\"\r\n                    onChange={updateEmail}\r\n                  />\r\n                </Form.Group>\r\n                <Button\r\n                  className=\"send-button\"\r\n                  variant=\"primary\"\r\n                  onClick={doRequestPasswordReset}\r\n                >\r\n                  Send <Envelope />\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n      <Button\r\n        className=\"go-back-button\"\r\n        variant=\"primary\"\r\n        onClick={handleGoBack}\r\n      >\r\n        Go back <ChevronRight />\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import NavBarPre from \"../components/Navbar/NavbarPrelogin\";\r\nimport ResetComponent from \"../components/Reset/RequestReset\";\r\n\r\nexport default function Reset() {\r\n  return (\r\n    <div>\r\n      <NavBarPre />\r\n      <ResetComponent />\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { Trophy } from \"react-bootstrap-icons\";\r\nimport { BsChevronRight} from \"react-icons/bs\";\r\nimport { VscSmiley } from \"react-icons/vsc\";\r\nimport { useHistory } from \"react-router\";\r\nimport Parse from \"parse\";\r\nimport \"./BadgeInfo.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getRewardImage } from \"../Utils\";\r\nimport { hotjar } from \"react-hotjar\";\r\n\r\nexport default function BadgeInfo() {\r\n  const history = useHistory();\r\n  const [rewards, setRewards] = useState([]);\r\n  const [owned_rewards, setStudentRewards] = useState([]);\r\n\r\n  //Redirects the user to the frontpage\r\n  const handleGoFrontpage = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/frontpage\");\r\n  };\r\n\r\n  const handleGoQuiz = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/practice\");\r\n  }\r\n\r\n  const fetchRewards = async () => {\r\n    const Rewards = new Parse.Object.extend(\"Reward\");\r\n    const query = new Parse.Query(Rewards);\r\n    const result = await query.find();\r\n    setRewards(result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchRewards();\r\n    hotjar.initialize(2701912);\r\n  }, []);\r\n\r\n  const retrieveStudent = async () => {\r\n    const student = Parse.User.current();\r\n    if (student) {\r\n      var owned_rewards = student.get(\"reward_badge_ids\");\r\n      setStudentRewards(owned_rewards);\r\n    } else {\r\n      console.log(\"The user couldn't be retrieved\");\r\n      Swal.fire({\r\n        title: \"Oops, something went wrong!\",\r\n        text: \"Please try to refresh the page\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"OK\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    retrieveStudent();\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"rewardi-container\">\r\n      <div className=\"rewardi-point-container\">\r\n        <div className=\"points-div\">\r\n          <Trophy color=\"#F2B84B\" size={50} />\r\n          <div className=\"header-circle\">\r\n            <p className=\"top-point-text text-center\">Badge Library</p>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Button className=\"go-quiz-btn\" onClick={handleGoQuiz}>\r\n            Go to quiz <VscSmiley />\r\n          </Button>\r\n          <Button className=\"filter-btn\" onClick={handleGoFrontpage}>\r\n            Go to frontpage <BsChevronRight />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Row>\r\n        {rewards.map((reward) => (\r\n          <Col key={reward.id}>\r\n            <Card className=\"reward-card\">\r\n              {owned_rewards.includes(reward.id) ? (\r\n                <Card.Img\r\n                  className=\"unlocked-card selector\"\r\n                  variant=\"top\"\r\n                  src={getRewardImage(rewards.indexOf(reward))}\r\n                />\r\n              ) : (\r\n                <Card.Img\r\n                  className=\"locked-card selector\"\r\n                  variant=\"top\"\r\n                  src={getRewardImage(rewards.indexOf(reward))}\r\n                />\r\n              )}\r\n              <Card.Body className=\"text-center\">\r\n                <Card.Title className=\"point-text\">\r\n                  {reward.attributes.description}\r\n                </Card.Title>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import NavbarPost from \"../components/Navbar/NavbarPostlogin\";\r\nimport BadgeInfo from \"../components/BadgeInfo/BadgeInfo\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\nexport default function EditMascotPage() {\r\n  return (\r\n    <div>\r\n      <NavbarPost />\r\n      <BadgeInfo />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/breakCamel.831e2421.png\";","import React, { useEffect } from \"react\";\r\nimport { Container, Row, Col, Button, Image } from \"react-bootstrap\";\r\nimport \"./Break.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { VscSmiley } from \"react-icons/vsc\";\r\nimport Camel from \"../../images/Break/breakCamel.png\";\r\nimport { hotjar } from \"react-hotjar\";\r\n\r\nexport default function Break() {\r\n  const history = useHistory();\r\n\r\n  const handleGoBack = () => {\r\n    history.push(\"/frontpage\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    hotjar.initialize(2701912);\r\n  }, []);\r\n  return (\r\n    <Container fluid className=\"break-container\">\r\n      <Row className=\"reward-row\">\r\n        <Col>\r\n          <Image src={Camel} style={{ width: 566 }} />\r\n        </Col>\r\n        <Col className=\"text-div\">\r\n          <h2 className=\"h2-break\">Time to take a break.</h2>\r\n          <p className=\"p-break\">\r\n            Good job! You’re on a roll. <br /> Take 5 minutes to cool off, and\r\n            come <br />\r\n            back to earn more points.\r\n          </p>\r\n          <div className=\"button-div \">\r\n            <Button\r\n              className=\"done-break-btn\"\r\n              variant=\"primary\"\r\n              onClick={handleGoBack}\r\n            >\r\n              I’m done with my break <VscSmiley className=\"btn-icon\" />\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar/NavbarPracticeMode\";\r\nimport Break from \"../components/Break/Break\";\r\n\r\nexport default function RewardPage() {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Break />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport emailjs from \"emailjs-com\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { Tree } from \"react-bootstrap-icons\";\r\nimport \"./Contact.css\";\r\nimport { hotjar } from \"react-hotjar\";\r\nexport default function Contact() {\r\n  const form = useRef();\r\n\r\n  const sendEmail = (e) => {\r\n    e.preventDefault();\r\n\r\n    emailjs\r\n      .sendForm(\r\n        \"service_sfq75k1\",\r\n        \"template_6009aok\",\r\n        form.current,\r\n        \"user_7OclaIRRNbXghSbtXYdJH\"\r\n      )\r\n      .then(\r\n        (result) => {\r\n          console.log(result.text);\r\n        },\r\n        (error) => {\r\n          console.log(error.text);\r\n        }\r\n      );\r\n    e.target.reset();\r\n  };\r\n\r\n  useEffect(() => {\r\n    hotjar.initialize(2701912);\r\n  }, []);\r\n\r\n  return (\r\n    <Container fluid className=\"contact-container\">\r\n      <Row className=\"justify-content-md-center email-row\">\r\n        <Col sx md=\"8\" lg=\"5\" className=\"email-col\">\r\n          <div className=\"text-center email-text-div\">\r\n            <Tree size={30} color=\"#4D4D4D\" />\r\n            <h1 className=\"welcome-h1\">Send us an email</h1>\r\n            <p className=\"welcome-p\">We would love to hear from you</p>\r\n          </div>\r\n          <Form ref={form} action=\"#\" onSubmit={sendEmail}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"user_name\"\r\n                placeholder=\"Your name\"\r\n                size=\"lg\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"user_email\"\r\n                placeholder=\"your@email.com\"\r\n                size=\"lg\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group\r\n              className=\"mb-3\"\r\n              controlId=\"exampleForm.ControlTextarea1\"\r\n            >\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                name=\"message\"\r\n                placeholder=\"Send us a message here :)\"\r\n                style={{ height: \"150px\" }}\r\n              />\r\n            </Form.Group>\r\n            <div className=\"btn-div\">\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"submit\"\r\n                className=\"sub-btn email-btn\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Contact from \"../components/Contact/Contact\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport Navbar from \"../components/Navbar/NavbarPostlogin\";\r\n\r\nexport default function ContactPage() {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        margin: \"0\",\r\n      }}\r\n    >\r\n      <Navbar />\r\n      <Contact />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport LandingPage from \"./pages/LandingPage\";\r\nimport RegisterPage from \"./pages/RegisterPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport FrontPage from \"./pages/FrontPage\";\r\nimport PracticePage from \"./pages/PracticePage\";\r\nimport EditMascotPage from \"./pages/EditMascotPage\";\r\nimport RewardPage from \"./pages/RewardPage\";\r\nimport Request from \"./pages/Reset\";\r\nimport BadgeInfoPage from \"./pages/BadgeInfoPage\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"@fontsource/rubik\";\r\nimport \"@fontsource/solway\";\r\nimport Break from \"./pages/BreakPage\";\r\nimport ContactPage from \"./pages/ContactPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={LandingPage} />\r\n          <Route exact path=\"/register\" component={RegisterPage} />\r\n          <Route exact path=\"/login\" component={LoginPage} />\r\n          <Route exact path=\"/frontpage\" component={FrontPage} />\r\n          <Route exact path=\"/practice\" component={PracticePage} />\r\n          <Route exact path=\"/mascot\" component={EditMascotPage} />\r\n          <Route exact path=\"/reward\" component={RewardPage} />\r\n          <Route exact path=\"/requestReset\" component={Request} />\r\n          <Route exact path=\"/break\" component={Break} />\r\n          <Route exact path=\"/badgeinfo\" component={BadgeInfoPage} />\r\n          <Route exact path=\"/contact\" component={ContactPage} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport Parse from \"parse\";\r\n\r\nParse.serverURL = \"https://mathapp.b4a.io\";\r\nParse.initialize(\r\n  \"V9n8X7uIrcCMcJre0nqCFfnyaka6MwkvrN5vnBcv\",\r\n  \"iTt0twJCFnn5sNxOXzNb7Ek9YC6mEKRQ98aoVey8\"\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
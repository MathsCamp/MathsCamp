{"version":3,"sources":["components/Navbar/NavbarPracticeMode.js","images/Logo/logo-prelogin.svg","App.js","components/Sidebar/Sidebar.js","components/UserInfoTable/UserInfoTable.js","components/UserInfo/UserInfo.js","pages/FrontPage.js","images/Icons/SpeakBoble.svg","components/PracticeSection/MultipleChoice.js","pages/PracticePage.js","images/Break/breakCamel.png","components/Break/Break.js","pages/BreakPage.js","components/Login/LoginRegisterCard.js","pages/LandingPage.js","components/Login/RegisterComponent.js","pages/RegisterPage.js","components/Login/LoginComponent.js","pages/LoginPage.js","components/EditMascot/EditMascot.js","pages/EditMascotPage.js","components/RewardSection/RewardSection.js","pages/RewardPage.js","components/Reset/RequestReset.js","pages/Reset.js","components/BadgeInfo/BadgeInfo.js","pages/BadgeInfoPage.js","components/Contact/Contact.js","pages/ContactPage.js","components/Footer/Footer.js","images/Mascots/mascot1.png","images/Mascots/mascot2.png","images/Mascots/mascot3.png","images/Mascots/mascot4.png","images/Mascots/mascot5.png","images/Mascots/mascot6.png","images/Mascots/mascot7.png","images/Mascots/mascot8.png","images/Mascots/mascot9.png","images/Mascots/mascot10.png","images/Mascots/mascot11.png","images/Mascots/mascot12.png","images/Mascots/mascot13.png","images/Mascots/mascot14.png","images/Mascots/mascot15.png","images/Mascots/mascot16.png","images/Mascots/mascot17.png","images/Mascots/mascot18.png","images/Mascots/mascot19.png","images/Mascots/mascot20.png","images/Mascots/mascot21.png","images/Mascots/mascot22.png","images/Mascots/mascot23.png","images/Mascots/mascot24.png","images/Mascots/blank-image.PNG","images/Rewards/orange.png","images/Rewards/head-scarf.png","images/Rewards/sky.png","images/Rewards/mouth.png","images/Rewards/cat.png","images/Rewards/croissant.png","images/Rewards/red-hair.png","images/Rewards/mountains.png","images/Rewards/bag.png","images/Rewards/bear.png","images/Rewards/cake.png","images/Rewards/old-man.png","images/Rewards/egg.png","images/Rewards/heart.png","images/Rewards/fingers-crossed.png","images/Rewards/avocado.png","images/Rewards/black-hat.png","images/Rewards/globe.png","images/Rewards/glasses.png","images/Rewards/milk.png","images/Rewards/strawberry.png","images/Rewards/helmet-man.png","images/Rewards/coffee.png","images/Rewards/love-letter.png","images/Rewards/calculator-badge.png","components/Utils.js","../node_modules/express/lib sync","reportWebVitals.js","index.js","components/Navbar/NavbarPrelogin.js","images/Logo/logo-postlogin.svg","components/Navbar/NavbarPostlogin.js"],"names":["NavbarPracticeMode","useState","points","setPoints","history","useHistory","resetTimer","a","student","Parse","User","current","set","save","console","log","handleHome","push","useEffect","user","totalPoints","get","fetchPoints","fluid","className","src","Logo","alt","onClick","size","color","lg","logOut","App","express","require","path","app","use","static","join","__dirname","req","res","sendFile","listen","exact","component","LandingPage","RegisterPage","LoginPage","FrontPage","PracticePage","EditMascotPage","exaxt","RewardPage","Request","Break","BadgeInfoPage","ContactPage","Sidebar","isOpen","toggle","rewards","setRewards","owned_rewards","setStudentRewards","hasWonReward","setHasWonReward","fetchRewards","Rewards","Object","extend","query","Query","find","result","retrieveStudent","active_days","wonRewardId","getActiveDayReward","length","includes","add","rewardPoints","Swal","fire","title","text","icon","confirmButtonText","style","maxWidth","fontSize","marginBottom","Button","display","map","reward","id","getRewardImage","indexOf","attributes","description","UserInfoTable","total_points","total_answered_questions","Table","scope","UserInfo","setIsOpen","username","setUsername","setTotal_points","set_active_days","setTotal_answered_questions","active_mascot_index","setActiveMascotIndex","retrieveUser","activeMascot","fetchMascots","activeMascotIndex","active_mascot_id","Mascots","mascotArray","mascotIdArray","obj","mascotIndex","width","Image","getMascotImage","variant","type","Footer","MultipleChoice","count","setCount","showHint","setShowHint","showExplanation","setShowExplanation","showMotivation","setShowMotivation","showWarning","setShowWarning","setDescription","options","setOptions","chosenOption","setChosenOption","correct_answer","setCorrectAnswer","hint","setHint","explanation","setExplanation","questionImage","setQuestionImage","explanationImage","setExplanationImage","currentQuestionId","setId","setTotalPoints","category","setCategory","submitted","setSubmitted","motivationMessage","setMotivationMessage","motivationH1","setMotivationH1","motivationH1Correct","motivationH1Wrong","correctMotivation","wrongMotivation","fetchQuestion","info","activeMascotId","level","correct","equalTo","question","foundQuestion","i","getRandomInt","currentId","questionImageURL","_url","explanationImageURL","message","getRandomCategory","max","Math","floor","random","categories","getRandomMotivation","motivationArray","handleChange","e","target","value","toggleHint","checkAnswer","option","optionClass","handleSubmit","preventDefault","initialCount","increment","new_total_points","total_correct","total_answered","getTotalAnsweredReward","getTotalCorrectReward","originalpoints","getExplanationReward","timer","setInterval","handleBreakTime","clearInterval","Container","Row","Col","charAt","toUpperCase","slice","Card","Body","Title","Form","Group","as","Check","label","name","onChange","disabled","undefined","totalexplanation","md","SpeakBoble","Camel","LoginRegisterCard","ButtonToolbar","height","flexDirection","justifyContent","RegisterComponent","password","setPassword","email","setEmail","handleReg","date","Date","toLocaleDateString","signUp","onSubmit","controlId","Label","Control","placeholder","LoginComponent","handleLogUser","logIn","active","element","EditMascot","mascots","setMascots","owned_mascot_ids","setOwnedMascotIds","setActiveMascotId","handleGoBack","removeBlank","filter","required_points","fetchStudent","owned","getMascotReward","mascot","outline","boxShadow","Img","Text","mascotId","pickMascot","mascotPrice","hasWon","buyMascot","RewardSection","imgsrc","setImage","getReward","reward_badge_ids","reward_id","at","alert","rewardArray","first","index","goBack","RequestReset","doRequestPasswordReset","requestPasswordReset","Reset","BadgeInfo","Contact","form","useRef","sx","ref","action","emailjs","sendForm","then","error","reset","margin","Mascot1","Mascot2","Mascot3","Mascot4","Mascot5","Mascot6","Mascot7","Mascot8","Mascot9","Mascot10","Mascot11","Mascot12","Mascot13","Mascot14","Mascot15","Mascot16","Mascot17","Mascot18","Mascot19","Mascot20","Mascot21","Mascot22","Mascot23","Mascot24","BlankImage","Badge1","Badge2","Badge3","Badge4","Badge5","Badge6","Badge7","Badge8","Badge9","Badge10","Badge11","Badge12","Badge13","Badge14","Badge15","Badge16","Badge17","Badge18","Badge19","Badge20","Badge21","Badge22","Badge23","Badge24","Badge25","webpackEmptyContext","Error","code","keys","resolve","module","exports","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","serverURL","initialize","ReactDOM","render","StrictMode","document","getElementById","NavbarPrelogin","NavbarPostlogin"],"mappings":"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","file":"static/js/main.b27e09f9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, Container, Col } from \"react-bootstrap\";\nimport { DoorOpen, HouseDoor, Gem } from \"react-bootstrap-icons\";\nimport { BsMailbox } from \"react-icons/bs\";\nimport { useHistory } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport Parse from \"parse\";\nimport Logo from \"../../images/Logo/logo-prelogin.svg\";\nimport \"./NavbarPracticeMode.css\";\n\nexport default function NavbarPracticeMode() {\n  const [points, setPoints] = useState(0);\n  const history = useHistory();\n\n  const resetTimer = async () => {\n    const student = Parse.User.current();\n    if (student) {\n      try {\n        student.set(\"practice_timer_count\", 2100);\n        await student.save();\n      } catch {\n        console.log(\"timer did not reset\");\n      }\n    }\n  };\n\n  //Logs out the user and redirects the user to the landingpage\n  const handleLogOut = () => {\n    Parse.User.logOut();\n    resetTimer();\n    history.push(\"/\");\n  };\n\n  //Redirects the user to the frontpage\n  const handleHome = () => {\n    history.push(\"/frontpage\");\n  };\n\n  const handleSendEmail = () => {\n    history.push(\"/contact\");\n  };\n\n  //Fetches the total_points of the current user and saves them in totalPoints state\n  const fetchPoints = () => {\n    const user = Parse.User.current();\n    if (user) {\n      const totalPoints = user.get(\"total_points\");\n      setPoints(totalPoints);\n    }\n  };\n\n  useEffect(() => {\n    fetchPoints();\n  }, []);\n\n  return (\n    <Container fluid className=\"navbar\">\n      <Col>\n        <div className=\"logo-container\">\n          <img\n            className=\"logo\"\n            src={Logo}\n            alt=\"Logo of a calculator\"\n            onClick={handleHome}\n          ></img>\n        </div>\n      </Col>\n      <Col className=\"app-name-col\">\n        <h5 className=\"navbar-brand\">\n          <Gem size={15} color=\"#F4C46B\" /> {points}\n        </h5>\n      </Col>\n      <Col lg={1.5}>\n        <div className=\"btn-toolbar\">\n          <Button className=\"btn-primary lg home-btn\" onClick={handleHome}>\n            Home <HouseDoor size={15} />\n          </Button>\n          <Button\n            className=\"contact-link contact-btn\"\n            onClick={handleSendEmail}\n          >\n            Contact <BsMailbox size={15} />\n          </Button>\n          <Button\n            className=\"btn-primary lg logout-btn-postlogin\"\n            onClick={handleLogOut}\n          >\n            Log out <DoorOpen size={15} />\n          </Button>\n        </div>\n      </Col>\n    </Container>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo-prelogin.9a9825cf.svg\";","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LandingPage from \"./pages/LandingPage\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport FrontPage from \"./pages/FrontPage\";\nimport PracticePage from \"./pages/PracticePage\";\nimport EditMascotPage from \"./pages/EditMascotPage\";\nimport RewardPage from \"./pages/RewardPage\";\nimport Request from \"./pages/Reset\";\nimport BadgeInfoPage from \"./pages/BadgeInfoPage\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fontsource/rubik\";\nimport \"@fontsource/solway\";\nimport Break from \"./pages/BreakPage\";\nimport ContactPage from \"./pages/ContactPage\";\n\nfunction App() {\n  const express = require(\"express\");\n  const path = require(\"path\");\n  const app = express();\n\n  app.use(express.static(path.join(__dirname, \"build\")));\n\n  app.get(\"/*\", function (req, res) {\n    res.sendFile(path.join(__dirname, \"build\", \"index.html\"));\n  });\n\n  app.listen(9000);\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route exact path=\"/register\" component={RegisterPage} />\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/frontpage\" component={FrontPage} />\n          <Route exact path=\"/practice\" component={PracticePage} />\n          <Route exact path=\"/mascot\" component={EditMascotPage} />\n          <Route exaxt path=\"/reward\" component={RewardPage} />\n          <Route exaxt path=\"/requestReset\" component={Request} />\n          <Route exaxt path=\"/break\" component={Break} />\n          <Route exaxt path=\"/badgeinfo\" component={BadgeInfoPage} />\n          <Route exaxt path=\"/contact\" component={ContactPage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState } from \"react\";\nimport Parse from \"parse\";\nimport \"./Sidebar.css\";\nimport Swal from \"sweetalert2\";\nimport { Button } from \"react-bootstrap\";\nimport {\n  BsChevronDoubleRight,\n  BsChevronDoubleLeft,\n  BsTrophy,\n  BsX,\n} from \"react-icons/bs\";\nimport { useHistory } from \"react-router\";\nimport { getRewardImage } from \"../Utils\";\n\nexport default function Sidebar({ isOpen, toggle }) {\n  const [rewards, setRewards] = useState([]);\n  const [owned_rewards, setStudentRewards] = useState([]);\n  const [hasWonReward, setHasWonReward] = useState(false);\n  const history = useHistory();\n\n  const fetchRewards = async () => {\n    const Rewards = new Parse.Object.extend(\"Reward\");\n    const query = new Parse.Query(Rewards);\n    const result = await query.find();\n    setRewards(result);\n  };\n\n  useEffect(() => {\n    fetchRewards();\n  }, []);\n\n  const retrieveStudent = async () => {\n    const student = Parse.User.current();\n    if (student) {\n      var active_days = student.get(\"active_days\");\n      var wonRewardId = getActiveDayReward(active_days.length);\n      var rewards = student.get(\"reward_badge_ids\");\n      if (wonRewardId !== \"\" && !rewards.includes(wonRewardId)) {\n        student.add(\"reward_badge_ids\", wonRewardId);\n        student.save();\n        rewards = await student.get(\"reward_badge_ids\");\n        setHasWonReward(true);\n        const points = student.get(\"total_points\");\n        const rewardPoints = points + 50;\n        student.set(\"total_points\", rewardPoints);\n      }\n      setStudentRewards(rewards);\n    } else {\n      console.log(\"The user couldn't be retrieved\");\n      Swal.fire({\n        title: \"Oops, something went wrong!\",\n        text: \"Please try to refresh the page\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    retrieveStudent();\n  }, []);\n\n  const getActiveDayReward = (length) => {\n    switch (length) {\n      case 3: {\n        return \"Xn9GW6PD18\";\n      }\n      case 5: {\n        return \"BDOyMkhoXE\";\n      }\n      case 7: {\n        return \"1qWSzGiLPd\";\n      }\n      case 11: {\n        return \"ThWu7K9V65\";\n      }\n      case 15: {\n        return \"K4Sp4TC7SA\";\n      }\n      default: {\n        return \"\";\n      }\n    }\n  };\n\n  const handleSeeReward = () => {\n    history.push(\"/reward\");\n  };\n\n  const handleSeeBadgePage = () => {\n    history.push(\"/badgeinfo\");\n  };\n\n  const handleClose = () => {\n    setHasWonReward(false);\n  };\n\n  return (\n    <div\n      className=\"sidebar-container\"\n      style={{ maxWidth: isOpen ? \"450px\" : \"250px\" }}\n    >\n      <div className=\"sidebar-header\">\n        <h1\n          className=\"sidebarH1\"\n          style={{\n            fontSize: isOpen ? \"\" : \"16px\",\n            marginBottom: isOpen ? \"\" : \"0px\",\n          }}\n        >\n          Your Collection\n        </h1>\n        {isOpen ? (\n          <BsChevronDoubleLeft\n            onClick={toggle}\n            className=\"arrow-icon\"\n            alt=\"icon arrow\"\n          ></BsChevronDoubleLeft>\n        ) : (\n          <BsChevronDoubleRight\n            onClick={toggle}\n            className=\"arrow-icon\"\n            alt=\"icon arrow\"\n          ></BsChevronDoubleRight>\n        )}\n      </div>\n      {hasWonReward ? (\n        <div className=\"text-center reward_container\">\n          <p className=\"reward_message\">\n            Congratulations! You have won a reward, check it out!\n          </p>\n          <Button className=\"see_reward_btn\" onClick={handleSeeReward}>\n            See reward <BsTrophy />\n          </Button>\n          <Button className=\"close_btn\" onClick={handleClose}>\n            Close <BsX size={21} />\n          </Button>\n        </div>\n      ) : (\n        <div></div>\n      )}\n      <div>\n        <p className=\"sidebarP\" style={{ display: isOpen ? \"\" : \"none\" }}>\n          Hover the badges to learn how to win them, or read more{\" \"}\n          <span className=\"pointer-cursor\" onClick={handleSeeBadgePage}>\n            here\n          </span>\n        </p>\n      </div>\n      <div className=\"badge-col text-center\" style={{}}>\n        {rewards.map((reward) => (\n          <>\n            {owned_rewards.includes(reward.id) ? (\n              <img\n                key={reward.id}\n                alt=\"reward\"\n                className=\"unlocked-badge selector\"\n                src={getRewardImage(rewards.indexOf(reward))}\n                title={reward.attributes.description}\n              />\n            ) : (\n              <img\n                key={reward.id}\n                alt=\"reward\"\n                className=\"locked-badge selector\"\n                src={getRewardImage(rewards.indexOf(reward))}\n                title={reward.attributes.description}\n              />\n            )}\n          </>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport \"./UserInfoTable.css\";\nimport { BsFillSunFill, BsFillFilterSquareFill, BsGem } from \"react-icons/bs\";\n\nexport default function UserInfoTable({\n  total_points,\n  active_days,\n  total_answered_questions,\n}) {\n  return (\n    <Table>\n      <thead className=\"thead-light table-header\">\n        <tr>\n          <th scope=\"col\" className=\"table-header\">\n            CATEGORY\n          </th>\n          <th scope=\"col\" className=\"table-header\">\n            AMOUNT\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td className=\"body-text\">\n            <BsFillSunFill\n              size={25}\n              className=\"category-icon\"\n              color={\"#F2B84B\"}\n            />\n            Days you played\n          </td>\n          <td data-label=\"Days played\" className=\"body-text\">\n            {active_days} days\n          </td>\n        </tr>\n        <tr>\n          <td className=\"body-text\">\n            <BsFillFilterSquareFill\n              size={25}\n              className=\"category-icon\"\n              color={\"#FF6665\"}\n            />\n            Questions you answered\n          </td>\n          <td data-label=\"Questions you answered\" className=\"body-text\">\n            <span>{total_answered_questions} questions</span>\n          </td>\n        </tr>\n        <tr>\n          <td className=\"body-text\">\n            <BsGem size={25} className=\"category-icon\" color={\"#7C7EF2\"} />\n            Your Points\n          </td>\n          <td data-label=\"Your points\" className=\"body-text\">\n            <span>{total_points} points</span>\n          </td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Parse from \"parse\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport { useHistory } from \"react-router\";\nimport { Button, Image } from \"react-bootstrap\";\nimport { BsPerson } from \"react-icons/bs\";\nimport { getMascotImage } from \"../Utils\";\nimport UserInfoTable from \"../UserInfoTable/UserInfoTable\";\nimport \"./UserInfo.css\";\n\nexport default function UserInfo() {\n  const [isOpen, setIsOpen] = useState(true);\n  const [username, setUsername] = useState(\"\");\n  const [total_points, setTotal_points] = useState(0);\n  const [active_days, set_active_days] = useState([]);\n  const [total_answered_questions, setTotal_answered_questions] = useState(0);\n  const [active_mascot_index, setActiveMascotIndex] = useState(24);\n  const history = useHistory();\n\n  const handlePractice = () => {\n    history.push(\"/practice\");\n  };\n\n  const handleChangeMascot = () => {\n    history.push(\"/mascot\");\n  };\n\n  const toggle = () => {\n    if (isOpen) {\n      setIsOpen(false);\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const retrieveUser = async () => {\n    const user = Parse.User.current();\n    if (user) {\n      var username = user.get(\"username\");\n      var total_points = user.get(\"total_points\");\n      var active_days = user.get(\"active_days\");\n      var total_answered_questions = user.get(\"total_answered_questions\");\n      var activeMascot = user.get(\"active_mascot_id\");\n      var activeMascotIndex = await fetchMascots(activeMascot);\n      setUsername(username);\n      setTotal_points(total_points);\n      set_active_days(active_days);\n      setTotal_answered_questions(total_answered_questions);\n      setActiveMascotIndex(activeMascotIndex);\n    } else {\n      history.push(\"/login\");\n    }\n  };\n\n  useEffect(() => {\n    retrieveUser();\n  }, []);\n\n  const fetchMascots = async (active_mascot_id) => {\n    const Mascots = new Parse.Object.extend(\"Mascot\");\n    const query = new Parse.Query(Mascots);\n    const mascotArray = await query.find();\n    var mascotIdArray = mascotArray.map((obj) => obj.id);\n    var mascotIndex = mascotIdArray.indexOf(active_mascot_id);\n    return mascotIndex;\n  };\n\n  return (\n    <div className=\"user-container\">\n      <div className=\"sidebar-color-container\">\n        <Sidebar isOpen={isOpen} toggle={toggle} />\n      </div>\n      <div\n        className=\"user-info-col\"\n        style={{\n          width: isOpen ? \"70%\" : \"85%\",\n        }}\n      >\n        <div>\n          <h1 className=\"user-welcome-h1\">\n            Welcome {}\n            {username}!\n          </h1>\n        </div>\n        <div>\n          <p className=\"user-p\">\n            Start practicing your math skills to earn points and badges\n          </p>\n        </div>\n        <div className=\"card-mascot-div\">\n          <div className=\"card-div\">\n            <Button onClick={handlePractice} className=\"user-practice-btn\">\n              Start practice\n            </Button>\n          </div>\n          <div className=\"user-mascot-div\">\n            <Image\n              src={getMascotImage(active_mascot_index)}\n              className=\"user-mascot-img\"\n            />\n            <Button\n              onClick={handleChangeMascot}\n              className=\"user-change-mascot-btn\"\n              variant=\"primary\"\n              type=\"submit\"\n            >\n              Change your mascot <BsPerson />\n            </Button>\n          </div>\n        </div>\n        <div>\n          <h2 className=\"user-strike-h2\">Your strikes</h2>\n        </div>\n        <div className=\"table-div\">\n          <UserInfoTable\n            total_points={total_points}\n            active_days={active_days.length}\n            total_answered_questions={total_answered_questions}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Footer from \"../components/Footer/Footer\";\nimport Navbar from \"../components/Navbar/NavbarPostlogin\";\nimport UserInfo from \"../components/UserInfo/UserInfo\";\n\nexport default function FrontPage() {\n  return (\n    <>\n      <Navbar />\n      <UserInfo />\n      <Footer />\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/SpeakBoble.95a5b408.svg\";","import React, { useState, useEffect, useRef } from \"react\";\nimport Parse from \"parse\";\nimport Swal from \"sweetalert2\";\nimport {\n  Container,\n  Row,\n  Form,\n  Col,\n  Button,\n  Card,\n  Image,\n} from \"react-bootstrap\";\nimport {\n  BsLifePreserver,\n  BsCheckCircle,\n  BsChevronRight,\n  BsFileText,\n  BsX,\n  BsTrophy,\n} from \"react-icons/bs\";\nimport { useHistory } from \"react-router\";\nimport { getMascotImage } from \"../Utils\";\nimport SpeakBoble from \"../../images/Icons/SpeakBoble.svg\";\nimport \"./MultipleChoice.css\";\n\nexport default function MultipleChoice() {\n  const [count, setCount] = useState();\n  const [showHint, setShowHint] = useState(false);\n  const [showExplanation, setShowExplanation] = useState(false);\n  const [showMotivation, setShowMotivation] = useState(false);\n  const [showWarning, setShowWarning] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  const [chosenOption, setChosenOption] = useState(\"\");\n  const [correct_answer, setCorrectAnswer] = useState(\"\");\n  const [hint, setHint] = useState(\"\");\n  const [explanation, setExplanation] = useState(\"\");\n  const [questionImage, setQuestionImage] = useState(\"\");\n  const [explanationImage, setExplanationImage] = useState(\"\");\n  const [currentQuestionId, setId] = useState(\"\");\n  const [total_points, setTotalPoints] = useState(0);\n  const [category, setCategory] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [motivationMessage, setMotivationMessage] = useState(\"\");\n  const [motivationH1, setMotivationH1] = useState(\"\");\n  const motivationH1Correct = [\n    \"Correct!\",\n    \"Well done!\",\n    \"You're a star\",\n    \"Super!\",\n  ];\n  const motivationH1Wrong = [\"Woops!\", \"Oh well..\", \"Next time!\"];\n  const [hasWonReward, setHasWonReward] = useState(false);\n  //const [brøk1, setBrøk1] = useState(\"\");\n  //const [brøk2, setBrøk2] = useState(\"\");\n  const history = useHistory();\n  const correctMotivation = [\n    \"You're a true math master. Let's do another question.\",\n    \"You are doing so great! Keep on going.\",\n  ];\n  const wrongMotivation = [\n    \"That wasn’t quite right. Take a look at the explanantion.\",\n    \"Math can be hard. Try taking a look at the explanation.\",\n    \"You still got this! Take a look at the explanation and keep going.\",\n  ];\n  const [active_mascot_index, setActiveMascotIndex] = useState(24);\n\n  const fetchQuestion = async (info) => {\n    setShowMotivation(false);\n    var activeMascotIndex = await fetchMascots(info.activeMascotId);\n    setActiveMascotIndex(activeMascotIndex);\n    const query = new Parse.Query(\"Questions\");\n    console.log(\n      \"Retrievestudent returned level: \" +\n        info.level +\n        \", correctids: \" +\n        info.correct\n    );\n    query.equalTo(\"category\", info.category);\n    query.equalTo(\"level\", info.level);\n    try {\n      let question = await query.find();\n      console.log(question);\n      let foundQuestion = false;\n      while (!foundQuestion) {\n        //TODO ændre til 9 når vi har fået spørgsmål ind i alle kategorier\n        let i = getRandomInt(3); //[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n        const currentId = question[i].id;\n        console.log(currentId);\n        if (!info.correct.includes(currentId)) {\n          console.log(\"This question is unanswered\");\n          const correct_answer = question[i].get(\"correct_answer\");\n          const description = question[i].get(\"description\");\n          const options = question[i].get(\"options\");\n          const hint = question[i].get(\"hint\");\n          const explanation = question[i].get(\"explanation\");\n          if (question[i].get(\"question_image\")) {\n            const questionImageURL = question[i].get(\"question_image\")._url;\n            setQuestionImage(questionImageURL);\n          }\n          if (question[i].get(\"explanation_image\")) {\n            const explanationImageURL =\n              question[i].get(\"explanation_image\")._url;\n            setExplanationImage(explanationImageURL);\n          }\n          setId(currentId);\n          /*if(explanation.includes(\"/fraction\")){\n            const splitArray = explanation.split(\"\");\n            const splitNumbers = splitArray[1].split(\"/\");\n            const number1 = splitNumbers[0];\n            const number2 = splitNumbers[1];\n            const brøk = \"<fraction> <numer>\" + number1 +\"</numer>\" + number2 + \"</fraction>\";\n            setBrøk1(brøk);\n          }*/\n          setDescription(description);\n          setOptions(options);\n          setCorrectAnswer(correct_answer);\n          setHint(hint);\n          setExplanation(explanation);\n          foundQuestion = true;\n        } else {\n          console.log(\"The question was in the correct id array\");\n        }\n      }\n    } catch (error) {\n      console.log(`Error! ${error.message}`);\n      Swal.fire({\n        title: \"Oops, something went wrong!\",\n        text: \"Please try to refresh the page\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n    }\n  };\n\n  const retrieveStudent = () => {\n    const category = getRandomCategory();\n    const student = Parse.User.current();\n    if (student) {\n      const total_points = student.get(\"total_points\");\n      const correct = student.get(category + \"_correct_ids\");\n      const level = student.get(category + \"_level\");\n      const count = student.get(\"practice_timer_count\");\n      console.log(count);\n      console.log(\"Student retrieved correctids: \" + correct);\n      setTotalPoints(total_points);\n      setCategory(category);\n      setCount(count);\n      var activeMascotId = student.get(\"active_mascot_id\");\n      return { level, correct, category, activeMascotId };\n    } else {\n      console.log(\"The user couldn't be retrieved\");\n      Swal.fire({\n        title: \"Oops, something went wrong!\",\n        text: \"Please try to refresh the page\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n    }\n  };\n\n  const fetchMascots = async (active_mascot_id) => {\n    const Mascots = new Parse.Object.extend(\"Mascot\");\n    const query = new Parse.Query(Mascots);\n    const mascotArray = await query.find();\n    var mascotIdArray = mascotArray.map((obj) => obj.id);\n    var mascotIndex = mascotIdArray.indexOf(active_mascot_id);\n    console.log(mascotIndex + \" \" + active_mascot_id);\n    return mascotIndex;\n  };\n\n  useEffect(() => {\n    fetchQuestion(retrieveStudent());\n  }, []);\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  const getRandomCategory = () => {\n    const categories = [\n      \"number\",\n      // \"algebra\",\n      \"measurement\",\n      // \"statistics\",\n      \"geometry\",\n    ];\n    //TODO Add alle kategorierne og ændre 3 til 5 når vi har spørgsmål nok\n    const randomNumber = getRandomInt(categories.length);\n    const category = categories[randomNumber];\n    console.log(\"Category: \" + category);\n    return category;\n  };\n\n  const getRandomMotivation = (motivationArray) => {\n    let motivation =\n      motivationArray[Math.floor(Math.random() * motivationArray.length)];\n    return motivation;\n  };\n\n  const handleChange = (e) => {\n    setChosenOption(e.target.value);\n  };\n\n  const toggleHint = () => {\n    if (showHint) {\n      setShowHint(false);\n    } else {\n      setShowWarning(false);\n      setShowHint(true);\n    }\n  };\n\n  const toggleExplanation = () => {\n    if (!showExplanation) {\n      const student = Parse.User.current();\n      if (student && explanation !== undefined) {\n        student.increment(\"checked_explanation\");\n        const totalexplanation = student.get(\"checked_explanation\");\n        if (\n          (totalexplanation % 20 === 0 || totalexplanation === 5) &&\n          0 < totalexplanation &&\n          totalexplanation < 81\n        ) {\n          const reward = getExplanationReward(totalexplanation);\n          student.add(\"reward_badge_ids\", reward);\n          const points = student.get(\"total_points\");\n          const rewardPoints = points + 50;\n          student.set(\"total_points\", rewardPoints);\n          setHasWonReward(true);\n        }\n        student.save();\n      }\n      setShowExplanation(true);\n    }\n  };\n\n  const checkAnswer = (option) => {\n    var optionClass = \"\";\n    if (option === chosenOption) {\n      if (option === correct_answer) {\n        optionClass = \"correct-answer\";\n      } else {\n        optionClass = \"wrong-answer\";\n      }\n    }\n    return optionClass;\n  };\n\n  const showSubmitWarning = () => {\n    setShowHint(false);\n    setShowWarning(true);\n  };\n\n  const showSubmitMotivation = () => {\n    setShowWarning(false);\n    setSubmitted(true);\n    setShowMotivation(true);\n    setShowHint(false);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!chosenOption) {\n      showSubmitWarning();\n    } else {\n      showSubmitMotivation();\n    }\n    try {\n      const student = Parse.User.current();\n      if (student) {\n        let initialCount = count;\n        student.set(\"practice_timer_count\", initialCount);\n        student.increment(\"total_answered_questions\");\n        if (correct_answer === chosenOption) {\n          setMotivationH1(getRandomMotivation(motivationH1Correct));\n          setMotivationMessage(getRandomMotivation(correctMotivation));\n          let new_total_points = total_points + 10;\n          student.set(\"total_points\", new_total_points);\n          student.add(category + \"_correct_ids\", currentQuestionId);\n          console.log(currentQuestionId);\n          student.increment(\"total_correct_questions\");\n          var correct = student.get(category + \"_correct_ids\");\n          //TODO ændrer når vi har alle spørgsmål i databasen\n          if (correct.length === 3) {\n            student.increment(category + \"_level\");\n            student.set(category + \"_correct_ids\", []);\n          }\n          console.log(\"Added to the database in submit: \" + correct);\n          console.log(\"The answer is correct!\");\n          const total_correct = student.get(\"total_correct_questions\");\n          const total_answered = student.get(\"total_answered_questions\");\n          if (\n            (total_answered % 20 === 0 || total_answered === 5) &&\n            0 < total_answered &&\n            total_answered < 81\n          ) {\n            const reward = getTotalAnsweredReward(total_answered);\n            student.add(\"reward_badge_ids\", reward);\n            setHasWonReward(true);\n            const rewardPoints = new_total_points + 50;\n            student.set(\"total_points\", rewardPoints);\n          }\n          if (\n            (total_correct % 20 === 0 || total_correct === 5) &&\n            0 < total_correct &&\n            total_correct < 81\n          ) {\n            const reward = getTotalCorrectReward(total_correct);\n            student.add(\"reward_badge_ids\", reward);\n            setHasWonReward(true);\n            const originalpoints = student.get(\"total_points\");\n            const rewardPoints = originalpoints + 50;\n            student.set(\"total_points\", rewardPoints);\n          }\n        } else {\n          setMotivationH1(getRandomMotivation(motivationH1Wrong));\n          setMotivationMessage(getRandomMotivation(wrongMotivation));\n          let new_total_points = total_points + 5;\n          student.set(\"total_points\", new_total_points);\n          const total_answered = student.get(\"total_answered_questions\");\n          if (\n            (total_answered % 20 === 0 || total_answered === 5) &&\n            0 < total_answered &&\n            total_answered < 81\n          ) {\n            const reward = getTotalAnsweredReward(total_answered);\n            student.add(\"reward_badge_ids\", reward);\n            setHasWonReward(true);\n            const rewardPoints = new_total_points + 50;\n            student.set(\"total_points\", rewardPoints);\n          }\n          console.log(\"The answer is NOT correct!\");\n        }\n        await student.save();\n      }\n    } catch (error) {\n      console.log(`Error! ${error.message}`);\n      Swal.fire({\n        title: \"Oops, something went wrong!\",\n        text: \"Please try to refresh the page\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n    }\n  };\n\n  const getTotalAnsweredReward = (length) => {\n    switch (length) {\n      case 5: {\n        return \"QmMHU6HOyE\";\n      }\n      case 20: {\n        return \"GwG4dzfCuT\";\n      }\n      case 40: {\n        return \"5IFox85lUC\";\n      }\n      case 60: {\n        return \"pjukkloh3r\";\n      }\n      case 80: {\n        return \"0qfqFayIZw\";\n      }\n      default: {\n        return \"\";\n      }\n    }\n  };\n\n  const getTotalCorrectReward = (length) => {\n    switch (length) {\n      case 5: {\n        return \"QzQhNUEEp3\";\n      }\n      case 20: {\n        return \"IxEXq05Whj\";\n      }\n      case 40: {\n        return \"tSi2TA2olv\";\n      }\n      case 60: {\n        return \"SlmCKp4FMX\";\n      }\n      case 80: {\n        return \"f6C0n4oGX6\";\n      }\n      default: {\n        return \"\";\n      }\n    }\n  };\n\n  const getExplanationReward = (length) => {\n    switch (length) {\n      case 5: {\n        return \"gRPbOWs9nE\";\n      }\n      case 20: {\n        return \"HwjknOcp4Y\";\n      }\n      case 40: {\n        return \"rCADOvIMcB\";\n      }\n      case 60: {\n        return \"zonuJlC6ZN\";\n      }\n      case 80: {\n        return \"TBYdE77gyD\";\n      }\n      default: {\n        return \"\";\n      }\n    }\n  };\n\n  const handleSeeReward = () => {\n    history.push(\"/reward\");\n  };\n\n  useEffect(() => {\n    const timer = count > 0 && setInterval(() => setCount(count - 1), 1000);\n    if (count == 0) {\n      handleBreakTime();\n    }\n    return () => clearInterval(timer);\n  }, [count]);\n\n  const handleBreakTime = () => {\n    history.push(\"/break\");\n  };\n\n  const handleClose = () => {\n    setHasWonReward(false);\n  };\n\n  return (\n    <Container fluid className=\"multiple-container\">\n      <Row className=\"question-row\">\n        <Col className=\"question-col\">\n          <div className=\"category-h1\">\n            {category ? (\n              <h1>{category.charAt(0).toUpperCase() + category.slice(1)}</h1>\n            ) : (\n              <></>\n            )}\n          </div>\n          <Card className=\"title-card\">\n            <Card.Body className=\"text-center\">\n              <Card.Title className=\"question-description\">\n                {description}\n              </Card.Title>\n            </Card.Body>\n          </Card>\n          <Image src={questionImage} className=\"question-img\" />\n          <Form>\n            <Card className=\"option-card\">\n              <Card.Body className=\"text-center\">\n                <fieldset className=\"options-form\">\n                  <Form.Group as={Row}>\n                    <Col className=\"options\">\n                      {options.map((option) => (\n                        <div key={`${option}`}>\n                          <Form.Check\n                            type=\"radio\"\n                            value={option}\n                            label={`${option}`}\n                            name=\"formHorizontalRadios\"\n                            onChange={handleChange}\n                            disabled={submitted ? true : false}\n                            className={\n                              submitted ? checkAnswer(`${option}`) : \"\"\n                            }\n                          />\n                        </div>\n                      ))}\n                    </Col>\n                  </Form.Group>\n                </fieldset>\n              </Card.Body>\n            </Card>\n\n            <Form.Group as={Row} className=\"mb-8 mt-8\">\n              <div>\n                {showExplanation ? (\n                  explanation !== undefined ? (\n                    <div className=\"explanation-div\">\n                      {explanationImage ? (\n                        <div className=\"explanation-img\">\n                          <Image\n                            src={explanationImage}\n                            className=\"explanation-img\"\n                          />\n                        </div>\n                      ) : (\n                        <></>\n                      )}\n\n                      <div className=\"explanation-text\">{explanation}</div>\n                    </div>\n                  ) : (\n                    <div\n                      className=\"explanation-div\"\n                      style={{ display: showExplanation ? \"\" : \"none\" }}\n                    >\n                      <div className=\"explanation-text\">\n                        Sorry, there is no explanation for this questions.\n                      </div>\n                    </div>\n                  )\n                ) : (\n                  <div></div>\n                )}\n              </div>\n              {submitted ? (\n                <div className=\"btn-div\">\n                  <Button\n                    className=\"expl-btn quiz-btn\"\n                    onClick={toggleExplanation}\n                  >\n                    Explanation\n                    <BsFileText className=\"btn-icon\" />\n                  </Button>\n                  <Button\n                    className=\"next-btn quiz-btn\"\n                    onClick={() => fetchQuestion(retrieveStudent)}\n                    type=\"submit\"\n                  >\n                    Next question\n                    <BsChevronRight className=\"btn-icon\" />\n                  </Button>\n                </div>\n              ) : (\n                <div className=\"btn-div\">\n                  {showHint ? (\n                    <Button\n                      className=\"close-hint-btn quiz-btn\"\n                      onClick={toggleHint}\n                    >\n                      Close hint\n                      <BsLifePreserver className=\"btn-icon\" />\n                    </Button>\n                  ) : (\n                    <Button className=\"hint-btn quiz-btn\" onClick={toggleHint}>\n                      Hint\n                      <BsLifePreserver className=\"btn-icon\" />\n                    </Button>\n                  )}\n                  <Button\n                    id=\"sub-btn\"\n                    className=\"sub-btn quiz-btn\"\n                    onClick={handleSubmit}\n                    type=\"submit\"\n                  >\n                    Submit <BsCheckCircle className=\"btn-icon\" />\n                  </Button>\n                </div>\n              )}\n            </Form.Group>\n          </Form>\n        </Col>\n        <Col md=\"auto\" className=\"mascot-col\">\n          <div style={{ display: showHint ? \"\" : \"none\" }}>\n            <Image src={SpeakBoble} className=\"speakboble\" />\n\n            {hint ? (\n              <div className=\"speakboble-text\">\n                <p>{hint}</p>\n              </div>\n            ) : (\n              <div className=\"speakboble-text\">\n                <h2>Sorry,</h2>\n                <p>\n                  there's no hint for this question. Try ask your teacher for\n                  help.\n                </p>\n              </div>\n            )}\n          </div>\n          <div style={{ display: showWarning ? \"\" : \"none\" }}>\n            <Image src={SpeakBoble} className=\"speakboble\" />\n            <div className=\"speakboble-text\">\n              <h2>Hold your horses!</h2>\n              <p>You need to pick an option.</p>\n            </div>\n          </div>\n          <div style={{ display: showMotivation ? \"\" : \"none\" }}>\n            <Image src={SpeakBoble} className=\"speakboble\" />\n            <div className=\"speakboble-text\">\n              <h2>{motivationH1}</h2>\n              <p>{motivationMessage}</p>\n            </div>\n          </div>\n          <Image\n            src={getMascotImage(active_mascot_index)}\n            className=\"quiz-mascot-img\"\n          />\n        </Col>\n      </Row>\n      {hasWonReward ? (\n        <div className=\"text-center reward-popup-container\">\n          <p className=\"reward_message\">\n            Congratulations! You have won a reward, check it out!\n          </p>\n          <Button className=\"see_reward_btn\" onClick={handleSeeReward}>\n            See reward <BsTrophy />\n          </Button>\n          <Button className=\"close_btn\" onClick={handleClose}>\n            Close <BsX size={21} />\n          </Button>\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/NavbarPracticeMode\";\nimport MultipleChoice from \"../components/PracticeSection/MultipleChoice\";\n\nexport default function PracticePage() {\n  return (\n    <>\n      <Navbar />\n      <MultipleChoice />\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/breakCamel.831e2421.png\";","import React, { useEffect } from \"react\";\nimport { Container, Row, Col, Button, Image } from \"react-bootstrap\";\nimport \"./Break.css\";\nimport { useHistory } from \"react-router\";\nimport { VscSmiley } from \"react-icons/vsc\";\nimport Camel from \"../../images/Break/breakCamel.png\";\n\nexport default function Break() {\n  const history = useHistory();\n\n  const handleGoBack = () => {\n    history.push(\"/frontpage\");\n  };\n\n  useEffect(() => {}, []);\n  return (\n    <Container fluid className=\"break-container\">\n      <Row className=\"reward-row\">\n        <Col>\n          <Image src={Camel} style={{ width: 566 }} />\n        </Col>\n        <Col className=\"text-div\">\n          <h2 className=\"h2-break\">Time to take a break.</h2>\n          <p className=\"p-break\">\n            Good job! You’re on a roll. <br /> Take 5 minutes to cool off, and\n            come <br />\n            back to earn more points.\n          </p>\n          <div className=\"button-div \">\n            <Button\n              className=\"done-break-btn\"\n              variant=\"primary\"\n              onClick={handleGoBack}\n            >\n              I’m done with my break <VscSmiley className=\"btn-icon\" />\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/NavbarPracticeMode\";\nimport Break from \"../components/Break/Break\";\n\nexport default function RewardPage() {\n  return (\n    <div>\n      <Navbar />\n      <Break />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Tree, CardList, Key } from \"react-bootstrap-icons\";\nimport { useHistory } from \"react-router\";\nimport { Container, Button, ButtonToolbar } from \"react-bootstrap\";\nimport \"./LoginRegisterCard.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nexport default function LoginRegisterCard() {\n  const history = useHistory();\n\n  //Redirects the user to the login-page\n  const handleLogin = () => {\n    history.push(\"/login\");\n  };\n\n  //Redirects the user to the register-page\n  const handleRegister = () => {\n    history.push(\"/register\");\n  };\n\n  return (\n    <Container className=\"login-container\">\n      <div className=\"text-center\">\n        <Tree size={30} color=\"#4D4D4D\" />\n        <h1 className=\"login-register-h1\">\n          Welcome to <br />\n          Maths Camp\n        </h1>\n        <p className=\"login-register-p\">Where exercising your brain is fun.</p>\n      </div>\n      <ButtonToolbar className=\"btn-toolbar login-register-toolbar\">\n        <Button onClick={handleRegister} className=\"register-btn landing-btn\">\n          Register\n          <br />\n          <CardList size={70} />\n        </Button>\n        <Button onClick={handleLogin} className=\"login-btn landing-btn\">\n          Log in\n          <br />\n          <Key size={70} />\n        </Button>\n      </ButtonToolbar>\n    </Container>\n  );\n}\n","import NavBarPre from \"../components/Navbar/NavbarPrelogin\";\nimport LoginRegisterCard from \"../components/Login/LoginRegisterCard\";\nimport Footer from \"../components/Footer/Footer\";\nimport { Columns, Display } from \"react-bootstrap-icons\";\n\nexport default function LandingPage() {\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <NavBarPre />\n      <LoginRegisterCard />\n      <Footer />\n    </div>\n  );\n}\n","import { Container, Form, Col, Row, Button } from \"react-bootstrap\";\nimport { CardList, Tree } from \"react-bootstrap-icons\";\nimport { useHistory } from \"react-router\";\nimport React, { useState } from \"react\";\nimport Parse from \"parse\";\nimport Swal from \"sweetalert2\";\nimport \"./RegisterComponent.css\";\n\nexport default function RegisterComponent() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const history = useHistory();\n\n  //Updates the state of the username when the input changes\n  const updateUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  //Updates the state of the password when the input changes\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  //Updates the state of the parental email when the input changes\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  /*Signs the user in if there is a password and a username. signUp() checks \n  if the username and email are unique and stores the password securely */\n  const handleReg = async (e) => {\n    e.preventDefault();\n    if (password === \"\" || username === \"\") {\n      Swal.fire({\n        title: \"Oops!\",\n        text: \"You need to fill out a username and password\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n      return;\n    } else {\n      console.log(\"I am setting the users information\");\n      const user = new Parse.User();\n      user.set(\"username\", username);\n      user.set(\"password\", password);\n      user.set(\"email\", email);\n      var date = new Date().toLocaleDateString();\n      user.set(\"total_points\", 1000);\n      user.add(\"active_days\", date);\n      user.add(\"owned_mascot_ids\", \"arB9fEWmFp\");\n      try {\n        await user.signUp();\n        history.push(\"/frontpage\");\n      } catch (error) {\n        Swal.fire({\n          title: \"Oops!\",\n          text:\n            \"Something went wrong while registering you as a user: \" +\n            error.message +\n            \" Please try again!\",\n          icon: \"error\",\n          confirmButtonText: \"OK\",\n        });\n        console.log(error.message);\n      }\n    }\n  };\n\n  return (\n    <Container className=\"login-container\">\n      <div className=\"text-center\">\n        <Tree size={30} color=\"#4D4D4D\" />\n        <h1 className=\"register-h1\">Welcome!</h1>\n        <p className=\"register-p\">Create a user and play today</p>\n      </div>\n      <Container className=\"form-container\">\n        <Row>\n          <Col>\n            <Form onSubmit={handleReg}>\n              <Form.Group controlId=\"formUserName\" className=\"upperform\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control\n                  type=\"name\"\n                  placeholder=\"Enter a username\"\n                  onChange={updateUsername}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formPassword\" className=\"upperform\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter a password\"\n                  onChange={updatePassword}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formEmail\" className=\"upperform\">\n                <Form.Label>Parental email (optional)</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter an email\"\n                  onChange={updateEmail}\n                />\n                <p className=\"information-text\">\n                  This email will be used for password recovery\n                </p>\n              </Form.Group>\n              <Button className=\"registerbtn\" variant=\"primary\" type=\"submit\">\n                Register <CardList />\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  );\n}\n","import NavBarPre from \"../components/Navbar/NavbarPrelogin\";\nimport RegisterComponent from \"../components/Login/RegisterComponent\";\nimport Footer from \"../components/Footer/Footer\";\n\nexport default function RegisterPage() {\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <NavBarPre />\n      <RegisterComponent />\n      <Footer />\n    </div>\n  );\n}\n","import { Key, Tree } from \"react-bootstrap-icons\";\nimport { Container, Form, Col, Row, Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router\";\nimport React, { useState } from \"react\";\nimport Parse from \"parse\";\nimport Swal from \"sweetalert2\";\nimport \"./LoginComponent.css\";\n\nexport default function LoginComponent() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  //Updates the state of the username when the input changes\n  const updateUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  //Updates the state of the password when the input changes\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  //Attempts to log in the user if they have filled out a username and a password\n  const handleLogUser = async (e) => {\n    e.preventDefault();\n    if (password === \"\" || username === \"\") {\n      Swal.fire({\n        title: \"Oops!\",\n        text: \"You need to fill out a username and password\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n      return;\n    }\n    try {\n      const user = await Parse.User.logIn(username, password);\n      if (user) {\n        var active = await user.get(\"active_days\");\n        var date = new Date().toLocaleDateString();\n        if (!active.find((element) => element === date)) {\n          user.add(\"active_days\", date);\n          user.save();\n        }\n        history.push(\"/frontpage\");\n      }\n    } catch (error) {\n      Swal.fire({\n        title: \"Oops!\",\n        text: \"The username or password is incorrect!\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n    }\n  };\n\n  const handleResetPassword = () => {\n    history.push(\"/requestReset\");\n  };\n\n  return (\n    <Container className=\"login-container\">\n      <div className=\"text-center\">\n        <Tree size={30} color=\"#4D4D4D\" />\n        <h1 className=\"welcome-h1\">Welcome back!</h1>\n        <p className=\"welcome-p\">Log in to play</p>\n      </div>\n      <Container className=\"form-container\">\n        <Row>\n          <Col>\n            <Form onSubmit={handleLogUser}>\n              <Form.Group controlId=\"formUserName\" className=\"upperform\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control\n                  type=\"name\"\n                  placeholder=\"Enter your username\"\n                  onChange={updateUsername}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formPassword\" className=\"upperform\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter your password\"\n                  onChange={updatePassword}\n                />\n                <p className=\"forgot-text\" onClick={handleResetPassword}>\n                  Forgot your password? Click me!\n                </p>\n              </Form.Group>\n              <Button className=\"login-button\" variant=\"primary\" type=\"submit\">\n                Log in <Key size={20} />\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  );\n}\n","import NavBarPre from \"../components/Navbar/NavbarPrelogin\";\nimport LoginComponent from \"../components/Login/LoginComponent\";\nimport Footer from \"../components/Footer/Footer\";\n\nexport default function LoginPage() {\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <NavBarPre />\n      <LoginComponent />\n      <Footer />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Button, Container, Row, Col } from \"react-bootstrap\";\nimport { Gem, Person } from \"react-bootstrap-icons\";\nimport { BsChevronRight } from \"react-icons/bs\";\nimport { useHistory } from \"react-router\";\nimport { getMascotImage } from \"../Utils\";\nimport Swal from \"sweetalert2\";\nimport Parse from \"parse\";\nimport \"./EditMascot.css\";\n\nexport default function EditMascot() {\n  const history = useHistory();\n  const [mascots, setMascots] = useState([]);\n  const [owned_mascot_ids, setOwnedMascotIds] = useState([]);\n  const [active_mascot_id, setActiveMascotId] = useState(\"\");\n  const [total_points, setTotalPoints] = useState(0);\n\n  //Redirects the user to the frontpage\n  const handleGoBack = () => {\n    history.push(\"/frontpage\");\n  };\n\n  /*Fetches the mascots from the database and removes the blank mascot used as a placeholder\n  on the frontpage and in the multiplechoice section*/\n  const fetchMascots = async () => {\n    const Mascots = new Parse.Object.extend(\"Mascot\");\n    const query = new Parse.Query(Mascots);\n    const result = await query.find();\n    const removeBlank = result.filter((e) => e.attributes.required_points > 0);\n    setMascots(removeBlank);\n  };\n\n  useEffect(() => {\n    fetchMascots();\n  }, []);\n\n  //Fetches the student and sets the states used in this component\n  const fetchStudent = async () => {\n    const user = Parse.User.current();\n    if (user) {\n      var owned = user.get(\"owned_mascot_ids\");\n      var active = user.get(\"active_mascot_id\");\n      var points = user.get(\"total_points\");\n      setOwnedMascotIds(owned);\n      setActiveMascotId(active);\n      setTotalPoints(points);\n    } else {\n      Swal.fire({\n        title: \"Oops, something went wrong!\",\n        text: \"Please try to refresh the page\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchStudent();\n  }, []);\n\n  /*Checks if a student has sufficient points to buy a mascot. If they do, checks if \n  the student has won a reward for owning a certain number of mascots*/\n  const buyMascot = (mascotId, mascotPrice, points) => {\n    if (points >= mascotPrice) {\n      const user = Parse.User.current();\n      if (user) {\n        user.add(\"owned_mascot_ids\", mascotId);\n        points -= mascotPrice;\n        setTotalPoints(points);\n        user.set(\"total_points\", points);\n        var owned = user.get(\"owned_mascot_ids\");\n        setOwnedMascotIds(owned);\n        var wonRewardId = getMascotReward(owned.length);\n        var hasWon = wonRewardId !== \"\";\n        if (hasWon) {\n          user.add(\"reward_badge_ids\", wonRewardId);\n          const rewardPoints = points + 50;\n          user.set(\"total_points\", rewardPoints);\n          setTotalPoints(rewardPoints);\n        }\n        user.save();\n        if (hasWon) {\n          history.push(\"/reward\");\n        }\n      }\n    } else {\n      Swal.fire({\n        title: \"You don't have enough points to buy this mascot!\",\n        text: \"You can earn more points by answering math questions\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n    }\n  };\n\n  //Returns the id of a reward based on the amount of mascots a user owns\n  const getMascotReward = (length) => {\n    switch (length) {\n      case 3: {\n        return \"Q6AkAx4llp\";\n      }\n      case 5: {\n        return \"skz6uxOpI6\";\n      }\n      case 7: {\n        return \"6U3vVNGZOO\";\n      }\n      case 9: {\n        return \"A66daWHfAy\";\n      }\n      case 11: {\n        return \"liTmaZ30Tb\";\n      }\n      default: {\n        return \"\";\n      }\n    }\n  };\n\n  //Sets the user's active mascot to the mascotId given as a parameter\n  const pickMascot = (mascotId) => {\n    const user = Parse.User.current();\n    if (user) {\n      user.set(\"active_mascot_id\", mascotId);\n      user.save();\n      setActiveMascotId(mascotId);\n    }\n  };\n\n  return (\n    <Container className=\"mascot-container\">\n      <div className=\"point-container\">\n        <div className=\"points-div\">\n          <Gem color=\"#F2B84B\" size={50} />\n          <div className=\"point-circle\">\n            <p className=\"top-point-text text-center\">{total_points}</p>\n          </div>\n        </div>\n        <div>\n          <Button className=\"go-back-btn\" onClick={handleGoBack}>\n            Go back <BsChevronRight />\n          </Button>\n        </div>\n      </div>\n      <Row>\n        {mascots.map((mascot) => (\n          <Col key={mascot.id}>\n            <Card\n              className=\"mascot-card\"\n              style={{\n                width: \"16rem\",\n                outline:\n                  mascot.id === active_mascot_id ? \"8px dashed #FBBB00\" : \"\",\n                boxShadow:\n                  mascot.id === active_mascot_id\n                    ? \"\"\n                    : \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n              }}\n            >\n              <Card.Img\n                variant=\"top\"\n                src={getMascotImage(mascots.indexOf(mascot))}\n              />\n              <Card.Body className=\"text-center\">\n                <Card.Title className=\"mascot-name\">\n                  {mascot.attributes.name}\n                </Card.Title>\n                <Card.Text className=\"point-text\">\n                  <Gem color=\"#F2B84B\" /> {mascot.attributes.required_points}{\" \"}\n                  points\n                </Card.Text>\n                <div>\n                  {owned_mascot_ids.includes(mascot.id) ? (\n                    [\n                      active_mascot_id === mascot.id ? (\n                        <div key={mascot.id} className=\"active-mascot-btn\">\n                          Your mascot\n                        </div>\n                      ) : (\n                        <Button\n                          key={mascot.id}\n                          className=\"pick-mascot-btn\"\n                          variant=\"primary\"\n                          onClick={() => pickMascot(mascot.id)}\n                        >\n                          Pick mascot <Person />\n                        </Button>\n                      ),\n                    ]\n                  ) : (\n                    <Button\n                      key={mascot.id}\n                      className=\"buy-mascot-btn\"\n                      variant=\"primary\"\n                      onClick={() =>\n                        buyMascot(\n                          mascot.id,\n                          mascot.attributes.required_points,\n                          total_points\n                        )\n                      }\n                    >\n                      Buy mascot <Gem />\n                    </Button>\n                  )}\n                </div>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n      <div className=\"go-back-btn-container\">\n        <Button className=\"go-back-btn\" onClick={handleGoBack}>\n          Go back <BsChevronRight />\n        </Button>\n      </div>\n    </Container>\n  );\n}\n","import NavbarPost from \"../components/Navbar/NavbarPostlogin\";\nimport EditMascot from \"../components/EditMascot/EditMascot\";\nimport Footer from \"../components/Footer/Footer\";\n\nexport default function EditMascotPage() {\n  return (\n    <div>\n      <NavbarPost />\n      <EditMascot />\n      <Footer />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Button, Image } from \"react-bootstrap\";\nimport { useHistory } from \"react-router\";\nimport { VscSmiley } from \"react-icons/vsc\";\nimport { BsChevronRight } from \"react-icons/bs\";\nimport { Trophy } from \"react-bootstrap-icons\";\nimport { getRewardImage } from \"../Utils\";\nimport Parse from \"parse\";\nimport \"./RewardSection.css\";\n\nexport default function RewardSection() {\n  const [description, setDescription] = useState(\"\");\n  const [imgsrc, setImage] = useState(\"\");\n  const history = useHistory();\n\n  //Redirects the user to the page they were on when winning the badge\n  const handleGoBack = () => {\n    history.goBack();\n  };\n\n  //Redirects the user to the frontpage with their collection of badges\n  const handleCollection = () => {\n    history.push(\"/frontpage\");\n  };\n\n  /*Gets the last element from the user's reward_badge_ids array and uses this to\n  retrieve the correct badge image and description from the database*/\n  const getReward = async () => {\n    const user = Parse.User.current();\n    var reward_id;\n    if (user) {\n      const reward_badge_ids = user.get(\"reward_badge_ids\");\n      reward_id = reward_badge_ids.at(-1);\n    } else {\n      alert(\"Failed to retrieve the user.\");\n    }\n    const Rewards = new Parse.Object.extend(\"Reward\");\n    const query = new Parse.Query(Rewards);\n    const rewardArray = await query.find();\n    query.equalTo(\"objectId\", reward_id);\n    const reward = await query.first();\n    const description = reward.attributes.description;\n    const index = rewardArray.map((element) => element.id).indexOf(reward_id);\n    const imgsrc = getRewardImage(index);\n    setDescription(description);\n    setImage(imgsrc);\n    return reward;\n  };\n\n  useEffect(() => {\n    getReward();\n  }, []);\n\n  return (\n    <Container fluid className=\"reward-container\">\n      <Row className=\"reward-row\">\n        <Col>\n          <Image src={imgsrc} style={{ width: 566 }} />\n        </Col>\n        <Col className=\"text-div\">\n          <h2 className=\"h2-reward\">\n            Congratulations! <br /> You won a new badge\n          </h2>\n          <p className=\"p-reward\">\n            You earned your badge for this task:\n            <br /> <b>{description} </b> <Trophy className=\"trophy-icon\" />{\" \"}\n            <br />\n            You earned 50 points! Good job!\n            <br />\n          </p>\n          <div className=\"button-div \">\n            <Button\n              className=\"practice-again-btn quiz_btn\"\n              onClick={handleCollection}\n            >\n              See collection <VscSmiley className=\"btn-icon\" />\n            </Button>\n            <Button\n              className=\"go-collection-btn quiz_btn\"\n              onClick={handleGoBack}\n            >\n              Go back <BsChevronRight className=\"btn-icon\" />\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/NavbarPracticeMode\";\nimport RewardSection from \"../components/RewardSection/RewardSection\";\n\nexport default function RewardPage() {\n  return (\n    <div>\n      <Navbar />\n      <RewardSection />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport Parse from \"parse\";\nimport { Form, Container, Row, Col, Button } from \"react-bootstrap\";\nimport { Tree, Envelope, ChevronRight } from \"react-bootstrap-icons\";\nimport { useHistory } from \"react-router\";\nimport Swal from \"sweetalert2\";\nimport \"./RequestReset.css\";\n\nexport default function RequestReset() {\n  const [email, setEmail] = useState(\"\");\n  const history = useHistory();\n\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const doRequestPasswordReset = async () => {\n    try {\n      await Parse.User.requestPasswordReset(email);\n      Swal.fire({\n        title: \"Succes!\",\n        text: `Please check ${email} to proceed with password reset.`,\n        icon: \"success\",\n        confirmButtonText: \"OK\",\n      });\n      return true;\n    } catch (error) {\n      Swal.fire({\n        title: \"Error!\",\n        text: `An error occured while sending the recovery email: ${error.message}. Try again!`,\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n      return false;\n    }\n  };\n\n  const handleGoBack = () => {\n    history.goBack();\n  };\n\n  return (\n    <div>\n      <Container className=\"email-container\">\n        <div className=\"text-center\">\n          <Tree size={30} color=\"#4D4D4D\" />\n          <h1 className=\"reset-h1\">Password recovery</h1>\n          <p className=\"reset-p\">\n            Enter the email connected to your account below and <br />\n            click send to recieve a password recovery email\n          </p>\n        </div>\n        <Container className=\"form-container\">\n          <Row>\n            <Col>\n              <Form>\n                <Form.Group controlId=\"formEmail\" className=\"upperform\">\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Enter an email\"\n                    onChange={updateEmail}\n                  />\n                </Form.Group>\n                <Button\n                  className=\"send-button\"\n                  variant=\"primary\"\n                  onClick={doRequestPasswordReset}\n                >\n                  Send <Envelope />\n                </Button>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n      <Button\n        className=\"go-back-button\"\n        variant=\"primary\"\n        onClick={handleGoBack}\n      >\n        Go back <ChevronRight />\n      </Button>\n    </div>\n  );\n}\n","import NavBarPre from \"../components/Navbar/NavbarPrelogin\";\nimport ResetComponent from \"../components/Reset/RequestReset\";\n\nexport default function Reset() {\n  return (\n    <div>\n      <NavBarPre />\n      <ResetComponent />\n    </div>\n  );\n}","import React, { useEffect, useState } from \"react\";\nimport { Card, Button, Container, Row, Col } from \"react-bootstrap\";\nimport { Trophy } from \"react-bootstrap-icons\";\nimport { BsChevronRight } from \"react-icons/bs\";\nimport { useHistory } from \"react-router\";\nimport Parse from \"parse\";\nimport \"./BadgeInfo.css\";\nimport Swal from \"sweetalert2\";\nimport { getRewardImage } from \"../Utils\";\n\nexport default function BadgeInfo() {\n  const history = useHistory();\n  const [rewards, setRewards] = useState([]);\n  const [owned_rewards, setStudentRewards] = useState([]);\n\n  //Redirects the user to the frontpage\n  const handleGoBack = () => {\n    history.push(\"/frontpage\");\n  };\n\n  const fetchRewards = async () => {\n    const Rewards = new Parse.Object.extend(\"Reward\");\n    const query = new Parse.Query(Rewards);\n    const result = await query.find();\n    setRewards(result);\n  };\n\n  useEffect(() => {\n    fetchRewards();\n  }, []);\n\n  const retrieveStudent = async () => {\n    const student = Parse.User.current();\n    if (student) {\n      var owned_rewards = student.get(\"reward_badge_ids\");\n      setStudentRewards(owned_rewards);\n    } else {\n      console.log(\"The user couldn't be retrieved\");\n      Swal.fire({\n        title: \"Oops, something went wrong!\",\n        text: \"Please try to refresh the page\",\n        icon: \"error\",\n        confirmButtonText: \"OK\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    retrieveStudent();\n  }, []);\n\n  return (\n    <Container className=\"rewardi-container\">\n      <div className=\"rewardi-point-container\">\n        <div className=\"points-div\">\n          <Trophy color=\"#F2B84B\" size={50} />\n          <div className=\"header-circle\">\n            <p className=\"top-point-text text-center\">Badge Library</p>\n          </div>\n        </div>\n        <div>\n          <Button className=\"go-back-btn\" onClick={handleGoBack}>\n            Go back <BsChevronRight />\n          </Button>\n        </div>\n      </div>\n      <Row>\n        {rewards.map((reward) => (\n          <Col key={reward.id}>\n            <Card className=\"reward-card\">\n              {owned_rewards.includes(reward.id) ? (\n                <Card.Img\n                  className=\"unlocked-card selector\"\n                  variant=\"top\"\n                  src={getRewardImage(rewards.indexOf(reward))}\n                />\n              ) : (\n                <Card.Img\n                  className=\"locked-card selector\"\n                  variant=\"top\"\n                  src={getRewardImage(rewards.indexOf(reward))}\n                />\n              )}\n              <Card.Body className=\"text-center\">\n                <Card.Title className=\"point-text\">\n                  {reward.attributes.description}\n                </Card.Title>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </Container>\n  );\n}\n","import NavbarPost from \"../components/Navbar/NavbarPostlogin\";\nimport BadgeInfo from \"../components/BadgeInfo/BadgeInfo\";\nimport Footer from \"../components/Footer/Footer\";\n\nexport default function EditMascotPage() {\n  return (\n    <div>\n      <NavbarPost />\n      <BadgeInfo />\n      <Footer />\n    </div>\n  );\n}\n","import React, { useRef } from \"react\";\nimport emailjs from \"emailjs-com\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport { Tree } from \"react-bootstrap-icons\";\nimport \"./Contact.css\";\n\nexport default function Contact() {\n  const form = useRef();\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs\n      .sendForm(\n        \"service_sfq75k1\",\n        \"template_6009aok\",\n        form.current,\n        \"user_7OclaIRRNbXghSbtXYdJH\"\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n    e.target.reset();\n  };\n\n  return (\n    <Container fluid className=\"contact-container\">\n      <Row className=\"justify-content-md-center email-row\">\n        <Col sx md=\"8\" lg=\"5\" className=\"email-col\">\n          <div className=\"text-center email-text-div\">\n            <Tree size={30} color=\"#4D4D4D\" />\n            <h1 className=\"welcome-h1\">Send us an email</h1>\n            <p className=\"welcome-p\">We would love to hear from you</p>\n          </div>\n          <Form ref={form} action=\"#\" onSubmit={sendEmail}>\n            <Form.Group className=\"mb-3\">\n              <Form.Control\n                type=\"text\"\n                name=\"user_name\"\n                placeholder=\"Your name\"\n                size=\"lg\"\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n              <Form.Control\n                type=\"email\"\n                name=\"user_email\"\n                placeholder=\"your@email.com\"\n                size=\"lg\"\n              />\n            </Form.Group>\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n            >\n              <Form.Control\n                as=\"textarea\"\n                name=\"message\"\n                placeholder=\"Send us a message here :)\"\n                style={{ height: \"150px\" }}\n              />\n            </Form.Group>\n            <div className=\"btn-div\">\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                className=\"sub-btn email-btn\"\n              >\n                Submit\n              </Button>\n            </div>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Contact from \"../components/Contact/Contact\";\nimport Footer from \"../components/Footer/Footer\";\nimport Navbar from \"../components/Navbar/NavbarPostlogin\";\n\nexport default function ContactPage() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        margin: \"0\",\n      }}\n    >\n      <Navbar />\n      <Contact />\n      <Footer />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport \"./Footer.css\";\nimport { Button } from \"react-bootstrap\";\n\nconst Footer = () => {\n  const history = useHistory();\n\n  return (\n    <div className=\"footer-c\">\n      <p className=\"rights\">\n        ©2021 All rights reserved. Maths Camp is created by Anne Schjødt and\n        Frederikke Drejer in collaboration with IT University of Copenhagen\n      </p>\n    </div>\n  );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/mascot1.94682470.png\";","export default __webpack_public_path__ + \"static/media/mascot2.6b178a17.png\";","export default __webpack_public_path__ + \"static/media/mascot3.985f864f.png\";","export default __webpack_public_path__ + \"static/media/mascot4.c7f4c018.png\";","export default __webpack_public_path__ + \"static/media/mascot5.e8049a3c.png\";","export default __webpack_public_path__ + \"static/media/mascot6.f11f238c.png\";","export default __webpack_public_path__ + \"static/media/mascot7.cacb936c.png\";","export default __webpack_public_path__ + \"static/media/mascot8.0812ee4c.png\";","export default __webpack_public_path__ + \"static/media/mascot9.52956d24.png\";","export default __webpack_public_path__ + \"static/media/mascot10.81176592.png\";","export default __webpack_public_path__ + \"static/media/mascot11.3398e0b3.png\";","export default __webpack_public_path__ + \"static/media/mascot12.e618046c.png\";","export default __webpack_public_path__ + \"static/media/mascot13.3c5f4097.png\";","export default __webpack_public_path__ + \"static/media/mascot14.ae342c59.png\";","export default __webpack_public_path__ + \"static/media/mascot15.60d4dc05.png\";","export default __webpack_public_path__ + \"static/media/mascot16.b95cfb63.png\";","export default __webpack_public_path__ + \"static/media/mascot17.f1c18f6a.png\";","export default __webpack_public_path__ + \"static/media/mascot18.ab9e0475.png\";","export default __webpack_public_path__ + \"static/media/mascot19.09b164b3.png\";","export default __webpack_public_path__ + \"static/media/mascot20.5abc4ee0.png\";","export default __webpack_public_path__ + \"static/media/mascot21.f987818f.png\";","export default __webpack_public_path__ + \"static/media/mascot22.d63f3e81.png\";","export default __webpack_public_path__ + \"static/media/mascot23.22f60342.png\";","export default __webpack_public_path__ + \"static/media/mascot24.59017d10.png\";","export default __webpack_public_path__ + \"static/media/blank-image.60cfc62d.PNG\";","export default __webpack_public_path__ + \"static/media/orange.40586fa1.png\";","export default __webpack_public_path__ + \"static/media/head-scarf.7c85250e.png\";","export default __webpack_public_path__ + \"static/media/sky.33f7eb59.png\";","export default __webpack_public_path__ + \"static/media/mouth.c0689d7f.png\";","export default __webpack_public_path__ + \"static/media/cat.b764e54e.png\";","export default __webpack_public_path__ + \"static/media/croissant.e4cfdfe6.png\";","export default __webpack_public_path__ + \"static/media/red-hair.4ace0ba2.png\";","export default __webpack_public_path__ + \"static/media/mountains.bee317de.png\";","export default __webpack_public_path__ + \"static/media/bag.9adccfb9.png\";","export default __webpack_public_path__ + \"static/media/bear.04ad86ed.png\";","export default __webpack_public_path__ + \"static/media/cake.81477d6b.png\";","export default __webpack_public_path__ + \"static/media/old-man.1f67452d.png\";","export default __webpack_public_path__ + \"static/media/egg.c64a509a.png\";","export default __webpack_public_path__ + \"static/media/heart.66be8194.png\";","export default __webpack_public_path__ + \"static/media/fingers-crossed.69f09aba.png\";","export default __webpack_public_path__ + \"static/media/avocado.8a01b7f0.png\";","export default __webpack_public_path__ + \"static/media/black-hat.fab0ea28.png\";","export default __webpack_public_path__ + \"static/media/globe.b0446136.png\";","export default __webpack_public_path__ + \"static/media/glasses.3998c3b1.png\";","export default __webpack_public_path__ + \"static/media/milk.cf6903e7.png\";","export default __webpack_public_path__ + \"static/media/strawberry.d8dbd802.png\";","export default __webpack_public_path__ + \"static/media/helmet-man.0a26f7b3.png\";","export default __webpack_public_path__ + \"static/media/coffee.1f0958d6.png\";","export default __webpack_public_path__ + \"static/media/love-letter.6d60dcee.png\";","export default __webpack_public_path__ + \"static/media/calculator-badge.09340ec3.png\";","import Mascot1 from \"../images/Mascots/mascot1.png\";\nimport Mascot2 from \"../images/Mascots/mascot2.png\";\nimport Mascot3 from \"../images/Mascots/mascot3.png\";\nimport Mascot4 from \"../images/Mascots/mascot4.png\";\nimport Mascot5 from \"../images/Mascots/mascot5.png\";\nimport Mascot6 from \"../images/Mascots/mascot6.png\";\nimport Mascot7 from \"../images/Mascots/mascot7.png\";\nimport Mascot8 from \"../images/Mascots/mascot8.png\";\nimport Mascot9 from \"../images/Mascots/mascot9.png\";\nimport Mascot10 from \"../images/Mascots/mascot10.png\";\nimport Mascot11 from \"../images/Mascots/mascot11.png\";\nimport Mascot12 from \"../images/Mascots/mascot12.png\";\nimport Mascot13 from \"../images/Mascots/mascot13.png\";\nimport Mascot14 from \"../images/Mascots/mascot14.png\";\nimport Mascot15 from \"../images/Mascots/mascot15.png\";\nimport Mascot16 from \"../images/Mascots/mascot16.png\";\nimport Mascot17 from \"../images/Mascots/mascot17.png\";\nimport Mascot18 from \"../images/Mascots/mascot18.png\";\nimport Mascot19 from \"../images/Mascots/mascot19.png\";\nimport Mascot20 from \"../images/Mascots/mascot20.png\";\nimport Mascot21 from \"../images/Mascots/mascot21.png\";\nimport Mascot22 from \"../images/Mascots/mascot22.png\";\nimport Mascot23 from \"../images/Mascots/mascot23.png\";\nimport Mascot24 from \"../images/Mascots/mascot24.png\";\nimport BlankImage from \"../images/Mascots/blank-image.PNG\";\nimport Badge1 from \"../images/Rewards/orange.png\";\nimport Badge2 from \"../images/Rewards/head-scarf.png\";\nimport Badge3 from \"../images/Rewards/sky.png\";\nimport Badge4 from \"../images/Rewards/mouth.png\";\nimport Badge5 from \"../images/Rewards/cat.png\";\nimport Badge6 from \"../images/Rewards/croissant.png\";\nimport Badge7 from \"../images/Rewards/red-hair.png\";\nimport Badge8 from \"../images/Rewards/mountains.png\";\nimport Badge9 from \"../images/Rewards/bag.png\";\nimport Badge10 from \"../images/Rewards/bear.png\";\nimport Badge11 from \"../images/Rewards/cake.png\";\nimport Badge12 from \"../images/Rewards/old-man.png\";\nimport Badge13 from \"../images/Rewards/egg.png\";\nimport Badge14 from \"../images/Rewards/heart.png\";\nimport Badge15 from \"../images/Rewards/fingers-crossed.png\";\nimport Badge16 from \"../images/Rewards/avocado.png\";\nimport Badge17 from \"../images/Rewards/black-hat.png\";\nimport Badge18 from \"../images/Rewards/globe.png\";\nimport Badge19 from \"../images/Rewards/glasses.png\";\nimport Badge20 from \"../images/Rewards/milk.png\";\nimport Badge21 from \"../images/Rewards/strawberry.png\";\nimport Badge22 from \"../images/Rewards/helmet-man.png\";\nimport Badge23 from \"../images/Rewards/coffee.png\";\nimport Badge24 from \"../images/Rewards/love-letter.png\";\nimport Badge25 from \"../images/Rewards/calculator-badge.png\";\nimport Swal from \"sweetalert2\";\n\n/*Returns a mascot image based on the index of the mascot in the mascot array \nretrieved from the database*/\nexport const getMascotImage = (index) => {\n  switch(index){\n    case 0: {\n      return Mascot1;\n    }\n    case 1: {\n      return Mascot2;\n    }\n    case 2: {\n      return Mascot3;\n    }\n    case 3: {\n      return Mascot4;\n    }\n    case 4: {\n      return Mascot5;\n    }\n    case 5: {\n      return Mascot6;\n    }\n    case 6: {\n      return Mascot7;\n    }\n    case 7: {\n      return Mascot8;\n    }\n    case 8: {\n      return Mascot9;\n    }\n    case 9: {\n      return Mascot10;\n    }\n    case 10: {\n      return Mascot11;\n    }\n    case 11: {\n      return Mascot12;\n    }\n    case 12: {\n      return Mascot13;\n    }\n    case 13: {\n      return Mascot14;\n    }\n    case 14: {\n      return Mascot15;\n    }\n    case 15: {\n      return Mascot16;\n    }\n    case 16: {\n      return Mascot17;\n    }\n    case 17: {\n      return Mascot18;\n    }\n    case 18: {\n      return Mascot19;\n    }\n    case 19: {\n      return Mascot20;\n    }\n    case 20: {\n      return Mascot21;\n    }\n    case 21: {\n      return Mascot22;\n    }\n    case 22: {\n      return Mascot23;\n    }\n    case 23: {\n      return Mascot24;\n    }\n    case 24:{\n      return BlankImage;\n    }\n    default:\n      return BlankImage;\n  }\n}\n\n/*Returns a reward image based on the index of the reward in the reward array \nretrieved from the database*/\nexport const getRewardImage = (index) => {\n  switch (index) {\n    case 0: {\n      return Badge1;\n    }\n    case 5: {\n      return Badge2;\n    }\n    case 10: {\n      return Badge3;\n    }\n    case 15: {\n      return Badge4;\n    }\n    case 20: {\n      return Badge5;\n    }\n    case 1: {\n      return Badge6;\n    }\n    case 6: {\n      return Badge7;\n    }\n    case 11: {\n      return Badge8;\n    }\n    case 16: {\n      return Badge9;\n    }\n    case 21: {\n      return Badge10;\n    }\n    case 2: {\n      return Badge11;\n    }\n    case 7: {\n      return Badge12;\n    }\n    case 12: {\n      return Badge13;\n    }\n    case 17: {\n      return Badge14;\n    }\n    case 22: {\n      return Badge15;\n    }\n    case 3: {\n      return Badge16;\n    }\n    case 8: {\n      return Badge17;\n    }\n    case 13: {\n      return Badge18;\n    }\n    case 18: {\n      return Badge19;\n    }\n    case 23: {\n      return Badge20;\n    }\n    case 4: {\n      return Badge21;\n    }\n    case 9: {\n      return Badge22;\n    }\n    case 14: {\n      return Badge23;\n    }\n    case 19: {\n      return Badge24;\n    }\n    case 24: {\n      return Badge25;\n    }\n    default:\n      console.log(\"The mascot images cannot be loaded\");\n      Swal.fire({\n        title: \"Oops, something went wrong!\",\n        text: \"Please try to refresh the page\",\n        icon: \"error\",\n        confirmButtonText: \"OK\"\n      })\n  }\n};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 862;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Parse from \"parse\";\n\nParse.serverURL = \"https://mathapp.b4a.io\";\nParse.initialize(\n  \"V9n8X7uIrcCMcJre0nqCFfnyaka6MwkvrN5vnBcv\",\n  \"iTt0twJCFnn5sNxOXzNb7Ek9YC6mEKRQ98aoVey8\"\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport Logo from \"../../images/Logo/logo-prelogin.svg\";\nimport \"./NavbarPrelogin.css\";\nimport { useHistory } from \"react-router\";\n\nexport default function NavbarPrelogin() {\n  const history = useHistory();\n\n  //Redirects the user to the frontpage\n  const handleBack = () => {\n    history.push(\"/\");\n  };\n\n  return (\n    <Container fluid className=\"navbar-prelogin\" onClick={handleBack}>\n      <Row className=\"row-prelogin\">\n        <Col>\n          <div className=\"logo-container-prelogin\">\n            <img\n              className=\"logo-prelogin\"\n              src={Logo}\n              alt=\"Logo of a calculator\"\n            ></img>\n          </div>\n        </Col>\n        <Col className=\"app-name-col-prelogin\">\n          <h5 className=\"navbar-brand-prelogin\">Maths Camp</h5>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo-postlogin.7ab2393a.svg\";","import React from \"react\";\nimport { Button, Container, Col, Row } from \"react-bootstrap\";\nimport { useHistory } from \"react-router\";\nimport { DoorOpen, HouseDoor } from \"react-bootstrap-icons\";\nimport { BsMailbox } from \"react-icons/bs\";\nimport Logo from \"../../images/Logo/logo-postlogin.svg\";\nimport Parse from \"parse\";\nimport \"./NavbarPostlogin.css\";\n\nexport default function NavbarPostlogin() {\n  const history = useHistory();\n\n  const resetTimer = async () => {\n    const student = Parse.User.current();\n    if (student) {\n      try {\n        student.set(\"practice_timer_count\", 2100);\n        await student.save();\n      } catch {\n        console.log(\"timer did not reset\");\n      }\n    }\n  };\n\n  //Logs out the user and redirects the user to the landingpage\n  const handleLogOut = () => {\n    Parse.User.logOut();\n    resetTimer();\n    history.push(\"/\");\n  };\n\n  //Redirects the user to the frontpage\n  const handleHome = () => {\n    history.push(\"/frontpage\");\n  };\n\n  const handleSendEmail = () => {\n    history.push(\"/contact\");\n  };\n\n  return (\n    <Container fluid className=\"navbar-postlogin\">\n      <Row>\n        <Col>\n          <img\n            className=\"logo-postlogin\"\n            src={Logo}\n            alt=\"Logo of a calculator\"\n            onClick={handleHome}\n          ></img>\n        </Col>\n        <Col className=\"app-name-col-postlogin\">\n          <h6 className=\"navbar-brand-postlogin\">Maths Camp</h6>\n        </Col>\n        <Col>\n          <div className=\"btn-toolbar postlogin-toolbar\">\n            <Button\n              className=\"btn-primary lg home-btn-postlogin\"\n              onClick={handleHome}\n            >\n              Home <HouseDoor size={15} />\n            </Button>\n            <Button\n              className=\"contact-link contact-btn\"\n              onClick={handleSendEmail}\n            >\n              Contact <BsMailbox size={15} />\n            </Button>\n            <Button\n              className=\"btn-primary lg logout-btn-postlogin\"\n              onClick={handleLogOut}\n            >\n              Log out <DoorOpen size={15} />\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n"],"sourceRoot":""}